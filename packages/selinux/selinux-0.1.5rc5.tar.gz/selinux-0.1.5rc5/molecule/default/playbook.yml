---

- name: Build the distributables
  hosts: localhost
  tasks:

    - name: build the packages
      shell: |
        set -euox pipefail
        pwd
        rm -rf dist
        python setup.py bdist_wheel sdist
      args:
        executable: /bin/bash
        chdir: ../..

- name: Converge
  hosts: all
  become: true
  vars:
    whl_file: "{{ lookup('fileglob', '{{ playbook_dir }}/../../dist/*.whl') }}"
    tar_gz_file: "{{ lookup('fileglob', '{{ playbook_dir }}/../../dist/*.tar.gz') }}"
  tasks:

    - name: deploy packages
      copy:
        src: "{{ item }}"
        dest: /tmp/src/
      loop:
        - "{{ whl_file }}"
        - "{{ tar_gz_file }}"

    - name: test install from wheel to virtualenv
      environment:
        PYTHONWARNINGS: ignore:DEPRECATION::pip._internal.cli.base_command
        PIP_DISABLE_PIP_VERSION_CHECK: 1
      shell: |
        # -u not included due https://github.com/pypa/virtualenv/issues/1029
        set -exo pipefail
        {{ item }} -m virtualenv --version >/dev/null 2>&1 || {{ item }} -m pip install --user virtualenv
        {{ item }} -m virtualenv ~/v{{ index }}
        source ~/v{{ index }}/bin/activate
        {{ item }} -m pip install -v file:///tmp/src/{{ whl_file | basename }}
        # check that we can import it
        {{ item }} -c "import selinux; assert selinux.is_selinux_enabled() in [0, 1]"
        deactivate
        rm -rf ~/v{{ index }}
      args:
        executable: /bin/bash
      loop: "{{ pythons }}"
      loop_control:
        index_var: index

    - name: install w/o virtualenv does not mess original library
      environment:
        PYTHONWARNINGS: ignore:DEPRECATION::pip._internal.cli.base_command
        PIP_DISABLE_PIP_VERSION_CHECK: 1
      shell: |
        set -euxo pipefail
        {{ item }} -c "import selinux; assert selinux.is_selinux_enabled() in [0, 1]"
        set
        type pip3
        {{ item }} -m pip install -v file:///tmp/src/{{ whl_file | basename }}
        {{ item }} -c "import selinux; assert selinux.is_selinux_enabled() in [0, 1]"
      args:
        executable: /bin/bash
      loop: "{{ pythons }}"
