
# zxbasmtab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftRSHIFTLSHIFTBANDBORBXORleftPLUSMINUSleftMULDIVMODrightPOWrightUMINUSA ADC ADD ADDR AF ALIGN AND APO B BAND BC BIT BOR BXOR C CALL CCF CO COMMA CP CPD CPDR CPI CPIR CPL D DAA DE DEC DEFB DEFS DEFW DI DIV DJNZ E EI END ENDP EQU EX EXX H HALT HL I ID IM IN INC INCBIN IND INDR INI INIR INTEGER IX IXH IXL IY IYH IYL JP JR L LD LDD LDDR LDI LDIR LOCAL LP LPP LSHIFT M MINUS MOD MUL NAMESPACE NC NEG NEWLINE NOP NZ OR ORG OTDR OTIR OUT OUTD OUTI P PE PLUS PO POP POW PROC PUSH R RES RET RETI RETN RL RLA RLC RLCA RLD RP RPP RR RRA RRC RRCA RRD RSHIFT RST SBC SCF SET SLA SLL SP SRA SRL STRING SUB UMINUS XOR Z _INIT _LINE start : program\n              | program endline\n     endline : END NEWLINE\n     endline : END expr NEWLINE\n                | END pexpr NEWLINE\n     program : line\n     program : program line\n     line : ID EQU expr NEWLINE\n             | ID EQU pexpr NEWLINE\n     line : asms NEWLINE\n             | asms CO NEWLINE\n     asms :\n     asms : asm\n     asms : asms CO asm\n     asm : ID\n     asm : LD reg8 COMMA reg8_hl\n            | LD reg8_hl COMMA reg8\n            | LD reg8 COMMA reg8\n            | LD SP COMMA HL\n            | LD SP COMMA reg16i\n            | LD A COMMA reg8\n            | LD reg8 COMMA A\n            | LD reg8_hl COMMA A\n            | LD A COMMA reg8_hl\n            | LD A COMMA A\n            | LD A COMMA I\n            | LD I COMMA A\n            | LD A COMMA R\n            | LD R COMMA A\n            | LD A COMMA reg8i\n            | LD reg8i COMMA A\n            | LD reg8 COMMA reg8i\n            | LD reg8i COMMA regBCDE\n            | LD reg8i COMMA reg8i\n     asm : LD A COMMA LP BC RP\n            | LD A COMMA LP DE RP\n            | LD LP BC RP COMMA A\n            | LD LP DE RP COMMA A\n     asm : PROC\n     asm : ENDP\n     asm : LOCAL id_list\n     id_list : ID\n     id_list : id_list COMMA ID\n     asm : DEFB number_list\n            | DEFB STRING\n     asm : DEFS number_list\n     asm : DEFW number_list\n     number_list : expr\n                    | pexpr\n     number_list : number_list COMMA expr\n                    | number_list COMMA pexpr\n     asm : LD reg8_I COMMA reg8\n            | LD reg8_I COMMA A\n     asm : LD reg8 COMMA reg8_I\n            | LD A COMMA reg8_I\n     reg8_hl : LP HL RP\n        reg8_I : LP IX PLUS expr RP\n               | LP IX MINUS expr RP\n               | LP IY PLUS expr RP\n               | LP IY MINUS expr RP\n               | LP IX PLUS pexpr RP\n               | LP IX MINUS pexpr RP\n               | LP IY PLUS pexpr RP\n               | LP IY MINUS pexpr RP\n     asm : EX AF COMMA AF APO\n     asm : EX DE COMMA HL\n     asm : ORG expr\n            | ORG pexpr\n     asm : NAMESPACE ID\n     asm : ALIGN expr\n            | ALIGN pexpr\n     asm : INCBIN STRING\n     asm : EX LP SP RP COMMA reg16i\n            | EX LP SP RP COMMA HL\n     asm : INC inc_reg\n            | DEC inc_reg\n     asm : INC reg8_I\n            | DEC reg8_I\n     asm : LD reg8 COMMA expr\n            | LD reg8 COMMA pexpr\n            | LD reg16 COMMA expr\n            | LD reg8_hl COMMA expr\n            | LD A COMMA expr\n            | LD SP COMMA expr\n            | LD reg8i COMMA expr\n     asm : LD reg8_I COMMA expr\n     asm : JP reg8_hl\n            | JP LP reg16i RP\n     asm : SBC A COMMA reg8\n            | SBC A COMMA reg8i\n            | SBC A COMMA A\n            | SBC A COMMA reg8_hl\n            | SBC HL COMMA SP\n            | SBC HL COMMA BC\n            | SBC HL COMMA DE\n            | SBC HL COMMA HL\n            | ADD A COMMA reg8\n            | ADD A COMMA reg8i\n            | ADD A COMMA A\n            | ADD A COMMA reg8_hl\n            | ADC A COMMA reg8\n            | ADC A COMMA reg8i\n            | ADC A COMMA A\n            | ADC A COMMA reg8_hl\n            | ADD HL COMMA BC\n            | ADD HL COMMA DE\n            | ADD HL COMMA HL\n            | ADD HL COMMA SP\n            | ADC HL COMMA BC\n            | ADC HL COMMA DE\n            | ADC HL COMMA HL\n            | ADC HL COMMA SP\n            | ADD reg16i COMMA BC\n            | ADD reg16i COMMA DE\n            | ADD reg16i COMMA HL\n            | ADD reg16i COMMA SP\n            | ADD reg16i COMMA reg16i\n     asm : SBC A COMMA expr\n            | SBC A COMMA pexpr\n            | ADD A COMMA expr\n            | ADD A COMMA pexpr\n            | ADC A COMMA expr\n            | ADC A COMMA pexpr\n     asm : SBC A COMMA reg8_I\n            | ADD A COMMA reg8_I\n            | ADC A COMMA reg8_I\n     asm : bitwiseop reg8\n            | bitwiseop reg8i\n            | bitwiseop A\n            | bitwiseop reg8_hl\n     asm : bitwiseop reg8_I\n     asm : bitwiseop expr\n            | bitwiseop pexpr\n     bitwiseop : OR\n              | AND\n              | XOR\n              | SUB\n              | CP\n     asm : PUSH AF\n            | PUSH reg16\n            | POP AF\n            | POP reg16\n     asm : LD pexpr COMMA A\n            | LD pexpr COMMA reg16\n            | LD pexpr COMMA SP\n     asm : LD A COMMA pexpr\n            | LD reg16 COMMA pexpr\n            | LD SP COMMA pexpr\n     asm : rotation reg8\n            | rotation reg8_hl\n            | rotation A\n     asm : rotation reg8_I\n     asm : bitop expr COMMA A\n            | bitop pexpr COMMA A\n            | bitop expr COMMA reg8\n            | bitop pexpr COMMA reg8\n            | bitop expr COMMA reg8_hl\n            | bitop pexpr COMMA reg8_hl\n     asm : bitop expr COMMA reg8_I\n            | bitop pexpr COMMA reg8_I\n     bitop : BIT\n              | RES\n              | SET\n     rotation : RR\n                 | RL\n                 | RRC\n                 | RLC\n                 | SLA\n                 | SLL\n                 | SRA\n                 | SRL\n     inc_reg : SP\n                | reg8\n                | reg16\n                | reg8_hl\n                | A\n                | reg8i\n     reg8 : H\n             | L\n             | regBCDE\n     regBCDE : B\n                | C\n                | D\n                | E\n     reg8i : IXH\n              | IXL\n              | IYH\n              | IYL\n     reg16 : BC\n             | DE\n             | HL\n             | reg16i\n     reg16i : IX\n               | IY\n     asm : JP jp_flags COMMA expr\n            | JP jp_flags COMMA pexpr\n            | CALL jp_flags COMMA expr\n            | CALL jp_flags COMMA pexpr\n     asm : RET jp_flags\n     jp_flags : P\n                 | M\n                 | PO\n                 | PE\n                 | jr_flags\n     asm : JR jr_flags COMMA expr\n            | JR jr_flags COMMA pexpr\n     jr_flags : Z\n                 | C\n                 | NZ\n                 | NC\n     asm : JP expr\n            | JR expr\n            | CALL expr\n            | DJNZ expr\n            | JP pexpr\n            | JR pexpr\n            | CALL pexpr\n            | DJNZ pexpr\n     asm : RST expr\n     asm : IM expr\n        asm : IN A COMMA LP C RP\n            | IN reg8 COMMA LP C RP\n        asm : OUT LP C RP COMMA A\n            | OUT LP C RP COMMA reg8\n     asm : IN A COMMA pexpr\n     asm : OUT pexpr COMMA A\n     asm : NOP\n            | EXX\n            | CCF\n            | SCF\n            | LDIR\n            | LDI\n            | LDDR\n            | LDD\n            | CPIR\n            | CPI\n            | CPDR\n            | CPD\n            | DAA\n            | NEG\n            | CPL\n            | HALT\n            | EI\n            | DI\n            | OUTD\n            | OUTI\n            | OTDR\n            | OTIR\n            | IND\n            | INI\n            | INDR\n            | INIR\n            | RET\n            | RETI\n            | RETN\n            | RLA\n            | RLCA\n            | RRA\n            | RRCA\n            | RLD\n            | RRD\n     expr : expr BAND expr\n             | expr BOR expr\n             | expr BXOR expr\n             | expr PLUS expr\n             | expr MINUS expr\n             | expr MUL expr\n             | expr DIV expr\n             | expr MOD expr\n             | expr POW expr\n             | expr LSHIFT expr\n             | expr RSHIFT expr\n             | pexpr BAND expr\n             | pexpr BOR expr\n             | pexpr BXOR expr\n             | pexpr PLUS expr\n             | pexpr MINUS expr\n             | pexpr MUL expr\n             | pexpr DIV expr\n             | pexpr MOD expr\n             | pexpr POW expr\n             | pexpr LSHIFT expr\n             | pexpr RSHIFT expr\n             | expr BAND pexpr\n             | expr BOR pexpr\n             | expr BXOR pexpr\n             | expr PLUS pexpr\n             | expr MINUS pexpr\n             | expr MUL pexpr\n             | expr DIV pexpr\n             | expr MOD pexpr\n             | expr POW pexpr\n             | expr LSHIFT pexpr\n             | expr RSHIFT pexpr\n             | pexpr BAND pexpr\n             | pexpr BOR pexpr\n             | pexpr BXOR pexpr\n             | pexpr PLUS pexpr\n             | pexpr MINUS pexpr\n             | pexpr MUL pexpr\n             | pexpr DIV pexpr\n             | pexpr MOD pexpr\n             | pexpr POW pexpr\n             | pexpr LSHIFT pexpr\n             | pexpr RSHIFT pexpr\n     pexpr : LP expr RP\n     expr : MINUS expr %prec UMINUS\n     expr : INTEGER\n     expr : ID\n     expr : LPP expr RPP\n     expr : ADDR\n     line : preproc_line\n     preproc_line : _LINE INTEGER\n     preproc_line : _LINE INTEGER STRING\n     preproc_line : _INIT ID\n    '
    
_lr_action_items = {'ID':([0,2,3,6,9,13,14,15,16,18,19,20,24,28,32,33,35,36,37,38,75,76,77,78,79,88,89,90,92,93,94,95,96,97,98,109,133,136,138,162,189,215,222,225,226,227,228,229,232,239,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,272,273,275,278,282,283,290,291,312,325,326,328,329,399,443,],[4,4,-6,-312,98,128,135,135,135,135,146,135,135,135,135,135,135,135,135,135,-134,-135,-136,-137,-138,-161,-162,-163,-7,135,135,-10,224,-313,-315,135,135,135,135,135,135,135,-11,-314,135,135,135,135,135,135,135,338,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,-8,-9,135,135,135,135,135,135,135,]),'NEWLINE':([0,2,3,4,5,6,7,11,12,34,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,92,93,95,96,97,98,102,103,108,110,111,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,134,135,137,139,140,144,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,164,165,166,167,168,169,170,171,172,173,174,182,183,184,185,186,187,188,190,191,192,193,194,195,196,197,202,203,204,206,207,208,209,210,212,218,219,220,221,222,223,224,225,266,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,313,314,315,316,317,318,319,320,321,324,327,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,387,389,390,391,392,393,394,395,396,397,398,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,444,447,460,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,],[-12,-12,-6,-15,95,-312,-13,-39,-40,-253,-227,-228,-229,-230,-231,-232,-233,-234,-235,-236,-237,-238,-239,-240,-241,-242,-243,-244,-245,-246,-247,-248,-249,-250,-251,-252,-254,-255,-256,-257,-258,-259,-260,-261,-7,217,-10,222,-313,-315,-191,-192,-180,-189,-190,-178,-179,-185,-186,-187,-188,-193,-194,-181,-182,-183,-184,-41,-42,-44,-45,-48,-49,-308,-309,-311,-46,-47,-67,-68,-69,-70,-71,-72,-75,-77,-172,-173,-174,-175,-176,-177,-76,-78,-87,-211,-215,-200,-201,-202,-203,-204,-207,-208,-209,-210,-127,-128,-129,-130,-131,-132,-133,-139,-140,-141,-142,-149,-150,-151,-152,-213,-217,-199,-212,-216,-214,-218,-219,-220,288,289,290,291,-11,-14,-15,-314,-307,-8,-9,-18,-16,-22,-32,-54,-79,-80,-17,-23,-82,-19,-20,-84,-148,-25,-21,-24,-26,-28,-30,-55,-83,-146,-27,-29,-34,-31,-33,-85,-56,-306,-52,-53,-86,-143,-144,-145,-81,-147,-43,-50,-51,-262,-284,-263,-285,-264,-286,-265,-287,-266,-288,-267,-289,-268,-290,-269,-291,-270,-292,-271,-293,-272,-294,-295,-273,-296,-274,-297,-275,-298,-276,-299,-277,-300,-278,-301,-279,-302,-280,-303,-281,-304,-282,-305,-283,-310,-66,-88,-195,-196,-91,-89,-90,-92,-118,-119,-124,-96,-93,-94,-95,-99,-97,-98,-100,-120,-121,-125,-107,-105,-106,-108,-117,-113,-114,-115,-116,-103,-101,-102,-104,-122,-123,-126,-111,-109,-110,-112,-153,-155,-157,-159,-154,-156,-158,-160,-197,-198,-205,-206,-225,-226,-65,-35,-36,-37,-38,-57,-61,-58,-62,-59,-63,-60,-64,-73,-74,-221,-222,-223,-224,]),'CO':([0,2,3,4,5,6,7,11,12,34,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,92,95,97,98,102,103,108,110,111,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,134,135,137,139,140,144,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,164,165,166,167,168,169,170,171,172,173,174,182,183,184,185,186,187,188,190,191,192,193,194,195,196,197,202,203,204,206,207,208,209,210,212,222,223,224,225,266,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,313,314,315,316,317,318,319,320,321,324,327,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,387,389,390,391,392,393,394,395,396,397,398,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,444,447,460,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,],[-12,-12,-6,-15,96,-312,-13,-39,-40,-253,-227,-228,-229,-230,-231,-232,-233,-234,-235,-236,-237,-238,-239,-240,-241,-242,-243,-244,-245,-246,-247,-248,-249,-250,-251,-252,-254,-255,-256,-257,-258,-259,-260,-261,-7,-10,-313,-315,-191,-192,-180,-189,-190,-178,-179,-185,-186,-187,-188,-193,-194,-181,-182,-183,-184,-41,-42,-44,-45,-48,-49,-308,-309,-311,-46,-47,-67,-68,-69,-70,-71,-72,-75,-77,-172,-173,-174,-175,-176,-177,-76,-78,-87,-211,-215,-200,-201,-202,-203,-204,-207,-208,-209,-210,-127,-128,-129,-130,-131,-132,-133,-139,-140,-141,-142,-149,-150,-151,-152,-213,-217,-199,-212,-216,-214,-218,-219,-220,-11,-14,-15,-314,-307,-8,-9,-18,-16,-22,-32,-54,-79,-80,-17,-23,-82,-19,-20,-84,-148,-25,-21,-24,-26,-28,-30,-55,-83,-146,-27,-29,-34,-31,-33,-85,-56,-306,-52,-53,-86,-143,-144,-145,-81,-147,-43,-50,-51,-262,-284,-263,-285,-264,-286,-265,-287,-266,-288,-267,-289,-268,-290,-269,-291,-270,-292,-271,-293,-272,-294,-295,-273,-296,-274,-297,-275,-298,-276,-299,-277,-300,-278,-301,-279,-302,-280,-303,-281,-304,-282,-305,-283,-310,-66,-88,-195,-196,-91,-89,-90,-92,-118,-119,-124,-96,-93,-94,-95,-99,-97,-98,-100,-120,-121,-125,-107,-105,-106,-108,-117,-113,-114,-115,-116,-103,-101,-102,-104,-122,-123,-126,-111,-109,-110,-112,-153,-155,-157,-159,-154,-156,-158,-160,-197,-198,-205,-206,-225,-226,-65,-35,-36,-37,-38,-57,-61,-58,-62,-59,-63,-60,-64,-73,-74,-221,-222,-223,-224,]),'_LINE':([0,2,3,6,92,95,97,98,222,225,290,291,],[8,8,-6,-312,-7,-10,-313,-315,-11,-314,-8,-9,]),'_INIT':([0,2,3,6,92,95,97,98,222,225,290,291,],[9,9,-6,-312,-7,-10,-313,-315,-11,-314,-8,-9,]),'LD':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[10,10,-6,-312,-7,-10,10,-313,-315,-11,-314,-8,-9,]),'PROC':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[11,11,-6,-312,-7,-10,11,-313,-315,-11,-314,-8,-9,]),'ENDP':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[12,12,-6,-312,-7,-10,12,-313,-315,-11,-314,-8,-9,]),'LOCAL':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[13,13,-6,-312,-7,-10,13,-313,-315,-11,-314,-8,-9,]),'DEFB':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[14,14,-6,-312,-7,-10,14,-313,-315,-11,-314,-8,-9,]),'DEFS':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[15,15,-6,-312,-7,-10,15,-313,-315,-11,-314,-8,-9,]),'DEFW':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[16,16,-6,-312,-7,-10,16,-313,-315,-11,-314,-8,-9,]),'EX':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[17,17,-6,-312,-7,-10,17,-313,-315,-11,-314,-8,-9,]),'ORG':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[18,18,-6,-312,-7,-10,18,-313,-315,-11,-314,-8,-9,]),'NAMESPACE':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[19,19,-6,-312,-7,-10,19,-313,-315,-11,-314,-8,-9,]),'ALIGN':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[20,20,-6,-312,-7,-10,20,-313,-315,-11,-314,-8,-9,]),'INCBIN':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[21,21,-6,-312,-7,-10,21,-313,-315,-11,-314,-8,-9,]),'INC':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[22,22,-6,-312,-7,-10,22,-313,-315,-11,-314,-8,-9,]),'DEC':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[23,23,-6,-312,-7,-10,23,-313,-315,-11,-314,-8,-9,]),'JP':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[24,24,-6,-312,-7,-10,24,-313,-315,-11,-314,-8,-9,]),'SBC':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[25,25,-6,-312,-7,-10,25,-313,-315,-11,-314,-8,-9,]),'ADD':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[26,26,-6,-312,-7,-10,26,-313,-315,-11,-314,-8,-9,]),'ADC':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[27,27,-6,-312,-7,-10,27,-313,-315,-11,-314,-8,-9,]),'PUSH':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[29,29,-6,-312,-7,-10,29,-313,-315,-11,-314,-8,-9,]),'POP':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[30,30,-6,-312,-7,-10,30,-313,-315,-11,-314,-8,-9,]),'CALL':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[33,33,-6,-312,-7,-10,33,-313,-315,-11,-314,-8,-9,]),'RET':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[34,34,-6,-312,-7,-10,34,-313,-315,-11,-314,-8,-9,]),'JR':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[35,35,-6,-312,-7,-10,35,-313,-315,-11,-314,-8,-9,]),'DJNZ':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[36,36,-6,-312,-7,-10,36,-313,-315,-11,-314,-8,-9,]),'RST':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[37,37,-6,-312,-7,-10,37,-313,-315,-11,-314,-8,-9,]),'IM':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[38,38,-6,-312,-7,-10,38,-313,-315,-11,-314,-8,-9,]),'IN':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[39,39,-6,-312,-7,-10,39,-313,-315,-11,-314,-8,-9,]),'OUT':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[40,40,-6,-312,-7,-10,40,-313,-315,-11,-314,-8,-9,]),'NOP':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[41,41,-6,-312,-7,-10,41,-313,-315,-11,-314,-8,-9,]),'EXX':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[42,42,-6,-312,-7,-10,42,-313,-315,-11,-314,-8,-9,]),'CCF':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[43,43,-6,-312,-7,-10,43,-313,-315,-11,-314,-8,-9,]),'SCF':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[44,44,-6,-312,-7,-10,44,-313,-315,-11,-314,-8,-9,]),'LDIR':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[45,45,-6,-312,-7,-10,45,-313,-315,-11,-314,-8,-9,]),'LDI':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[46,46,-6,-312,-7,-10,46,-313,-315,-11,-314,-8,-9,]),'LDDR':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[47,47,-6,-312,-7,-10,47,-313,-315,-11,-314,-8,-9,]),'LDD':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[48,48,-6,-312,-7,-10,48,-313,-315,-11,-314,-8,-9,]),'CPIR':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[49,49,-6,-312,-7,-10,49,-313,-315,-11,-314,-8,-9,]),'CPI':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[50,50,-6,-312,-7,-10,50,-313,-315,-11,-314,-8,-9,]),'CPDR':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[51,51,-6,-312,-7,-10,51,-313,-315,-11,-314,-8,-9,]),'CPD':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[52,52,-6,-312,-7,-10,52,-313,-315,-11,-314,-8,-9,]),'DAA':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[53,53,-6,-312,-7,-10,53,-313,-315,-11,-314,-8,-9,]),'NEG':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[54,54,-6,-312,-7,-10,54,-313,-315,-11,-314,-8,-9,]),'CPL':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[55,55,-6,-312,-7,-10,55,-313,-315,-11,-314,-8,-9,]),'HALT':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[56,56,-6,-312,-7,-10,56,-313,-315,-11,-314,-8,-9,]),'EI':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[57,57,-6,-312,-7,-10,57,-313,-315,-11,-314,-8,-9,]),'DI':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[58,58,-6,-312,-7,-10,58,-313,-315,-11,-314,-8,-9,]),'OUTD':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[59,59,-6,-312,-7,-10,59,-313,-315,-11,-314,-8,-9,]),'OUTI':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[60,60,-6,-312,-7,-10,60,-313,-315,-11,-314,-8,-9,]),'OTDR':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[61,61,-6,-312,-7,-10,61,-313,-315,-11,-314,-8,-9,]),'OTIR':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[62,62,-6,-312,-7,-10,62,-313,-315,-11,-314,-8,-9,]),'IND':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[63,63,-6,-312,-7,-10,63,-313,-315,-11,-314,-8,-9,]),'INI':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[64,64,-6,-312,-7,-10,64,-313,-315,-11,-314,-8,-9,]),'INDR':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[65,65,-6,-312,-7,-10,65,-313,-315,-11,-314,-8,-9,]),'INIR':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[66,66,-6,-312,-7,-10,66,-313,-315,-11,-314,-8,-9,]),'RETI':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[67,67,-6,-312,-7,-10,67,-313,-315,-11,-314,-8,-9,]),'RETN':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[68,68,-6,-312,-7,-10,68,-313,-315,-11,-314,-8,-9,]),'RLA':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[69,69,-6,-312,-7,-10,69,-313,-315,-11,-314,-8,-9,]),'RLCA':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[70,70,-6,-312,-7,-10,70,-313,-315,-11,-314,-8,-9,]),'RRA':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[71,71,-6,-312,-7,-10,71,-313,-315,-11,-314,-8,-9,]),'RRCA':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[72,72,-6,-312,-7,-10,72,-313,-315,-11,-314,-8,-9,]),'RLD':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[73,73,-6,-312,-7,-10,73,-313,-315,-11,-314,-8,-9,]),'RRD':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[74,74,-6,-312,-7,-10,74,-313,-315,-11,-314,-8,-9,]),'OR':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[75,75,-6,-312,-7,-10,75,-313,-315,-11,-314,-8,-9,]),'AND':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[76,76,-6,-312,-7,-10,76,-313,-315,-11,-314,-8,-9,]),'XOR':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[77,77,-6,-312,-7,-10,77,-313,-315,-11,-314,-8,-9,]),'SUB':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[78,78,-6,-312,-7,-10,78,-313,-315,-11,-314,-8,-9,]),'CP':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[79,79,-6,-312,-7,-10,79,-313,-315,-11,-314,-8,-9,]),'RR':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[80,80,-6,-312,-7,-10,80,-313,-315,-11,-314,-8,-9,]),'RL':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[81,81,-6,-312,-7,-10,81,-313,-315,-11,-314,-8,-9,]),'RRC':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[82,82,-6,-312,-7,-10,82,-313,-315,-11,-314,-8,-9,]),'RLC':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[83,83,-6,-312,-7,-10,83,-313,-315,-11,-314,-8,-9,]),'SLA':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[84,84,-6,-312,-7,-10,84,-313,-315,-11,-314,-8,-9,]),'SLL':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[85,85,-6,-312,-7,-10,85,-313,-315,-11,-314,-8,-9,]),'SRA':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[86,86,-6,-312,-7,-10,86,-313,-315,-11,-314,-8,-9,]),'SRL':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[87,87,-6,-312,-7,-10,87,-313,-315,-11,-314,-8,-9,]),'BIT':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[88,88,-6,-312,-7,-10,88,-313,-315,-11,-314,-8,-9,]),'RES':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[89,89,-6,-312,-7,-10,89,-313,-315,-11,-314,-8,-9,]),'SET':([0,2,3,6,92,95,96,97,98,222,225,290,291,],[90,90,-6,-312,-7,-10,90,-313,-315,-11,-314,-8,-9,]),'$end':([1,2,3,6,91,92,95,97,98,217,222,225,288,289,290,291,],[0,-1,-6,-312,-2,-7,-10,-313,-315,-3,-11,-314,-4,-5,-8,-9,]),'END':([2,3,6,92,95,97,98,222,225,290,291,],[93,-6,-312,-7,-10,-313,-315,-11,-314,-8,-9,]),'EQU':([4,],[94,]),'INTEGER':([8,14,15,16,18,20,24,28,32,33,35,36,37,38,75,76,77,78,79,88,89,90,93,94,109,133,136,138,162,189,215,226,227,228,229,232,239,241,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,272,273,275,278,282,283,312,325,326,328,329,399,443,],[97,134,134,134,134,134,134,134,134,134,134,134,134,134,-134,-135,-136,-137,-138,-161,-162,-163,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,]),'SP':([10,22,23,143,240,274,276,277,279,],[101,152,152,270,335,401,414,419,430,]),'A':([10,22,23,25,26,27,28,31,39,75,76,77,78,79,80,81,82,83,84,85,86,87,226,227,229,230,231,232,239,240,273,275,278,280,281,287,450,451,464,],[104,156,156,175,177,180,184,196,213,-134,-135,-136,-137,-138,-164,-165,-166,-167,-168,-169,-170,-171,294,300,306,316,317,319,331,333,392,404,420,431,435,447,467,468,481,]),'I':([10,229,],[105,309,]),'R':([10,229,],[106,310,]),'LP':([10,14,15,16,17,18,20,22,23,24,28,31,32,33,35,36,37,38,40,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,94,109,133,136,138,162,189,215,226,227,228,229,232,239,241,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,272,273,275,278,280,281,282,283,284,285,312,325,326,328,329,399,443,],[109,138,138,138,143,138,138,158,158,162,189,198,138,138,138,138,138,138,215,-134,-135,-136,-137,-138,-164,-165,-166,-167,-168,-169,-170,-171,-161,-162,-163,138,138,138,138,138,138,138,138,138,189,138,138,312,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,399,399,399,198,198,138,138,443,445,138,138,138,138,138,138,138,]),'H':([10,22,23,28,31,39,75,76,77,78,79,80,81,82,83,84,85,86,87,226,227,229,239,273,275,278,280,281,464,],[115,115,115,115,115,115,-134,-135,-136,-137,-138,-164,-165,-166,-167,-168,-169,-170,-171,115,115,115,115,115,115,115,115,115,115,]),'L':([10,22,23,28,31,39,75,76,77,78,79,80,81,82,83,84,85,86,87,226,227,229,239,273,275,278,280,281,464,],[116,116,116,116,116,116,-134,-135,-136,-137,-138,-164,-165,-166,-167,-168,-169,-170,-171,116,116,116,116,116,116,116,116,116,116,]),'IXH':([10,22,23,28,75,76,77,78,79,226,229,232,273,275,278,],[117,117,117,117,-134,-135,-136,-137,-138,117,117,117,117,117,117,]),'IXL':([10,22,23,28,75,76,77,78,79,226,229,232,273,275,278,],[118,118,118,118,-134,-135,-136,-137,-138,118,118,118,118,118,118,]),'IYH':([10,22,23,28,75,76,77,78,79,226,229,232,273,275,278,],[119,119,119,119,-134,-135,-136,-137,-138,119,119,119,119,119,119,]),'IYL':([10,22,23,28,75,76,77,78,79,226,229,232,273,275,278,],[120,120,120,120,-134,-135,-136,-137,-138,120,120,120,120,120,120,]),'BC':([10,22,23,29,30,109,240,274,276,277,279,312,],[110,110,110,110,110,233,110,402,412,416,428,448,]),'DE':([10,17,22,23,29,30,109,240,274,276,277,279,312,],[111,142,111,111,111,111,234,111,403,413,417,429,449,]),'HL':([10,22,23,25,26,27,29,30,109,158,162,189,198,228,240,269,274,276,277,279,312,399,461,],[102,102,102,176,178,181,102,102,235,235,235,235,235,302,102,387,400,411,418,427,235,235,478,]),'B':([10,22,23,28,31,39,75,76,77,78,79,80,81,82,83,84,85,86,87,226,227,229,232,239,273,275,278,280,281,464,],[123,123,123,123,123,123,-134,-135,-136,-137,-138,-164,-165,-166,-167,-168,-169,-170,-171,123,123,123,123,123,123,123,123,123,123,123,]),'C':([10,22,23,24,28,31,33,34,35,39,75,76,77,78,79,80,81,82,83,84,85,86,87,215,226,227,229,232,239,273,275,278,280,281,443,445,464,],[124,124,124,172,124,124,172,172,172,124,-134,-135,-136,-137,-138,-164,-165,-166,-167,-168,-169,-170,-171,286,124,124,124,124,124,124,124,124,124,124,462,463,124,]),'D':([10,22,23,28,31,39,75,76,77,78,79,80,81,82,83,84,85,86,87,226,227,229,232,239,273,275,278,280,281,464,],[125,125,125,125,125,125,-134,-135,-136,-137,-138,-164,-165,-166,-167,-168,-169,-170,-171,125,125,125,125,125,125,125,125,125,125,125,]),'E':([10,22,23,28,31,39,75,76,77,78,79,80,81,82,83,84,85,86,87,226,227,229,232,239,273,275,278,280,281,464,],[126,126,126,126,126,126,-134,-135,-136,-137,-138,-164,-165,-166,-167,-168,-169,-170,-171,126,126,126,126,126,126,126,126,126,126,126,]),'IX':([10,22,23,26,29,30,109,158,162,189,198,228,240,277,312,399,461,],[121,121,121,121,121,121,236,236,121,236,236,121,121,121,236,236,121,]),'IY':([10,22,23,26,29,30,109,158,162,189,198,228,240,277,312,399,461,],[122,122,122,122,122,122,238,238,122,238,238,122,122,122,238,238,122,]),'STRING':([14,21,97,],[130,149,225,]),'MINUS':([14,15,16,18,20,24,28,32,33,35,36,37,38,75,76,77,78,79,88,89,90,93,94,109,131,132,133,134,135,136,137,138,144,145,147,148,162,164,165,187,188,189,199,200,202,203,206,207,208,209,210,211,212,215,218,219,220,221,226,227,228,229,232,236,237,238,239,241,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,272,273,275,278,282,283,297,298,301,304,305,312,314,315,321,325,326,327,328,329,332,336,337,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,390,391,396,397,399,408,409,424,425,439,440,441,442,443,452,453,454,455,456,457,458,459,],[133,133,133,133,133,133,133,133,133,133,133,133,133,-134,-135,-136,-137,-138,-161,-162,-163,133,133,133,248,259,133,-308,-309,133,-311,133,248,259,248,259,133,248,259,248,259,133,248,259,248,259,248,259,248,259,248,259,248,133,248,259,248,259,133,133,133,133,133,326,248,329,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,-307,248,133,133,133,133,133,133,248,259,248,248,259,133,248,259,248,133,133,-306,133,133,248,248,259,248,259,248,259,248,259,248,259,-265,-287,-266,-288,-267,-289,-268,-290,-269,-291,-270,-292,248,259,248,259,259,248,259,248,259,248,-298,-276,-299,-277,-300,-278,-301,-279,-302,-280,-303,-281,259,248,259,248,-310,248,259,248,259,133,248,259,248,259,248,259,248,259,133,248,259,248,259,248,259,248,259,]),'LPP':([14,15,16,18,20,24,28,32,33,35,36,37,38,75,76,77,78,79,88,89,90,93,94,109,133,136,138,162,189,215,226,227,228,229,232,239,241,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,272,273,275,278,282,283,312,325,326,328,329,399,443,],[136,136,136,136,136,136,136,136,136,136,136,136,136,-134,-135,-136,-137,-138,-161,-162,-163,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,]),'ADDR':([14,15,16,18,20,24,28,32,33,35,36,37,38,75,76,77,78,79,88,89,90,93,94,109,133,136,138,162,189,215,226,227,228,229,232,239,241,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,272,273,275,278,282,283,312,325,326,328,329,399,443,],[137,137,137,137,137,137,137,137,137,137,137,137,137,-134,-135,-136,-137,-138,-161,-162,-163,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,]),'AF':([17,29,30,268,],[141,190,192,386,]),'P':([24,33,34,],[166,166,166,]),'M':([24,33,34,],[167,167,167,]),'PO':([24,33,34,],[168,168,168,]),'PE':([24,33,34,],[169,169,169,]),'Z':([24,33,34,35,],[171,171,171,171,]),'NZ':([24,33,34,35,],[173,173,173,173,]),'NC':([24,33,34,35,],[174,174,174,174,]),'COMMA':([99,100,101,102,103,104,105,106,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,134,135,137,139,140,141,142,163,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,199,200,201,205,213,214,216,266,322,323,324,327,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,388,446,469,470,471,472,473,474,475,476,],[226,227,228,-191,-192,229,230,231,232,-180,-189,-190,239,240,241,-178,-179,-185,-186,-187,-188,-193,-194,-181,-182,-183,-184,242,-42,243,-48,-49,-308,-309,-311,243,243,268,269,272,-200,-201,-202,-203,-204,-207,-208,-209,-210,273,274,275,276,277,278,279,280,281,282,283,284,285,287,-307,450,451,-56,-306,-43,-50,-51,-262,-284,-263,-285,-264,-286,-265,-287,-266,-288,-267,-289,-268,-290,-269,-291,-270,-292,-271,-293,-272,-294,-295,-273,-296,-274,-297,-275,-298,-276,-299,-277,-300,-278,-301,-279,-302,-280,-303,-281,-304,-282,-305,-283,-310,461,464,-57,-61,-58,-62,-59,-63,-60,-64,]),'RP':([121,122,134,135,137,233,234,235,237,266,270,271,286,327,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,448,449,452,453,454,455,456,457,458,459,462,463,],[-193,-194,-308,-309,-311,322,323,324,327,-307,388,389,446,-306,-262,-284,-263,-285,-264,-286,-265,-287,-266,-288,-267,-289,-268,-290,-269,-291,-270,-292,-271,-293,-272,-294,-295,-273,-296,-274,-297,-275,-298,-276,-299,-277,-300,-278,-301,-279,-302,-280,-303,-281,-304,-282,-305,-283,-310,465,466,469,470,471,472,473,474,475,476,479,480,]),'BAND':([131,132,134,135,137,144,145,147,148,164,165,187,188,199,200,202,203,206,207,208,209,210,211,212,218,219,220,221,237,266,267,297,298,301,304,305,314,315,321,327,332,336,337,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,390,391,396,397,408,409,424,425,439,440,441,442,452,453,454,455,456,457,458,459,],[244,255,-308,-309,-311,244,255,244,255,244,255,244,255,244,255,244,255,244,255,244,255,244,255,244,244,255,244,255,244,-307,244,244,255,244,244,255,244,255,244,-306,244,244,255,244,255,-262,-284,-263,-285,-264,-286,-265,-287,-266,-288,-267,-289,-268,-290,-269,-291,-270,-292,-271,-293,-272,-294,-295,-273,-296,-274,-297,-275,-298,-276,-299,-277,-300,-278,-301,-279,-302,-280,-303,-281,-304,-282,-305,-283,-310,244,255,244,255,244,255,244,255,244,255,244,255,244,255,244,255,244,255,244,255,]),'BOR':([131,132,134,135,137,144,145,147,148,164,165,187,188,199,200,202,203,206,207,208,209,210,211,212,218,219,220,221,237,266,267,297,298,301,304,305,314,315,321,327,332,336,337,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,390,391,396,397,408,409,424,425,439,440,441,442,452,453,454,455,456,457,458,459,],[245,256,-308,-309,-311,245,256,245,256,245,256,245,256,245,256,245,256,245,256,245,256,245,256,245,245,256,245,256,245,-307,245,245,256,245,245,256,245,256,245,-306,245,245,256,245,256,-262,-284,-263,-285,-264,-286,-265,-287,-266,-288,-267,-289,-268,-290,-269,-291,-270,-292,-271,-293,-272,-294,-295,-273,-296,-274,-297,-275,-298,-276,-299,-277,-300,-278,-301,-279,-302,-280,-303,-281,-304,-282,-305,-283,-310,245,256,245,256,245,256,245,256,245,256,245,256,245,256,245,256,245,256,245,256,]),'BXOR':([131,132,134,135,137,144,145,147,148,164,165,187,188,199,200,202,203,206,207,208,209,210,211,212,218,219,220,221,237,266,267,297,298,301,304,305,314,315,321,327,332,336,337,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,390,391,396,397,408,409,424,425,439,440,441,442,452,453,454,455,456,457,458,459,],[246,257,-308,-309,-311,246,257,246,257,246,257,246,257,246,257,246,257,246,257,246,257,246,257,246,246,257,246,257,246,-307,246,246,257,246,246,257,246,257,246,-306,246,246,257,246,257,-262,-284,-263,-285,-264,-286,-265,-287,-266,-288,-267,-289,-268,-290,-269,-291,-270,-292,-271,-293,-272,-294,-295,-273,-296,-274,-297,-275,-298,-276,-299,-277,-300,-278,-301,-279,-302,-280,-303,-281,-304,-282,-305,-283,-310,246,257,246,257,246,257,246,257,246,257,246,257,246,257,246,257,246,257,246,257,]),'PLUS':([131,132,134,135,137,144,145,147,148,164,165,187,188,199,200,202,203,206,207,208,209,210,211,212,218,219,220,221,236,237,238,266,267,297,298,301,304,305,314,315,321,327,332,336,337,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,390,391,396,397,408,409,424,425,439,440,441,442,452,453,454,455,456,457,458,459,],[247,258,-308,-309,-311,247,258,247,258,247,258,247,258,247,258,247,258,247,258,247,258,247,258,247,247,258,247,258,325,247,328,-307,247,247,258,247,247,258,247,258,247,-306,247,247,258,247,258,247,258,247,258,247,258,-265,-287,-266,-288,-267,-289,-268,-290,-269,-291,-270,-292,247,258,247,258,258,247,258,247,258,247,-298,-276,-299,-277,-300,-278,-301,-279,-302,-280,-303,-281,258,247,258,247,-310,247,258,247,258,247,258,247,258,247,258,247,258,247,258,247,258,247,258,247,258,]),'MUL':([131,132,134,135,137,144,145,147,148,164,165,187,188,199,200,202,203,206,207,208,209,210,211,212,218,219,220,221,237,266,267,297,298,301,304,305,314,315,321,327,332,336,337,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,390,391,396,397,408,409,424,425,439,440,441,442,452,453,454,455,456,457,458,459,],[249,260,-308,-309,-311,249,260,249,260,249,260,249,260,249,260,249,260,249,260,249,260,249,260,249,249,260,249,260,249,-307,249,249,260,249,249,260,249,260,249,-306,249,249,260,249,260,249,260,249,260,249,260,249,260,249,260,-267,-289,-268,-290,-269,-291,-270,-292,249,260,249,260,260,249,260,249,260,249,260,249,260,249,-300,-278,-301,-279,-302,-280,-303,-281,260,249,260,249,-310,249,260,249,260,249,260,249,260,249,260,249,260,249,260,249,260,249,260,249,260,]),'DIV':([131,132,134,135,137,144,145,147,148,164,165,187,188,199,200,202,203,206,207,208,209,210,211,212,218,219,220,221,237,266,267,297,298,301,304,305,314,315,321,327,332,336,337,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,390,391,396,397,408,409,424,425,439,440,441,442,452,453,454,455,456,457,458,459,],[250,261,-308,-309,-311,250,261,250,261,250,261,250,261,250,261,250,261,250,261,250,261,250,261,250,250,261,250,261,250,-307,250,250,261,250,250,261,250,261,250,-306,250,250,261,250,261,250,261,250,261,250,261,250,261,250,261,-267,-289,-268,-290,-269,-291,-270,-292,250,261,250,261,261,250,261,250,261,250,261,250,261,250,-300,-278,-301,-279,-302,-280,-303,-281,261,250,261,250,-310,250,261,250,261,250,261,250,261,250,261,250,261,250,261,250,261,250,261,250,261,]),'MOD':([131,132,134,135,137,144,145,147,148,164,165,187,188,199,200,202,203,206,207,208,209,210,211,212,218,219,220,221,237,266,267,297,298,301,304,305,314,315,321,327,332,336,337,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,390,391,396,397,408,409,424,425,439,440,441,442,452,453,454,455,456,457,458,459,],[251,262,-308,-309,-311,251,262,251,262,251,262,251,262,251,262,251,262,251,262,251,262,251,262,251,251,262,251,262,251,-307,251,251,262,251,251,262,251,262,251,-306,251,251,262,251,262,251,262,251,262,251,262,251,262,251,262,-267,-289,-268,-290,-269,-291,-270,-292,251,262,251,262,262,251,262,251,262,251,262,251,262,251,-300,-278,-301,-279,-302,-280,-303,-281,262,251,262,251,-310,251,262,251,262,251,262,251,262,251,262,251,262,251,262,251,262,251,262,251,262,]),'POW':([131,132,134,135,137,144,145,147,148,164,165,187,188,199,200,202,203,206,207,208,209,210,211,212,218,219,220,221,237,266,267,297,298,301,304,305,314,315,321,327,332,336,337,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,390,391,396,397,408,409,424,425,439,440,441,442,452,453,454,455,456,457,458,459,],[252,263,-308,-309,-311,252,263,252,263,252,263,252,263,252,263,252,263,252,263,252,263,252,263,252,252,263,252,263,252,-307,252,252,263,252,252,263,252,263,252,-306,252,252,263,252,263,252,263,252,263,252,263,252,263,252,263,252,263,252,263,252,263,252,263,252,263,252,263,263,252,263,252,263,252,263,252,263,252,263,252,263,252,263,252,263,252,263,252,263,252,-310,252,263,252,263,252,263,252,263,252,263,252,263,252,263,252,263,252,263,252,263,]),'LSHIFT':([131,132,134,135,137,144,145,147,148,164,165,187,188,199,200,202,203,206,207,208,209,210,211,212,218,219,220,221,237,266,267,297,298,301,304,305,314,315,321,327,332,336,337,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,390,391,396,397,408,409,424,425,439,440,441,442,452,453,454,455,456,457,458,459,],[253,264,-308,-309,-311,253,264,253,264,253,264,253,264,253,264,253,264,253,264,253,264,253,264,253,253,264,253,264,253,-307,253,253,264,253,253,264,253,264,253,-306,253,253,264,253,264,-262,-284,-263,-285,-264,-286,-265,-287,-266,-288,-267,-289,-268,-290,-269,-291,-270,-292,-271,-293,-272,-294,-295,-273,-296,-274,-297,-275,-298,-276,-299,-277,-300,-278,-301,-279,-302,-280,-303,-281,-304,-282,-305,-283,-310,253,264,253,264,253,264,253,264,253,264,253,264,253,264,253,264,253,264,253,264,]),'RSHIFT':([131,132,134,135,137,144,145,147,148,164,165,187,188,199,200,202,203,206,207,208,209,210,211,212,218,219,220,221,237,266,267,297,298,301,304,305,314,315,321,327,332,336,337,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,390,391,396,397,408,409,424,425,439,440,441,442,452,453,454,455,456,457,458,459,],[254,265,-308,-309,-311,254,265,254,265,254,265,254,265,254,265,254,265,254,265,254,265,254,265,254,254,265,254,265,254,-307,254,254,265,254,254,265,254,265,254,-306,254,254,265,254,265,-262,-284,-263,-285,-264,-286,-265,-287,-266,-288,-267,-289,-268,-290,-269,-291,-270,-292,-271,-293,-272,-294,-295,-273,-296,-274,-297,-275,-298,-276,-299,-277,-300,-278,-301,-279,-302,-280,-303,-281,-304,-282,-305,-283,-310,254,265,254,265,254,265,254,265,254,265,254,265,254,265,254,265,254,265,254,265,]),'RPP':([134,135,137,266,267,327,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,],[-308,-309,-311,-307,385,-306,-262,-284,-263,-285,-264,-286,-265,-287,-266,-288,-267,-289,-268,-290,-269,-291,-270,-292,-271,-293,-272,-294,-295,-273,-296,-274,-297,-275,-298,-276,-299,-277,-300,-278,-301,-279,-302,-280,-303,-281,-304,-282,-305,-283,-310,]),'APO':([386,],[460,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'program':([0,],[2,]),'line':([0,2,],[3,92,]),'asms':([0,2,],[5,5,]),'preproc_line':([0,2,],[6,6,]),'asm':([0,2,96,],[7,7,223,]),'bitwiseop':([0,2,96,],[28,28,28,]),'rotation':([0,2,96,],[31,31,31,]),'bitop':([0,2,96,],[32,32,32,]),'endline':([2,],[91,]),'reg8':([10,22,23,28,31,39,226,227,229,239,273,275,278,280,281,464,],[99,153,153,182,194,214,292,299,307,330,393,405,421,432,436,482,]),'reg8_hl':([10,22,23,24,28,31,226,229,273,275,278,280,281,],[100,155,155,161,185,195,293,308,395,407,423,433,437,]),'reg16i':([10,22,23,26,29,30,162,228,240,277,461,],[103,103,103,179,103,103,271,303,103,415,477,]),'reg8i':([10,22,23,28,226,229,232,273,275,278,],[107,157,157,183,295,311,318,394,406,422,]),'regBCDE':([10,22,23,28,31,39,226,227,229,232,239,273,275,278,280,281,464,],[108,108,108,108,108,108,108,108,108,320,108,108,108,108,108,108,108,]),'reg8_I':([10,22,23,28,31,226,229,273,275,278,280,281,],[112,151,160,186,197,296,313,398,410,426,434,438,]),'pexpr':([10,14,15,16,18,20,24,28,32,33,35,36,37,38,40,93,94,109,133,136,138,162,189,215,226,227,228,229,232,239,241,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,272,273,275,278,282,283,284,312,325,326,328,329,399,443,],[113,132,132,132,145,148,165,188,200,203,207,209,211,211,216,219,221,211,211,211,211,211,211,211,298,211,305,315,211,211,337,340,342,344,346,348,350,352,354,356,358,360,362,363,365,367,369,371,373,375,377,379,381,383,391,397,409,425,440,442,444,211,453,455,457,459,211,211,]),'reg16':([10,22,23,29,30,240,],[114,154,154,191,193,334,]),'id_list':([13,],[127,]),'number_list':([14,15,16,],[129,139,140,]),'expr':([14,15,16,18,20,24,28,32,33,35,36,37,38,93,94,109,133,136,138,162,189,215,226,227,228,229,232,239,241,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,272,273,275,278,282,283,312,325,326,328,329,399,443,],[131,131,131,144,147,164,187,199,202,206,208,210,212,218,220,237,266,267,237,237,237,237,297,301,304,314,321,332,336,339,341,343,345,347,349,351,353,355,357,359,361,364,366,368,370,372,374,376,378,380,382,384,390,396,408,424,439,441,237,452,454,456,458,237,237,]),'inc_reg':([22,23,],[150,159,]),'jp_flags':([24,33,34,],[163,201,204,]),'jr_flags':([24,33,34,35,],[170,170,170,205,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> program','start',1,'p_start','asmparse.py',583),
  ('start -> program endline','start',2,'p_start','asmparse.py',584),
  ('endline -> END NEWLINE','endline',2,'p_program_endline','asmparse.py',589),
  ('endline -> END expr NEWLINE','endline',3,'p_program_endline2','asmparse.py',594),
  ('endline -> END pexpr NEWLINE','endline',3,'p_program_endline2','asmparse.py',595),
  ('program -> line','program',1,'p_program','asmparse.py',602),
  ('program -> program line','program',2,'p_program_line','asmparse.py',607),
  ('line -> ID EQU expr NEWLINE','line',4,'p_def_label','asmparse.py',612),
  ('line -> ID EQU pexpr NEWLINE','line',4,'p_def_label','asmparse.py',613),
  ('line -> asms NEWLINE','line',2,'p_line_asm','asmparse.py',621),
  ('line -> asms CO NEWLINE','line',3,'p_line_asm','asmparse.py',622),
  ('asms -> <empty>','asms',0,'p_asms_empty','asmparse.py',627),
  ('asms -> asm','asms',1,'p_asms_asm','asmparse.py',633),
  ('asms -> asms CO asm','asms',3,'p_asms_asms_asm','asmparse.py',642),
  ('asm -> ID','asm',1,'p_asm_label','asmparse.py',651),
  ('asm -> LD reg8 COMMA reg8_hl','asm',4,'p_asm_ld8','asmparse.py',658),
  ('asm -> LD reg8_hl COMMA reg8','asm',4,'p_asm_ld8','asmparse.py',659),
  ('asm -> LD reg8 COMMA reg8','asm',4,'p_asm_ld8','asmparse.py',660),
  ('asm -> LD SP COMMA HL','asm',4,'p_asm_ld8','asmparse.py',661),
  ('asm -> LD SP COMMA reg16i','asm',4,'p_asm_ld8','asmparse.py',662),
  ('asm -> LD A COMMA reg8','asm',4,'p_asm_ld8','asmparse.py',663),
  ('asm -> LD reg8 COMMA A','asm',4,'p_asm_ld8','asmparse.py',664),
  ('asm -> LD reg8_hl COMMA A','asm',4,'p_asm_ld8','asmparse.py',665),
  ('asm -> LD A COMMA reg8_hl','asm',4,'p_asm_ld8','asmparse.py',666),
  ('asm -> LD A COMMA A','asm',4,'p_asm_ld8','asmparse.py',667),
  ('asm -> LD A COMMA I','asm',4,'p_asm_ld8','asmparse.py',668),
  ('asm -> LD I COMMA A','asm',4,'p_asm_ld8','asmparse.py',669),
  ('asm -> LD A COMMA R','asm',4,'p_asm_ld8','asmparse.py',670),
  ('asm -> LD R COMMA A','asm',4,'p_asm_ld8','asmparse.py',671),
  ('asm -> LD A COMMA reg8i','asm',4,'p_asm_ld8','asmparse.py',672),
  ('asm -> LD reg8i COMMA A','asm',4,'p_asm_ld8','asmparse.py',673),
  ('asm -> LD reg8 COMMA reg8i','asm',4,'p_asm_ld8','asmparse.py',674),
  ('asm -> LD reg8i COMMA regBCDE','asm',4,'p_asm_ld8','asmparse.py',675),
  ('asm -> LD reg8i COMMA reg8i','asm',4,'p_asm_ld8','asmparse.py',676),
  ('asm -> LD A COMMA LP BC RP','asm',6,'p_LDa','asmparse.py',686),
  ('asm -> LD A COMMA LP DE RP','asm',6,'p_LDa','asmparse.py',687),
  ('asm -> LD LP BC RP COMMA A','asm',6,'p_LDa','asmparse.py',688),
  ('asm -> LD LP DE RP COMMA A','asm',6,'p_LDa','asmparse.py',689),
  ('asm -> PROC','asm',1,'p_PROC','asmparse.py',695),
  ('asm -> ENDP','asm',1,'p_ENDP','asmparse.py',702),
  ('asm -> LOCAL id_list','asm',2,'p_LOCAL','asmparse.py',709),
  ('id_list -> ID','id_list',1,'p_idlist','asmparse.py',719),
  ('id_list -> id_list COMMA ID','id_list',3,'p_idlist_id','asmparse.py',725),
  ('asm -> DEFB number_list','asm',2,'p_DEFB','asmparse.py',731),
  ('asm -> DEFB STRING','asm',2,'p_DEFB','asmparse.py',732),
  ('asm -> DEFS number_list','asm',2,'p_DEFS','asmparse.py',738),
  ('asm -> DEFW number_list','asm',2,'p_DEFW','asmparse.py',751),
  ('number_list -> expr','number_list',1,'p_number_list','asmparse.py',757),
  ('number_list -> pexpr','number_list',1,'p_number_list','asmparse.py',758),
  ('number_list -> number_list COMMA expr','number_list',3,'p_number_list_number','asmparse.py',764),
  ('number_list -> number_list COMMA pexpr','number_list',3,'p_number_list_number','asmparse.py',765),
  ('asm -> LD reg8_I COMMA reg8','asm',4,'p_asm_ldind_r8','asmparse.py',771),
  ('asm -> LD reg8_I COMMA A','asm',4,'p_asm_ldind_r8','asmparse.py',772),
  ('asm -> LD reg8 COMMA reg8_I','asm',4,'p_asm_ldr8_ind','asmparse.py',778),
  ('asm -> LD A COMMA reg8_I','asm',4,'p_asm_ldr8_ind','asmparse.py',779),
  ('reg8_hl -> LP HL RP','reg8_hl',3,'p_reg8_hl','asmparse.py',785),
  ('reg8_I -> LP IX PLUS expr RP','reg8_I',5,'p_ind8_I','asmparse.py',791),
  ('reg8_I -> LP IX MINUS expr RP','reg8_I',5,'p_ind8_I','asmparse.py',792),
  ('reg8_I -> LP IY PLUS expr RP','reg8_I',5,'p_ind8_I','asmparse.py',793),
  ('reg8_I -> LP IY MINUS expr RP','reg8_I',5,'p_ind8_I','asmparse.py',794),
  ('reg8_I -> LP IX PLUS pexpr RP','reg8_I',5,'p_ind8_I','asmparse.py',795),
  ('reg8_I -> LP IX MINUS pexpr RP','reg8_I',5,'p_ind8_I','asmparse.py',796),
  ('reg8_I -> LP IY PLUS pexpr RP','reg8_I',5,'p_ind8_I','asmparse.py',797),
  ('reg8_I -> LP IY MINUS pexpr RP','reg8_I',5,'p_ind8_I','asmparse.py',798),
  ('asm -> EX AF COMMA AF APO','asm',5,'p_ex_af_af','asmparse.py',808),
  ('asm -> EX DE COMMA HL','asm',4,'p_ex_de_hl','asmparse.py',814),
  ('asm -> ORG expr','asm',2,'p_org','asmparse.py',820),
  ('asm -> ORG pexpr','asm',2,'p_org','asmparse.py',821),
  ('asm -> NAMESPACE ID','asm',2,'p_namespace','asmparse.py',827),
  ('asm -> ALIGN expr','asm',2,'p_align','asmparse.py',836),
  ('asm -> ALIGN pexpr','asm',2,'p_align','asmparse.py',837),
  ('asm -> INCBIN STRING','asm',2,'p_incbin','asmparse.py',848),
  ('asm -> EX LP SP RP COMMA reg16i','asm',6,'p_ex_sp_reg8','asmparse.py',866),
  ('asm -> EX LP SP RP COMMA HL','asm',6,'p_ex_sp_reg8','asmparse.py',867),
  ('asm -> INC inc_reg','asm',2,'p_incdec','asmparse.py',873),
  ('asm -> DEC inc_reg','asm',2,'p_incdec','asmparse.py',874),
  ('asm -> INC reg8_I','asm',2,'p_incdeci','asmparse.py',880),
  ('asm -> DEC reg8_I','asm',2,'p_incdeci','asmparse.py',881),
  ('asm -> LD reg8 COMMA expr','asm',4,'p_LD_reg_val','asmparse.py',887),
  ('asm -> LD reg8 COMMA pexpr','asm',4,'p_LD_reg_val','asmparse.py',888),
  ('asm -> LD reg16 COMMA expr','asm',4,'p_LD_reg_val','asmparse.py',889),
  ('asm -> LD reg8_hl COMMA expr','asm',4,'p_LD_reg_val','asmparse.py',890),
  ('asm -> LD A COMMA expr','asm',4,'p_LD_reg_val','asmparse.py',891),
  ('asm -> LD SP COMMA expr','asm',4,'p_LD_reg_val','asmparse.py',892),
  ('asm -> LD reg8i COMMA expr','asm',4,'p_LD_reg_val','asmparse.py',893),
  ('asm -> LD reg8_I COMMA expr','asm',4,'p_LD_regI_val','asmparse.py',903),
  ('asm -> JP reg8_hl','asm',2,'p_JP_hl','asmparse.py',909),
  ('asm -> JP LP reg16i RP','asm',4,'p_JP_hl','asmparse.py',910),
  ('asm -> SBC A COMMA reg8','asm',4,'p_SBCADD','asmparse.py',922),
  ('asm -> SBC A COMMA reg8i','asm',4,'p_SBCADD','asmparse.py',923),
  ('asm -> SBC A COMMA A','asm',4,'p_SBCADD','asmparse.py',924),
  ('asm -> SBC A COMMA reg8_hl','asm',4,'p_SBCADD','asmparse.py',925),
  ('asm -> SBC HL COMMA SP','asm',4,'p_SBCADD','asmparse.py',926),
  ('asm -> SBC HL COMMA BC','asm',4,'p_SBCADD','asmparse.py',927),
  ('asm -> SBC HL COMMA DE','asm',4,'p_SBCADD','asmparse.py',928),
  ('asm -> SBC HL COMMA HL','asm',4,'p_SBCADD','asmparse.py',929),
  ('asm -> ADD A COMMA reg8','asm',4,'p_SBCADD','asmparse.py',930),
  ('asm -> ADD A COMMA reg8i','asm',4,'p_SBCADD','asmparse.py',931),
  ('asm -> ADD A COMMA A','asm',4,'p_SBCADD','asmparse.py',932),
  ('asm -> ADD A COMMA reg8_hl','asm',4,'p_SBCADD','asmparse.py',933),
  ('asm -> ADC A COMMA reg8','asm',4,'p_SBCADD','asmparse.py',934),
  ('asm -> ADC A COMMA reg8i','asm',4,'p_SBCADD','asmparse.py',935),
  ('asm -> ADC A COMMA A','asm',4,'p_SBCADD','asmparse.py',936),
  ('asm -> ADC A COMMA reg8_hl','asm',4,'p_SBCADD','asmparse.py',937),
  ('asm -> ADD HL COMMA BC','asm',4,'p_SBCADD','asmparse.py',938),
  ('asm -> ADD HL COMMA DE','asm',4,'p_SBCADD','asmparse.py',939),
  ('asm -> ADD HL COMMA HL','asm',4,'p_SBCADD','asmparse.py',940),
  ('asm -> ADD HL COMMA SP','asm',4,'p_SBCADD','asmparse.py',941),
  ('asm -> ADC HL COMMA BC','asm',4,'p_SBCADD','asmparse.py',942),
  ('asm -> ADC HL COMMA DE','asm',4,'p_SBCADD','asmparse.py',943),
  ('asm -> ADC HL COMMA HL','asm',4,'p_SBCADD','asmparse.py',944),
  ('asm -> ADC HL COMMA SP','asm',4,'p_SBCADD','asmparse.py',945),
  ('asm -> ADD reg16i COMMA BC','asm',4,'p_SBCADD','asmparse.py',946),
  ('asm -> ADD reg16i COMMA DE','asm',4,'p_SBCADD','asmparse.py',947),
  ('asm -> ADD reg16i COMMA HL','asm',4,'p_SBCADD','asmparse.py',948),
  ('asm -> ADD reg16i COMMA SP','asm',4,'p_SBCADD','asmparse.py',949),
  ('asm -> ADD reg16i COMMA reg16i','asm',4,'p_SBCADD','asmparse.py',950),
  ('asm -> SBC A COMMA expr','asm',4,'p_arith_A_expr','asmparse.py',956),
  ('asm -> SBC A COMMA pexpr','asm',4,'p_arith_A_expr','asmparse.py',957),
  ('asm -> ADD A COMMA expr','asm',4,'p_arith_A_expr','asmparse.py',958),
  ('asm -> ADD A COMMA pexpr','asm',4,'p_arith_A_expr','asmparse.py',959),
  ('asm -> ADC A COMMA expr','asm',4,'p_arith_A_expr','asmparse.py',960),
  ('asm -> ADC A COMMA pexpr','asm',4,'p_arith_A_expr','asmparse.py',961),
  ('asm -> SBC A COMMA reg8_I','asm',4,'p_arith_A_regI','asmparse.py',967),
  ('asm -> ADD A COMMA reg8_I','asm',4,'p_arith_A_regI','asmparse.py',968),
  ('asm -> ADC A COMMA reg8_I','asm',4,'p_arith_A_regI','asmparse.py',969),
  ('asm -> bitwiseop reg8','asm',2,'p_bitwiseop_reg','asmparse.py',975),
  ('asm -> bitwiseop reg8i','asm',2,'p_bitwiseop_reg','asmparse.py',976),
  ('asm -> bitwiseop A','asm',2,'p_bitwiseop_reg','asmparse.py',977),
  ('asm -> bitwiseop reg8_hl','asm',2,'p_bitwiseop_reg','asmparse.py',978),
  ('asm -> bitwiseop reg8_I','asm',2,'p_bitwiseop_regI','asmparse.py',984),
  ('asm -> bitwiseop expr','asm',2,'p_bitwise_expr','asmparse.py',990),
  ('asm -> bitwiseop pexpr','asm',2,'p_bitwise_expr','asmparse.py',991),
  ('bitwiseop -> OR','bitwiseop',1,'p_bitwise','asmparse.py',997),
  ('bitwiseop -> AND','bitwiseop',1,'p_bitwise','asmparse.py',998),
  ('bitwiseop -> XOR','bitwiseop',1,'p_bitwise','asmparse.py',999),
  ('bitwiseop -> SUB','bitwiseop',1,'p_bitwise','asmparse.py',1000),
  ('bitwiseop -> CP','bitwiseop',1,'p_bitwise','asmparse.py',1001),
  ('asm -> PUSH AF','asm',2,'p_PUSH_POP','asmparse.py',1007),
  ('asm -> PUSH reg16','asm',2,'p_PUSH_POP','asmparse.py',1008),
  ('asm -> POP AF','asm',2,'p_PUSH_POP','asmparse.py',1009),
  ('asm -> POP reg16','asm',2,'p_PUSH_POP','asmparse.py',1010),
  ('asm -> LD pexpr COMMA A','asm',4,'p_LD_addr_reg','asmparse.py',1016),
  ('asm -> LD pexpr COMMA reg16','asm',4,'p_LD_addr_reg','asmparse.py',1017),
  ('asm -> LD pexpr COMMA SP','asm',4,'p_LD_addr_reg','asmparse.py',1018),
  ('asm -> LD A COMMA pexpr','asm',4,'p_LD_reg_addr','asmparse.py',1024),
  ('asm -> LD reg16 COMMA pexpr','asm',4,'p_LD_reg_addr','asmparse.py',1025),
  ('asm -> LD SP COMMA pexpr','asm',4,'p_LD_reg_addr','asmparse.py',1026),
  ('asm -> rotation reg8','asm',2,'p_ROTATE','asmparse.py',1032),
  ('asm -> rotation reg8_hl','asm',2,'p_ROTATE','asmparse.py',1033),
  ('asm -> rotation A','asm',2,'p_ROTATE','asmparse.py',1034),
  ('asm -> rotation reg8_I','asm',2,'p_ROTATE_ix','asmparse.py',1040),
  ('asm -> bitop expr COMMA A','asm',4,'p_BIT','asmparse.py',1046),
  ('asm -> bitop pexpr COMMA A','asm',4,'p_BIT','asmparse.py',1047),
  ('asm -> bitop expr COMMA reg8','asm',4,'p_BIT','asmparse.py',1048),
  ('asm -> bitop pexpr COMMA reg8','asm',4,'p_BIT','asmparse.py',1049),
  ('asm -> bitop expr COMMA reg8_hl','asm',4,'p_BIT','asmparse.py',1050),
  ('asm -> bitop pexpr COMMA reg8_hl','asm',4,'p_BIT','asmparse.py',1051),
  ('asm -> bitop expr COMMA reg8_I','asm',4,'p_BIT_ix','asmparse.py',1063),
  ('asm -> bitop pexpr COMMA reg8_I','asm',4,'p_BIT_ix','asmparse.py',1064),
  ('bitop -> BIT','bitop',1,'p_bitop','asmparse.py',1076),
  ('bitop -> RES','bitop',1,'p_bitop','asmparse.py',1077),
  ('bitop -> SET','bitop',1,'p_bitop','asmparse.py',1078),
  ('rotation -> RR','rotation',1,'p_rotation','asmparse.py',1084),
  ('rotation -> RL','rotation',1,'p_rotation','asmparse.py',1085),
  ('rotation -> RRC','rotation',1,'p_rotation','asmparse.py',1086),
  ('rotation -> RLC','rotation',1,'p_rotation','asmparse.py',1087),
  ('rotation -> SLA','rotation',1,'p_rotation','asmparse.py',1088),
  ('rotation -> SLL','rotation',1,'p_rotation','asmparse.py',1089),
  ('rotation -> SRA','rotation',1,'p_rotation','asmparse.py',1090),
  ('rotation -> SRL','rotation',1,'p_rotation','asmparse.py',1091),
  ('inc_reg -> SP','inc_reg',1,'p_reg_inc','asmparse.py',1097),
  ('inc_reg -> reg8','inc_reg',1,'p_reg_inc','asmparse.py',1098),
  ('inc_reg -> reg16','inc_reg',1,'p_reg_inc','asmparse.py',1099),
  ('inc_reg -> reg8_hl','inc_reg',1,'p_reg_inc','asmparse.py',1100),
  ('inc_reg -> A','inc_reg',1,'p_reg_inc','asmparse.py',1101),
  ('inc_reg -> reg8i','inc_reg',1,'p_reg_inc','asmparse.py',1102),
  ('reg8 -> H','reg8',1,'p_reg8','asmparse.py',1108),
  ('reg8 -> L','reg8',1,'p_reg8','asmparse.py',1109),
  ('reg8 -> regBCDE','reg8',1,'p_reg8','asmparse.py',1110),
  ('regBCDE -> B','regBCDE',1,'p_regBCDE','asmparse.py',1116),
  ('regBCDE -> C','regBCDE',1,'p_regBCDE','asmparse.py',1117),
  ('regBCDE -> D','regBCDE',1,'p_regBCDE','asmparse.py',1118),
  ('regBCDE -> E','regBCDE',1,'p_regBCDE','asmparse.py',1119),
  ('reg8i -> IXH','reg8i',1,'p_reg8i','asmparse.py',1125),
  ('reg8i -> IXL','reg8i',1,'p_reg8i','asmparse.py',1126),
  ('reg8i -> IYH','reg8i',1,'p_reg8i','asmparse.py',1127),
  ('reg8i -> IYL','reg8i',1,'p_reg8i','asmparse.py',1128),
  ('reg16 -> BC','reg16',1,'p_reg16','asmparse.py',1134),
  ('reg16 -> DE','reg16',1,'p_reg16','asmparse.py',1135),
  ('reg16 -> HL','reg16',1,'p_reg16','asmparse.py',1136),
  ('reg16 -> reg16i','reg16',1,'p_reg16','asmparse.py',1137),
  ('reg16i -> IX','reg16i',1,'p_reg16i','asmparse.py',1143),
  ('reg16i -> IY','reg16i',1,'p_reg16i','asmparse.py',1144),
  ('asm -> JP jp_flags COMMA expr','asm',4,'p_jp','asmparse.py',1150),
  ('asm -> JP jp_flags COMMA pexpr','asm',4,'p_jp','asmparse.py',1151),
  ('asm -> CALL jp_flags COMMA expr','asm',4,'p_jp','asmparse.py',1152),
  ('asm -> CALL jp_flags COMMA pexpr','asm',4,'p_jp','asmparse.py',1153),
  ('asm -> RET jp_flags','asm',2,'p_ret','asmparse.py',1159),
  ('jp_flags -> P','jp_flags',1,'p_jpflags_other','asmparse.py',1165),
  ('jp_flags -> M','jp_flags',1,'p_jpflags_other','asmparse.py',1166),
  ('jp_flags -> PO','jp_flags',1,'p_jpflags_other','asmparse.py',1167),
  ('jp_flags -> PE','jp_flags',1,'p_jpflags_other','asmparse.py',1168),
  ('jp_flags -> jr_flags','jp_flags',1,'p_jpflags_other','asmparse.py',1169),
  ('asm -> JR jr_flags COMMA expr','asm',4,'p_jr','asmparse.py',1175),
  ('asm -> JR jr_flags COMMA pexpr','asm',4,'p_jr','asmparse.py',1176),
  ('jr_flags -> Z','jr_flags',1,'p_jr_flags','asmparse.py',1183),
  ('jr_flags -> C','jr_flags',1,'p_jr_flags','asmparse.py',1184),
  ('jr_flags -> NZ','jr_flags',1,'p_jr_flags','asmparse.py',1185),
  ('jr_flags -> NC','jr_flags',1,'p_jr_flags','asmparse.py',1186),
  ('asm -> JP expr','asm',2,'p_jrjp','asmparse.py',1192),
  ('asm -> JR expr','asm',2,'p_jrjp','asmparse.py',1193),
  ('asm -> CALL expr','asm',2,'p_jrjp','asmparse.py',1194),
  ('asm -> DJNZ expr','asm',2,'p_jrjp','asmparse.py',1195),
  ('asm -> JP pexpr','asm',2,'p_jrjp','asmparse.py',1196),
  ('asm -> JR pexpr','asm',2,'p_jrjp','asmparse.py',1197),
  ('asm -> CALL pexpr','asm',2,'p_jrjp','asmparse.py',1198),
  ('asm -> DJNZ pexpr','asm',2,'p_jrjp','asmparse.py',1199),
  ('asm -> RST expr','asm',2,'p_rst','asmparse.py',1211),
  ('asm -> IM expr','asm',2,'p_im','asmparse.py',1224),
  ('asm -> IN A COMMA LP C RP','asm',6,'p_in','asmparse.py',1236),
  ('asm -> IN reg8 COMMA LP C RP','asm',6,'p_in','asmparse.py',1237),
  ('asm -> OUT LP C RP COMMA A','asm',6,'p_out','asmparse.py',1243),
  ('asm -> OUT LP C RP COMMA reg8','asm',6,'p_out','asmparse.py',1244),
  ('asm -> IN A COMMA pexpr','asm',4,'p_in_expr','asmparse.py',1250),
  ('asm -> OUT pexpr COMMA A','asm',4,'p_out_expr','asmparse.py',1256),
  ('asm -> NOP','asm',1,'p_single','asmparse.py',1262),
  ('asm -> EXX','asm',1,'p_single','asmparse.py',1263),
  ('asm -> CCF','asm',1,'p_single','asmparse.py',1264),
  ('asm -> SCF','asm',1,'p_single','asmparse.py',1265),
  ('asm -> LDIR','asm',1,'p_single','asmparse.py',1266),
  ('asm -> LDI','asm',1,'p_single','asmparse.py',1267),
  ('asm -> LDDR','asm',1,'p_single','asmparse.py',1268),
  ('asm -> LDD','asm',1,'p_single','asmparse.py',1269),
  ('asm -> CPIR','asm',1,'p_single','asmparse.py',1270),
  ('asm -> CPI','asm',1,'p_single','asmparse.py',1271),
  ('asm -> CPDR','asm',1,'p_single','asmparse.py',1272),
  ('asm -> CPD','asm',1,'p_single','asmparse.py',1273),
  ('asm -> DAA','asm',1,'p_single','asmparse.py',1274),
  ('asm -> NEG','asm',1,'p_single','asmparse.py',1275),
  ('asm -> CPL','asm',1,'p_single','asmparse.py',1276),
  ('asm -> HALT','asm',1,'p_single','asmparse.py',1277),
  ('asm -> EI','asm',1,'p_single','asmparse.py',1278),
  ('asm -> DI','asm',1,'p_single','asmparse.py',1279),
  ('asm -> OUTD','asm',1,'p_single','asmparse.py',1280),
  ('asm -> OUTI','asm',1,'p_single','asmparse.py',1281),
  ('asm -> OTDR','asm',1,'p_single','asmparse.py',1282),
  ('asm -> OTIR','asm',1,'p_single','asmparse.py',1283),
  ('asm -> IND','asm',1,'p_single','asmparse.py',1284),
  ('asm -> INI','asm',1,'p_single','asmparse.py',1285),
  ('asm -> INDR','asm',1,'p_single','asmparse.py',1286),
  ('asm -> INIR','asm',1,'p_single','asmparse.py',1287),
  ('asm -> RET','asm',1,'p_single','asmparse.py',1288),
  ('asm -> RETI','asm',1,'p_single','asmparse.py',1289),
  ('asm -> RETN','asm',1,'p_single','asmparse.py',1290),
  ('asm -> RLA','asm',1,'p_single','asmparse.py',1291),
  ('asm -> RLCA','asm',1,'p_single','asmparse.py',1292),
  ('asm -> RRA','asm',1,'p_single','asmparse.py',1293),
  ('asm -> RRCA','asm',1,'p_single','asmparse.py',1294),
  ('asm -> RLD','asm',1,'p_single','asmparse.py',1295),
  ('asm -> RRD','asm',1,'p_single','asmparse.py',1296),
  ('expr -> expr BAND expr','expr',3,'p_expr_div_expr','asmparse.py',1302),
  ('expr -> expr BOR expr','expr',3,'p_expr_div_expr','asmparse.py',1303),
  ('expr -> expr BXOR expr','expr',3,'p_expr_div_expr','asmparse.py',1304),
  ('expr -> expr PLUS expr','expr',3,'p_expr_div_expr','asmparse.py',1305),
  ('expr -> expr MINUS expr','expr',3,'p_expr_div_expr','asmparse.py',1306),
  ('expr -> expr MUL expr','expr',3,'p_expr_div_expr','asmparse.py',1307),
  ('expr -> expr DIV expr','expr',3,'p_expr_div_expr','asmparse.py',1308),
  ('expr -> expr MOD expr','expr',3,'p_expr_div_expr','asmparse.py',1309),
  ('expr -> expr POW expr','expr',3,'p_expr_div_expr','asmparse.py',1310),
  ('expr -> expr LSHIFT expr','expr',3,'p_expr_div_expr','asmparse.py',1311),
  ('expr -> expr RSHIFT expr','expr',3,'p_expr_div_expr','asmparse.py',1312),
  ('expr -> pexpr BAND expr','expr',3,'p_expr_div_expr','asmparse.py',1313),
  ('expr -> pexpr BOR expr','expr',3,'p_expr_div_expr','asmparse.py',1314),
  ('expr -> pexpr BXOR expr','expr',3,'p_expr_div_expr','asmparse.py',1315),
  ('expr -> pexpr PLUS expr','expr',3,'p_expr_div_expr','asmparse.py',1316),
  ('expr -> pexpr MINUS expr','expr',3,'p_expr_div_expr','asmparse.py',1317),
  ('expr -> pexpr MUL expr','expr',3,'p_expr_div_expr','asmparse.py',1318),
  ('expr -> pexpr DIV expr','expr',3,'p_expr_div_expr','asmparse.py',1319),
  ('expr -> pexpr MOD expr','expr',3,'p_expr_div_expr','asmparse.py',1320),
  ('expr -> pexpr POW expr','expr',3,'p_expr_div_expr','asmparse.py',1321),
  ('expr -> pexpr LSHIFT expr','expr',3,'p_expr_div_expr','asmparse.py',1322),
  ('expr -> pexpr RSHIFT expr','expr',3,'p_expr_div_expr','asmparse.py',1323),
  ('expr -> expr BAND pexpr','expr',3,'p_expr_div_expr','asmparse.py',1324),
  ('expr -> expr BOR pexpr','expr',3,'p_expr_div_expr','asmparse.py',1325),
  ('expr -> expr BXOR pexpr','expr',3,'p_expr_div_expr','asmparse.py',1326),
  ('expr -> expr PLUS pexpr','expr',3,'p_expr_div_expr','asmparse.py',1327),
  ('expr -> expr MINUS pexpr','expr',3,'p_expr_div_expr','asmparse.py',1328),
  ('expr -> expr MUL pexpr','expr',3,'p_expr_div_expr','asmparse.py',1329),
  ('expr -> expr DIV pexpr','expr',3,'p_expr_div_expr','asmparse.py',1330),
  ('expr -> expr MOD pexpr','expr',3,'p_expr_div_expr','asmparse.py',1331),
  ('expr -> expr POW pexpr','expr',3,'p_expr_div_expr','asmparse.py',1332),
  ('expr -> expr LSHIFT pexpr','expr',3,'p_expr_div_expr','asmparse.py',1333),
  ('expr -> expr RSHIFT pexpr','expr',3,'p_expr_div_expr','asmparse.py',1334),
  ('expr -> pexpr BAND pexpr','expr',3,'p_expr_div_expr','asmparse.py',1335),
  ('expr -> pexpr BOR pexpr','expr',3,'p_expr_div_expr','asmparse.py',1336),
  ('expr -> pexpr BXOR pexpr','expr',3,'p_expr_div_expr','asmparse.py',1337),
  ('expr -> pexpr PLUS pexpr','expr',3,'p_expr_div_expr','asmparse.py',1338),
  ('expr -> pexpr MINUS pexpr','expr',3,'p_expr_div_expr','asmparse.py',1339),
  ('expr -> pexpr MUL pexpr','expr',3,'p_expr_div_expr','asmparse.py',1340),
  ('expr -> pexpr DIV pexpr','expr',3,'p_expr_div_expr','asmparse.py',1341),
  ('expr -> pexpr MOD pexpr','expr',3,'p_expr_div_expr','asmparse.py',1342),
  ('expr -> pexpr POW pexpr','expr',3,'p_expr_div_expr','asmparse.py',1343),
  ('expr -> pexpr LSHIFT pexpr','expr',3,'p_expr_div_expr','asmparse.py',1344),
  ('expr -> pexpr RSHIFT pexpr','expr',3,'p_expr_div_expr','asmparse.py',1345),
  ('pexpr -> LP expr RP','pexpr',3,'p_expr_lprp','asmparse.py',1351),
  ('expr -> MINUS expr','expr',2,'p_expr_uminus','asmparse.py',1357),
  ('expr -> INTEGER','expr',1,'p_expr_int','asmparse.py',1363),
  ('expr -> ID','expr',1,'p_expr_label','asmparse.py',1369),
  ('expr -> LPP expr RPP','expr',3,'p_expr_paren','asmparse.py',1375),
  ('expr -> ADDR','expr',1,'p_expr_addr','asmparse.py',1381),
  ('line -> preproc_line','line',1,'p_preprocessor_line','asmparse.py',1389),
  ('preproc_line -> _LINE INTEGER','preproc_line',2,'p_preprocessor_line_line','asmparse.py',1395),
  ('preproc_line -> _LINE INTEGER STRING','preproc_line',3,'p_preprocessor_line_line_file','asmparse.py',1401),
  ('preproc_line -> _INIT ID','preproc_line',2,'p_preproc_line_init','asmparse.py',1408),
]
