
# zxbpptab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftDUMMYleftEQNELTLEGTGErightLLPCOMMA CONTINUE DEFINE ELSE ENDIF EQ ERROR FILENAME GE GT ID IF IFDEF IFNDEF INCLUDE INIT INTEGER LE LINE LLP LP LT NE NEWLINE NUMBER ONCE POP PRAGMA PUSH REQUIRE RP RRP SEPARATOR STRING TOKEN UNDEF WARNING _ENDFILE_ start : program\n     program : include_file\n                | line\n                | init\n                | undef\n                | ifdef\n                | require\n                | pragma\n                | errormsg\n                | warningmsg\n     program : defs NEWLINE\n     program : define NEWLINE\n     program : program include_file\n                | program line\n                | program init\n                | program undef\n                | program ifdef\n                | program require\n                | program pragma\n                | program errormsg\n                | program warningmsg\n     program : program defs NEWLINE\n     program : program define NEWLINE\n     token : STRING\n              | TOKEN\n              | CONTINUE\n              | SEPARATOR\n              | NUMBER\n     include_file : include NEWLINE program _ENDFILE_\n     include_file : include NEWLINE _ENDFILE_\n     include_file : include_once NEWLINE _ENDFILE_\n     include_file : include_once NEWLINE program _ENDFILE_\n     include : INCLUDE STRING\n     include : INCLUDE FILENAME\n     include_once : INCLUDE ONCE STRING\n     include_once : INCLUDE ONCE FILENAME\n     line : LINE INTEGER NEWLINE\n     line : LINE INTEGER STRING NEWLINE\n     require : REQUIRE STRING NEWLINE\n     init : INIT ID NEWLINE\n             | INIT STRING NEWLINE\n     undef : UNDEF ID\n     errormsg : ERROR STRING\n     warningmsg : WARNING STRING\n     define : DEFINE ID params defs\n     params :\n     params : LP RP\n     params : LP paramlist RP\n     paramlist : ID\n     paramlist : paramlist COMMA ID\n     pragma : PRAGMA ID\n     pragma : PRAGMA ID EQ ID\n               | PRAGMA ID EQ STRING\n               | PRAGMA ID EQ INTEGER\n     pragma : PRAGMA PUSH LP ID RP\n               | PRAGMA POP LP ID RP\n     ifdef : if_header NEWLINE program ENDIF\n     ifdef : ifdefelsea ifdefelseb ENDIF\n     ifdefelsea : if_header NEWLINE program\n     ifdefelseb : ELSE NEWLINE program\n     if_header : IFDEF ID\n     if_header : IFNDEF ID\n     if_header : IF expr\n     expr : macrocall\n     expr : expr NE expr\n     expr : expr EQ expr\n     expr : expr LT expr\n     expr : expr LE expr\n     expr : expr GT expr\n     expr : expr GE expr\n     defs :\n     defs : defs def\n     def : token\n            | COMMA\n            | RRP\n            | LLP\n     def : macrocall\n     macrocall : ID args\n     args : %prec DUMMY\n     args : LLP arglist RRP\n     arglist : arglist COMMA arg\n     arglist : arg\n     arg :\n     arg : argstring\n     argstring : token\n                  | macrocall\n     argstring : LLP arglist RRP\n     argstring : argstring token\n                  | argstring macrocall\n     argstring : argstring LLP arglist RRP\n    '
    
_lr_action_items = {'LINE':([0,2,3,4,5,6,7,8,9,10,11,30,31,32,33,34,35,36,37,38,41,54,55,56,60,61,65,68,69,78,79,82,83,84,85,86,88,89,90,91,92,93,113,114,115,116,117,118,119,120,139,140,],[16,16,-2,-3,-4,-5,-6,-7,-8,-9,-10,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,16,16,-42,16,-51,-43,-44,-22,-23,16,-30,-31,16,-37,-40,-41,16,-58,16,-39,-29,-32,-38,-57,16,-52,-53,-54,-55,-56,]),'INIT':([0,2,3,4,5,6,7,8,9,10,11,30,31,32,33,34,35,36,37,38,41,54,55,56,60,61,65,68,69,78,79,82,83,84,85,86,88,89,90,91,92,93,113,114,115,116,117,118,119,120,139,140,],[17,17,-2,-3,-4,-5,-6,-7,-8,-9,-10,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,17,17,-42,17,-51,-43,-44,-22,-23,17,-30,-31,17,-37,-40,-41,17,-58,17,-39,-29,-32,-38,-57,17,-52,-53,-54,-55,-56,]),'UNDEF':([0,2,3,4,5,6,7,8,9,10,11,30,31,32,33,34,35,36,37,38,41,54,55,56,60,61,65,68,69,78,79,82,83,84,85,86,88,89,90,91,92,93,113,114,115,116,117,118,119,120,139,140,],[18,18,-2,-3,-4,-5,-6,-7,-8,-9,-10,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,18,18,-42,18,-51,-43,-44,-22,-23,18,-30,-31,18,-37,-40,-41,18,-58,18,-39,-29,-32,-38,-57,18,-52,-53,-54,-55,-56,]),'REQUIRE':([0,2,3,4,5,6,7,8,9,10,11,30,31,32,33,34,35,36,37,38,41,54,55,56,60,61,65,68,69,78,79,82,83,84,85,86,88,89,90,91,92,93,113,114,115,116,117,118,119,120,139,140,],[21,21,-2,-3,-4,-5,-6,-7,-8,-9,-10,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,21,21,-42,21,-51,-43,-44,-22,-23,21,-30,-31,21,-37,-40,-41,21,-58,21,-39,-29,-32,-38,-57,21,-52,-53,-54,-55,-56,]),'PRAGMA':([0,2,3,4,5,6,7,8,9,10,11,30,31,32,33,34,35,36,37,38,41,54,55,56,60,61,65,68,69,78,79,82,83,84,85,86,88,89,90,91,92,93,113,114,115,116,117,118,119,120,139,140,],[22,22,-2,-3,-4,-5,-6,-7,-8,-9,-10,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,22,22,-42,22,-51,-43,-44,-22,-23,22,-30,-31,22,-37,-40,-41,22,-58,22,-39,-29,-32,-38,-57,22,-52,-53,-54,-55,-56,]),'ERROR':([0,2,3,4,5,6,7,8,9,10,11,30,31,32,33,34,35,36,37,38,41,54,55,56,60,61,65,68,69,78,79,82,83,84,85,86,88,89,90,91,92,93,113,114,115,116,117,118,119,120,139,140,],[23,23,-2,-3,-4,-5,-6,-7,-8,-9,-10,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,23,23,-42,23,-51,-43,-44,-22,-23,23,-30,-31,23,-37,-40,-41,23,-58,23,-39,-29,-32,-38,-57,23,-52,-53,-54,-55,-56,]),'WARNING':([0,2,3,4,5,6,7,8,9,10,11,30,31,32,33,34,35,36,37,38,41,54,55,56,60,61,65,68,69,78,79,82,83,84,85,86,88,89,90,91,92,93,113,114,115,116,117,118,119,120,139,140,],[24,24,-2,-3,-4,-5,-6,-7,-8,-9,-10,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,24,24,-42,24,-51,-43,-44,-22,-23,24,-30,-31,24,-37,-40,-41,24,-58,24,-39,-29,-32,-38,-57,24,-52,-53,-54,-55,-56,]),'NEWLINE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,68,69,70,71,72,74,75,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,97,99,100,113,114,115,116,117,118,119,120,123,124,127,128,129,130,131,132,134,139,140,141,],[-71,-71,-2,-3,-4,-5,-6,-7,-8,-9,-10,41,54,55,56,61,-13,-14,-15,-16,-17,-18,-19,-20,-21,78,79,-11,-72,-73,-74,-75,-76,-77,-24,-25,-26,-27,-28,-79,-12,-71,-71,86,88,89,-42,-71,92,93,-51,-43,-44,-46,-33,-34,-61,-62,-63,-64,-22,-23,-78,-71,-30,-31,-71,-37,115,-40,-41,-71,-58,-71,-39,-71,-35,-36,-29,-32,-38,-57,-71,-52,-53,-54,-45,-47,-65,-66,-67,-68,-69,-70,-80,-55,-56,-48,]),'COMMA':([0,2,3,4,5,6,7,8,9,10,11,12,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,60,61,65,68,69,70,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,97,107,108,109,110,111,112,113,114,115,116,117,118,119,120,123,124,125,126,133,134,135,136,137,138,139,140,141,143,144,145,146,147,],[-71,-71,-2,-3,-4,-5,-6,-7,-8,-9,-10,44,-13,-14,-15,-16,-17,-18,-19,-20,-21,44,-11,-72,-73,-74,-75,-76,-77,-24,-25,-26,-27,-28,-79,-12,-71,-71,-42,-71,-51,-43,-44,-46,-22,-23,-78,-83,-71,-30,-31,-71,-37,-40,-41,-71,-58,-71,-39,-71,-83,135,-82,-84,-85,-86,-29,-32,-38,-57,-71,-52,-53,-54,44,-47,142,-49,135,-80,-83,-88,-89,-83,-55,-56,-48,-87,-81,135,-50,-90,]),'RRP':([0,2,3,4,5,6,7,8,9,10,11,12,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,60,61,65,68,69,70,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,97,107,108,109,110,111,112,113,114,115,116,117,118,119,120,123,124,133,134,135,136,137,138,139,140,141,143,144,145,147,],[-71,-71,-2,-3,-4,-5,-6,-7,-8,-9,-10,45,-13,-14,-15,-16,-17,-18,-19,-20,-21,45,-11,-72,-73,-74,-75,-76,-77,-24,-25,-26,-27,-28,-79,-12,-71,-71,-42,-71,-51,-43,-44,-46,-22,-23,-78,-83,-71,-30,-31,-71,-37,-40,-41,-71,-58,-71,-39,-71,-83,134,-82,-84,-85,-86,-29,-32,-38,-57,-71,-52,-53,-54,45,-47,143,-80,-83,-88,-89,-83,-55,-56,-48,-87,-81,147,-90,]),'LLP':([0,2,3,4,5,6,7,8,9,10,11,12,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,60,61,65,68,69,70,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,97,107,110,111,112,113,114,115,116,117,118,119,120,123,124,134,135,136,137,138,139,140,141,143,147,],[-71,-71,-2,-3,-4,-5,-6,-7,-8,-9,-10,46,-13,-14,-15,-16,-17,-18,-19,-20,-21,46,-11,-72,-73,-74,-75,-76,-77,-24,-25,-26,-27,-28,81,-12,-71,-71,-42,-71,-51,-43,-44,-46,-22,-23,-78,107,-71,-30,-31,-71,-37,-40,-41,-71,-58,-71,-39,-71,107,138,-85,-86,-29,-32,-38,-57,-71,-52,-53,-54,46,-47,-80,107,-88,-89,107,-55,-56,-48,-87,-90,]),'STRING':([0,2,3,4,5,6,7,8,9,10,11,12,17,21,23,24,26,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,65,68,69,70,73,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,97,107,110,111,112,113,114,115,116,117,118,119,120,123,124,134,135,136,137,138,139,140,141,143,147,],[-71,-71,-2,-3,-4,-5,-6,-7,-8,-9,-10,48,59,64,68,69,71,-13,-14,-15,-16,-17,-18,-19,-20,-21,48,-11,-72,-73,-74,-75,-76,-77,-24,-25,-26,-27,-28,-79,-12,-71,-71,87,-42,-71,-51,-43,-44,-46,99,-22,-23,-78,48,-71,-30,-31,-71,-37,-40,-41,-71,-58,-71,-39,119,-71,48,48,-85,-86,-29,-32,-38,-57,-71,-52,-53,-54,48,-47,-80,48,-88,-89,48,-55,-56,-48,-87,-90,]),'TOKEN':([0,2,3,4,5,6,7,8,9,10,11,12,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,60,61,65,68,69,70,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,97,107,110,111,112,113,114,115,116,117,118,119,120,123,124,134,135,136,137,138,139,140,141,143,147,],[-71,-71,-2,-3,-4,-5,-6,-7,-8,-9,-10,49,-13,-14,-15,-16,-17,-18,-19,-20,-21,49,-11,-72,-73,-74,-75,-76,-77,-24,-25,-26,-27,-28,-79,-12,-71,-71,-42,-71,-51,-43,-44,-46,-22,-23,-78,49,-71,-30,-31,-71,-37,-40,-41,-71,-58,-71,-39,-71,49,49,-85,-86,-29,-32,-38,-57,-71,-52,-53,-54,49,-47,-80,49,-88,-89,49,-55,-56,-48,-87,-90,]),'CONTINUE':([0,2,3,4,5,6,7,8,9,10,11,12,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,60,61,65,68,69,70,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,97,107,110,111,112,113,114,115,116,117,118,119,120,123,124,134,135,136,137,138,139,140,141,143,147,],[-71,-71,-2,-3,-4,-5,-6,-7,-8,-9,-10,50,-13,-14,-15,-16,-17,-18,-19,-20,-21,50,-11,-72,-73,-74,-75,-76,-77,-24,-25,-26,-27,-28,-79,-12,-71,-71,-42,-71,-51,-43,-44,-46,-22,-23,-78,50,-71,-30,-31,-71,-37,-40,-41,-71,-58,-71,-39,-71,50,50,-85,-86,-29,-32,-38,-57,-71,-52,-53,-54,50,-47,-80,50,-88,-89,50,-55,-56,-48,-87,-90,]),'SEPARATOR':([0,2,3,4,5,6,7,8,9,10,11,12,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,60,61,65,68,69,70,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,97,107,110,111,112,113,114,115,116,117,118,119,120,123,124,134,135,136,137,138,139,140,141,143,147,],[-71,-71,-2,-3,-4,-5,-6,-7,-8,-9,-10,51,-13,-14,-15,-16,-17,-18,-19,-20,-21,51,-11,-72,-73,-74,-75,-76,-77,-24,-25,-26,-27,-28,-79,-12,-71,-71,-42,-71,-51,-43,-44,-46,-22,-23,-78,51,-71,-30,-31,-71,-37,-40,-41,-71,-58,-71,-39,-71,51,51,-85,-86,-29,-32,-38,-57,-71,-52,-53,-54,51,-47,-80,51,-88,-89,51,-55,-56,-48,-87,-90,]),'NUMBER':([0,2,3,4,5,6,7,8,9,10,11,12,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,60,61,65,68,69,70,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,97,107,110,111,112,113,114,115,116,117,118,119,120,123,124,134,135,136,137,138,139,140,141,143,147,],[-71,-71,-2,-3,-4,-5,-6,-7,-8,-9,-10,52,-13,-14,-15,-16,-17,-18,-19,-20,-21,52,-11,-72,-73,-74,-75,-76,-77,-24,-25,-26,-27,-28,-79,-12,-71,-71,-42,-71,-51,-43,-44,-46,-22,-23,-78,52,-71,-30,-31,-71,-37,-40,-41,-71,-58,-71,-39,-71,52,52,-85,-86,-29,-32,-38,-57,-71,-52,-53,-54,52,-47,-80,52,-88,-89,52,-55,-56,-48,-87,-90,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,17,18,22,25,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,60,61,65,68,69,70,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,101,102,103,104,105,106,107,110,111,112,113,114,115,116,117,118,119,120,123,124,134,135,136,137,138,139,140,141,142,143,147,],[-71,-71,-2,-3,-4,-5,-6,-7,-8,-9,-10,53,58,60,65,70,74,75,53,-13,-14,-15,-16,-17,-18,-19,-20,-21,53,-11,-72,-73,-74,-75,-76,-77,-24,-25,-26,-27,-28,-79,-12,-71,-71,-42,-71,-51,-43,-44,-46,-22,-23,-78,53,-71,-30,-31,-71,-37,-40,-41,-71,-58,-71,-39,118,121,122,-71,126,53,53,53,53,53,53,53,53,-85,-86,-29,-32,-38,-57,-71,-52,-53,-54,53,-47,-80,53,-88,-89,53,-55,-56,-48,146,-87,-90,]),'DEFINE':([0,2,3,4,5,6,7,8,9,10,11,30,31,32,33,34,35,36,37,38,41,54,55,56,60,61,65,68,69,78,79,82,83,84,85,86,88,89,90,91,92,93,113,114,115,116,117,118,119,120,139,140,],[25,25,-2,-3,-4,-5,-6,-7,-8,-9,-10,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,25,25,-42,25,-51,-43,-44,-22,-23,25,-30,-31,25,-37,-40,-41,25,-58,25,-39,-29,-32,-38,-57,25,-52,-53,-54,-55,-56,]),'INCLUDE':([0,2,3,4,5,6,7,8,9,10,11,30,31,32,33,34,35,36,37,38,41,54,55,56,60,61,65,68,69,78,79,82,83,84,85,86,88,89,90,91,92,93,113,114,115,116,117,118,119,120,139,140,],[26,26,-2,-3,-4,-5,-6,-7,-8,-9,-10,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,26,26,-42,26,-51,-43,-44,-22,-23,26,-30,-31,26,-37,-40,-41,26,-58,26,-39,-29,-32,-38,-57,26,-52,-53,-54,-55,-56,]),'IFDEF':([0,2,3,4,5,6,7,8,9,10,11,30,31,32,33,34,35,36,37,38,41,54,55,56,60,61,65,68,69,78,79,82,83,84,85,86,88,89,90,91,92,93,113,114,115,116,117,118,119,120,139,140,],[27,27,-2,-3,-4,-5,-6,-7,-8,-9,-10,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,27,27,-42,27,-51,-43,-44,-22,-23,27,-30,-31,27,-37,-40,-41,27,-58,27,-39,-29,-32,-38,-57,27,-52,-53,-54,-55,-56,]),'IFNDEF':([0,2,3,4,5,6,7,8,9,10,11,30,31,32,33,34,35,36,37,38,41,54,55,56,60,61,65,68,69,78,79,82,83,84,85,86,88,89,90,91,92,93,113,114,115,116,117,118,119,120,139,140,],[28,28,-2,-3,-4,-5,-6,-7,-8,-9,-10,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,28,28,-42,28,-51,-43,-44,-22,-23,28,-30,-31,28,-37,-40,-41,28,-58,28,-39,-29,-32,-38,-57,28,-52,-53,-54,-55,-56,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,30,31,32,33,34,35,36,37,38,41,54,55,56,60,61,65,68,69,78,79,82,83,84,85,86,88,89,90,91,92,93,113,114,115,116,117,118,119,120,139,140,],[29,29,-2,-3,-4,-5,-6,-7,-8,-9,-10,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,29,29,-42,29,-51,-43,-44,-22,-23,29,-30,-31,29,-37,-40,-41,29,-58,29,-39,-29,-32,-38,-57,29,-52,-53,-54,-55,-56,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,30,31,32,33,34,35,36,37,38,41,54,60,65,68,69,78,79,83,84,86,88,89,91,93,113,114,115,116,118,119,120,139,140,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,-42,-51,-43,-44,-22,-23,-30,-31,-37,-40,-41,-58,-39,-29,-32,-38,-57,-52,-53,-54,-55,-56,]),'_ENDFILE_':([3,4,5,6,7,8,9,10,11,30,31,32,33,34,35,36,37,38,41,54,55,56,60,65,68,69,78,79,82,83,84,85,86,88,89,91,93,113,114,115,116,118,119,120,139,140,],[-2,-3,-4,-5,-6,-7,-8,-9,-10,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,83,84,-42,-51,-43,-44,-22,-23,113,-30,-31,114,-37,-40,-41,-58,-39,-29,-32,-38,-57,-52,-53,-54,-55,-56,]),'ENDIF':([3,4,5,6,7,8,9,10,11,30,31,32,33,34,35,36,37,38,41,54,60,62,65,68,69,78,79,83,84,86,88,89,90,91,93,113,114,115,116,117,118,119,120,139,140,],[-2,-3,-4,-5,-6,-7,-8,-9,-10,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,-42,91,-51,-43,-44,-22,-23,-30,-31,-37,-40,-41,116,-58,-39,-29,-32,-38,-57,-60,-52,-53,-54,-55,-56,]),'ELSE':([3,4,5,6,7,8,9,10,11,20,30,31,32,33,34,35,36,37,38,41,54,60,65,68,69,78,79,83,84,86,88,89,90,91,93,113,114,115,116,118,119,120,139,140,],[-2,-3,-4,-5,-6,-7,-8,-9,-10,63,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,-42,-51,-43,-44,-22,-23,-30,-31,-37,-40,-41,-59,-58,-39,-29,-32,-38,-57,-52,-53,-54,-55,-56,]),'INTEGER':([16,94,],[57,120,]),'PUSH':([22,],[66,]),'POP':([22,],[67,]),'FILENAME':([26,73,],[72,100,]),'ONCE':([26,],[73,]),'NE':([53,76,77,80,127,128,129,130,131,132,134,],[-79,101,-64,-78,-65,-66,-67,-68,-69,-70,-80,]),'EQ':([53,65,76,77,80,127,128,129,130,131,132,134,],[-79,94,102,-64,-78,-65,-66,-67,-68,-69,-70,-80,]),'LT':([53,76,77,80,127,128,129,130,131,132,134,],[-79,103,-64,-78,-65,-66,-67,-68,-69,-70,-80,]),'LE':([53,76,77,80,127,128,129,130,131,132,134,],[-79,104,-64,-78,-65,-66,-67,-68,-69,-70,-80,]),'GT':([53,76,77,80,127,128,129,130,131,132,134,],[-79,105,-64,-78,-65,-66,-67,-68,-69,-70,-80,]),'GE':([53,76,77,80,127,128,129,130,131,132,134,],[-79,106,-64,-78,-65,-66,-67,-68,-69,-70,-80,]),'LP':([66,67,70,],[95,96,98,]),'RP':([98,121,122,125,126,146,],[124,139,140,141,-49,-50,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'program':([0,55,56,61,92,],[2,82,85,90,117,]),'include_file':([0,2,55,56,61,82,85,90,92,117,],[3,30,3,3,3,30,30,30,3,30,]),'line':([0,2,55,56,61,82,85,90,92,117,],[4,31,4,4,4,31,31,31,4,31,]),'init':([0,2,55,56,61,82,85,90,92,117,],[5,32,5,5,5,32,32,32,5,32,]),'undef':([0,2,55,56,61,82,85,90,92,117,],[6,33,6,6,6,33,33,33,6,33,]),'ifdef':([0,2,55,56,61,82,85,90,92,117,],[7,34,7,7,7,34,34,34,7,34,]),'require':([0,2,55,56,61,82,85,90,92,117,],[8,35,8,8,8,35,35,35,8,35,]),'pragma':([0,2,55,56,61,82,85,90,92,117,],[9,36,9,9,9,36,36,36,9,36,]),'errormsg':([0,2,55,56,61,82,85,90,92,117,],[10,37,10,10,10,37,37,37,10,37,]),'warningmsg':([0,2,55,56,61,82,85,90,92,117,],[11,38,11,11,11,38,38,38,11,38,]),'defs':([0,2,55,56,61,82,85,90,92,97,117,],[12,39,12,12,12,39,39,39,12,123,39,]),'define':([0,2,55,56,61,82,85,90,92,117,],[13,40,13,13,13,40,40,40,13,40,]),'include':([0,2,55,56,61,82,85,90,92,117,],[14,14,14,14,14,14,14,14,14,14,]),'include_once':([0,2,55,56,61,82,85,90,92,117,],[15,15,15,15,15,15,15,15,15,15,]),'if_header':([0,2,55,56,61,82,85,90,92,117,],[19,19,19,19,19,19,19,19,19,19,]),'ifdefelsea':([0,2,55,56,61,82,85,90,92,117,],[20,20,20,20,20,20,20,20,20,20,]),'def':([12,39,123,],[42,42,42,]),'token':([12,39,81,107,110,123,135,138,],[43,43,111,111,136,43,111,111,]),'macrocall':([12,29,39,81,101,102,103,104,105,106,107,110,123,135,138,],[47,77,47,112,77,77,77,77,77,77,112,137,47,112,112,]),'ifdefelseb':([20,],[62,]),'expr':([29,101,102,103,104,105,106,],[76,127,128,129,130,131,132,]),'args':([53,],[80,]),'params':([70,],[97,]),'arglist':([81,107,138,],[108,133,145,]),'arg':([81,107,135,138,],[109,109,144,109,]),'argstring':([81,107,135,138,],[110,110,110,110,]),'paramlist':([98,],[125,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> program','start',1,'p_start','zxbpp.py',190),
  ('program -> include_file','program',1,'p_program','zxbpp.py',198),
  ('program -> line','program',1,'p_program','zxbpp.py',199),
  ('program -> init','program',1,'p_program','zxbpp.py',200),
  ('program -> undef','program',1,'p_program','zxbpp.py',201),
  ('program -> ifdef','program',1,'p_program','zxbpp.py',202),
  ('program -> require','program',1,'p_program','zxbpp.py',203),
  ('program -> pragma','program',1,'p_program','zxbpp.py',204),
  ('program -> errormsg','program',1,'p_program','zxbpp.py',205),
  ('program -> warningmsg','program',1,'p_program','zxbpp.py',206),
  ('program -> defs NEWLINE','program',2,'p_program_tokenstring','zxbpp.py',212),
  ('program -> define NEWLINE','program',2,'p_program_tokenstring_2','zxbpp.py',224),
  ('program -> program include_file','program',2,'p_program_char','zxbpp.py',230),
  ('program -> program line','program',2,'p_program_char','zxbpp.py',231),
  ('program -> program init','program',2,'p_program_char','zxbpp.py',232),
  ('program -> program undef','program',2,'p_program_char','zxbpp.py',233),
  ('program -> program ifdef','program',2,'p_program_char','zxbpp.py',234),
  ('program -> program require','program',2,'p_program_char','zxbpp.py',235),
  ('program -> program pragma','program',2,'p_program_char','zxbpp.py',236),
  ('program -> program errormsg','program',2,'p_program_char','zxbpp.py',237),
  ('program -> program warningmsg','program',2,'p_program_char','zxbpp.py',238),
  ('program -> program defs NEWLINE','program',3,'p_program_newline','zxbpp.py',244),
  ('program -> program define NEWLINE','program',3,'p_program_newline_2','zxbpp.py',259),
  ('token -> STRING','token',1,'p_token','zxbpp.py',265),
  ('token -> TOKEN','token',1,'p_token','zxbpp.py',266),
  ('token -> CONTINUE','token',1,'p_token','zxbpp.py',267),
  ('token -> SEPARATOR','token',1,'p_token','zxbpp.py',268),
  ('token -> NUMBER','token',1,'p_token','zxbpp.py',269),
  ('include_file -> include NEWLINE program _ENDFILE_','include_file',4,'p_include_file','zxbpp.py',275),
  ('include_file -> include NEWLINE _ENDFILE_','include_file',3,'p_include_file_empty','zxbpp.py',284),
  ('include_file -> include_once NEWLINE _ENDFILE_','include_file',3,'p_include_once_empty','zxbpp.py',290),
  ('include_file -> include_once NEWLINE program _ENDFILE_','include_file',4,'p_include_once_ok','zxbpp.py',296),
  ('include -> INCLUDE STRING','include',2,'p_include','zxbpp.py',305),
  ('include -> INCLUDE FILENAME','include',2,'p_include_fname','zxbpp.py',315),
  ('include_once -> INCLUDE ONCE STRING','include_once',3,'p_include_once','zxbpp.py',325),
  ('include_once -> INCLUDE ONCE FILENAME','include_once',3,'p_include_once_fname','zxbpp.py',337),
  ('line -> LINE INTEGER NEWLINE','line',3,'p_line','zxbpp.py',351),
  ('line -> LINE INTEGER STRING NEWLINE','line',4,'p_line_file','zxbpp.py',360),
  ('require -> REQUIRE STRING NEWLINE','require',3,'p_require_file','zxbpp.py',369),
  ('init -> INIT ID NEWLINE','init',3,'p_init','zxbpp.py',375),
  ('init -> INIT STRING NEWLINE','init',3,'p_init','zxbpp.py',376),
  ('undef -> UNDEF ID','undef',2,'p_undef','zxbpp.py',382),
  ('errormsg -> ERROR STRING','errormsg',2,'p_errormsg','zxbpp.py',391),
  ('warningmsg -> WARNING STRING','warningmsg',2,'p_warningmsg','zxbpp.py',399),
  ('define -> DEFINE ID params defs','define',4,'p_define','zxbpp.py',407),
  ('params -> <empty>','params',0,'p_define_params_epsilon','zxbpp.py',422),
  ('params -> LP RP','params',2,'p_define_params_empty','zxbpp.py',428),
  ('params -> LP paramlist RP','params',3,'p_define_params_paramlist','zxbpp.py',436),
  ('paramlist -> ID','paramlist',1,'p_paramlist_single','zxbpp.py',457),
  ('paramlist -> paramlist COMMA ID','paramlist',3,'p_paramlist_paramlist','zxbpp.py',464),
  ('pragma -> PRAGMA ID','pragma',2,'p_pragma_id','zxbpp.py',471),
  ('pragma -> PRAGMA ID EQ ID','pragma',4,'p_pragma_id_expr','zxbpp.py',477),
  ('pragma -> PRAGMA ID EQ STRING','pragma',4,'p_pragma_id_expr','zxbpp.py',478),
  ('pragma -> PRAGMA ID EQ INTEGER','pragma',4,'p_pragma_id_expr','zxbpp.py',479),
  ('pragma -> PRAGMA PUSH LP ID RP','pragma',5,'p_pragma_push','zxbpp.py',485),
  ('pragma -> PRAGMA POP LP ID RP','pragma',5,'p_pragma_push','zxbpp.py',486),
  ('ifdef -> if_header NEWLINE program ENDIF','ifdef',4,'p_ifdef','zxbpp.py',492),
  ('ifdef -> ifdefelsea ifdefelseb ENDIF','ifdef',3,'p_ifdef_else','zxbpp.py',507),
  ('ifdefelsea -> if_header NEWLINE program','ifdefelsea',3,'p_ifdef_else_a','zxbpp.py',518),
  ('ifdefelseb -> ELSE NEWLINE program','ifdefelseb',3,'p_ifdef_else_b','zxbpp.py',531),
  ('if_header -> IFDEF ID','if_header',2,'p_if_header','zxbpp.py',543),
  ('if_header -> IFNDEF ID','if_header',2,'p_ifn_header','zxbpp.py',552),
  ('if_header -> IF expr','if_header',2,'p_if_expr_header','zxbpp.py',561),
  ('expr -> macrocall','expr',1,'p_expr','zxbpp.py',570),
  ('expr -> expr NE expr','expr',3,'p_exprne','zxbpp.py',576),
  ('expr -> expr EQ expr','expr',3,'p_expreq','zxbpp.py',582),
  ('expr -> expr LT expr','expr',3,'p_exprlt','zxbpp.py',588),
  ('expr -> expr LE expr','expr',3,'p_exprle','zxbpp.py',597),
  ('expr -> expr GT expr','expr',3,'p_exprgt','zxbpp.py',606),
  ('expr -> expr GE expr','expr',3,'p_exprge','zxbpp.py',615),
  ('defs -> <empty>','defs',0,'p_defs_list_eps','zxbpp.py',624),
  ('defs -> defs def','defs',2,'p_defs_list','zxbpp.py',630),
  ('def -> token','def',1,'p_def','zxbpp.py',636),
  ('def -> COMMA','def',1,'p_def','zxbpp.py',637),
  ('def -> RRP','def',1,'p_def','zxbpp.py',638),
  ('def -> LLP','def',1,'p_def','zxbpp.py',639),
  ('def -> macrocall','def',1,'p_def_macrocall','zxbpp.py',645),
  ('macrocall -> ID args','macrocall',2,'p_macrocall','zxbpp.py',651),
  ('args -> <empty>','args',0,'p_args_eps','zxbpp.py',657),
  ('args -> LLP arglist RRP','args',3,'p_args','zxbpp.py',663),
  ('arglist -> arglist COMMA arg','arglist',3,'p_arglist','zxbpp.py',669),
  ('arglist -> arg','arglist',1,'p_arglist_arg','zxbpp.py',676),
  ('arg -> <empty>','arg',0,'p_arg_eps','zxbpp.py',683),
  ('arg -> argstring','arg',1,'p_arg_argstring','zxbpp.py',689),
  ('argstring -> token','argstring',1,'p_argstring','zxbpp.py',695),
  ('argstring -> macrocall','argstring',1,'p_argstring','zxbpp.py',696),
  ('argstring -> LLP arglist RRP','argstring',3,'p_argstring_argslist','zxbpp.py',702),
  ('argstring -> argstring token','argstring',2,'p_argstring_token','zxbpp.py',708),
  ('argstring -> argstring macrocall','argstring',2,'p_argstring_token','zxbpp.py',709),
  ('argstring -> argstring LLP arglist RRP','argstring',4,'p_argstring_argstring','zxbpp.py',716),
]
