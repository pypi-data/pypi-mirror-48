=====================
Test report processor
=====================
.. image:: https://secure.travis-ci.org/kpn-digital/test_report_processor.svg?branch=master
    :target:  http://travis-ci.org/kpn-digital/test_report_processor?branch=master

.. image:: https://img.shields.io/codecov/c/github/kpn-digital/test_report_processor/master.svg
    :target: http://codecov.io/github/kpn-digital/test_report_processor?branch=master

.. image:: https://img.shields.io/pypi/v/test_report_processor.svg
    :target: https://pypi.python.org/pypi/test_report_processor

.. image:: https://readthedocs.org/projects/test_report_processor/badge/?version=latest
    :target: http://test_report_processor.readthedocs.org/en/latest/?badge=latest

This repository is a JSON parser for test reports. It imports a test report generated by pytest (cucumber JSON file). Then is parses the cucumber JSON to any desired JSON report.

When output to Paessler is selected, the new JSON is send to a paessler sensor through a GET request.
The Paessler sensor's are displayed on a Paessler dashboard for DevOps purposes.

Requirements
------------
- json
- request


Usage
-----
When using the test report parser, the required input is a test report JSON file. The output can be any of the mentioned outputs.

**Input**
- Cucumber test report (JSON file)

**Output**
- Paessler JSON


Importing the package
---------------------

Import the package by including the following code::
    ``from test_report_processor.test_report_processor import ReportParser``


Starting a new parser
---------------------
Start the parser by creating a new ReportParser class:

    ``report_parser = ReportParser("/path/cucumber.json", "paessler", "duration")``



Input parameters for ReportParser class
---------------------------------------

Creating a new ReportParser class requires 3 parameters:

1. Location of the "cucumber.json" file (string)
2. Desired parser output (string), options:
    - "paessler" for paessler dashboard
3. Sensor type (string), options:
    - "duration" - test durations of scenario's and steps in milliseconds
    - "status" - test status of scenario's and steps in "pass" or "fail"


Debugging
---------
After creating a ReportParser class, you can view the parsed json with this variable:

    ``report_parser.paessler_json``


A URL will also be generated which points to the Paessler sensor id where the result will be displayed. View the Paessler URL with this variable:

    ``report_parser.paessler_url``
