Metadata-Version: 2.1
Name: flat-tree
Version: 0.0.1a3
Summary: Utilities for navigating flat trees
Home-page: https://hack.decentral1.se/datpy/flat-tree.git
Author: decentral1se
Author-email: lukewm@riseup.net
Maintainer: decentral1se
Maintainer-email: lukewm@riseup.net
License: MIT
Project-URL: Source Code, https://hack.decentral1.se/datpy/flat-tree.git
Project-URL: Changelog, https://flat-tree.readthedocs.io/en/latest/changelog.html
Project-URL: Documentation, https://flat-tree.readthedocs.io/
Project-URL: Maintainer Support, https://decentral1.se/
Description: .. _header:
        
        *********
        flat-tree
        *********
        
        .. image:: https://img.shields.io/badge/license-MIT-brightgreen.svg
           :target: LICENSE
           :alt: Repository license
        
        .. image:: https://badge.fury.io/py/flat_tree.svg
           :target: https://badge.fury.io/py/flat_tree
           :alt: PyPI Package
        
        .. image:: https://readthedocs.org/projects/flat-tree/badge/?version=latest
           :target: https://flat-tree.readthedocs.io/en/latest/?badge=latest
           :alt: Documentation Status
        
        .. image:: https://img.shields.io/badge/support-maintainers-brightgreen.svg
           :target: https://decentral1.se/
           :alt: Support badge
        
        .. _introduction:
        
        Utilities for navigating flat trees
        -----------------------------------
        
        From `The Dat Protocol`_: 
        
        .. _The Dat Protocol: https://datprotocol.github.io/book/ch01-01-flat-tree.html
        
            Flat Trees are the core data structure that power Dat's Hypercore feeds. They
            allow us to deterministically represent a tree structure as a vector. This is
            particularly useful because vectors map elegantly to disk and memory.
        
            Because Flat Trees are deterministic and pre-computed, there is no overhead
            to using them. In effect this means that Flat Trees are a specific way of
            indexing into a vector more than they are their own data structure. This makes
            them uniquely efficient and convenient to implement in a wide range of
            languages.
        
        .. _documentation:
        
        Documentation
        *************
        
        * https://flat-tree.readthedocs.io
        
        .. _mirroring:
        
        Mirroring
        *********
        
        * https://hack.decentral1.se/datpy/flat_tree (primary)
        * https://github.com/datpy/flat_tree
        
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Requires-Python: !=2.7.*, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5
Provides-Extra: changelog
Provides-Extra: docs
