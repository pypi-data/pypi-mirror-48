interactions:
- request:
    body: status=http%3A%2F%2Fexample.org%2F
    headers:
      Accept: ['*/*']
      Accept-Encoding: ['gzip, deflate']
      Authorization: [Bearer __MASTODON_PY_TEST_ACCESS_TOKEN]
      Connection: [keep-alive]
      Content-Length: ['34']
      Content-Type: [application/x-www-form-urlencoded]
      User-Agent: [python-requests/2.9.1]
    method: POST
    uri: http://localhost:3000/api/v1/statuses
  response:
    body: {string: '{"id":"100154009030743123","created_at":"2018-06-05T20:01:37.645Z","in_reply_to_id":null,"in_reply_to_account_id":null,"sensitive":false,"spoiler_text":"","visibility":"public","language":"ja","uri":"http://localhost:3000/users/mastodonpy_test/statuses/100154009030743123","content":"\u003cp\u003e\u003ca
        href=\"http://example.org/\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u003cspan
        class=\"invisible\"\u003ehttp://\u003c/span\u003e\u003cspan class=\"\"\u003eexample.org/\u003c/span\u003e\u003cspan
        class=\"invisible\"\u003e\u003c/span\u003e\u003c/a\u003e\u003c/p\u003e","url":"http://localhost:3000/@mastodonpy_test/100154009030743123","reblogs_count":0,"favourites_count":0,"favourited":false,"reblogged":false,"muted":false,"pinned":false,"reblog":null,"application":{"name":"Mastodon.py
        test suite","website":null},"account":{"id":"1234567890123456","username":"mastodonpy_test","acct":"mastodonpy_test","display_name":"John
        Lennon","locked":true,"bot":false,"created_at":"2018-06-05T21:58:43.069Z","note":"\u003cp\u003eI
        walk funny\u003c/p\u003e","url":"http://localhost:3000/@mastodonpy_test","avatar":"http://localhost:3000/system/accounts/avatars/123/456/789/012/345/original/mastodonpyupload_.jpg","avatar_static":"http://localhost:3000/system/accounts/avatars/123/456/789/012/345/original/mastodonpyupload_.jpg","header":"http://localhost:3000/system/accounts/headers/123/456/789/012/345/original/mastodonpyupload_.jpg","header_static":"http://localhost:3000/system/accounts/headers/123/456/789/012/345/original/mastodonpyupload_.jpg","followers_count":0,"following_count":1,"statuses_count":16,"emojis":[],"fields":[{"name":"bread","value":"toasty."},{"name":"lasagna","value":"no!!!"}]},"media_attachments":[],"mentions":[],"tags":[],"emojis":[]}'}
    headers:
      Cache-Control: ['max-age=0, private, must-revalidate']
      Content-Type: [application/json; charset=utf-8]
      ETag: [W/"17e539a2d956d8a5b4867430ef0e9346"]
      Referrer-Policy: [strict-origin-when-cross-origin]
      Transfer-Encoding: [chunked]
      Vary: ['Accept-Encoding, Origin']
      X-Content-Type-Options: [nosniff]
      X-Download-Options: [noopen]
      X-Frame-Options: [SAMEORIGIN]
      X-Permitted-Cross-Domain-Policies: [none]
      X-Request-Id: [cd6e32bf-531d-4f51-9fc8-cb46af6e7049]
      X-Runtime: ['0.364621']
      X-XSS-Protection: [1; mode=block]
      content-length: ['1769']
    status: {code: 200, message: OK}
- request:
    body: null
    headers:
      Accept: ['*/*']
      Accept-Encoding: ['gzip, deflate']
      Authorization: [Bearer __MASTODON_PY_TEST_ACCESS_TOKEN]
      Connection: [keep-alive]
      User-Agent: [python-requests/2.9.1]
    method: GET
    uri: http://localhost:3000/api/v1/statuses/100154009030743123/card
  response:
    body: {string: '{"url":"http://example.org/","title":"Example Domain","description":"","type":"link","author_name":"","author_url":"","provider_name":"","provider_url":"","html":"","width":0,"height":0,"image":null,"embed_url":""}'}
    headers:
      Cache-Control: ['max-age=0, private, must-revalidate']
      Content-Type: [application/json; charset=utf-8]
      ETag: [W/"fcf9181a40ff3a8e1f158a6da35f808e"]
      Referrer-Policy: [strict-origin-when-cross-origin]
      Transfer-Encoding: [chunked]
      Vary: ['Accept-Encoding, Origin']
      X-Content-Type-Options: [nosniff]
      X-Download-Options: [noopen]
      X-Frame-Options: [SAMEORIGIN]
      X-Permitted-Cross-Domain-Policies: [none]
      X-Request-Id: [3b339781-0fcb-41d2-b6f9-410e1a3269ee]
      X-Runtime: ['0.055533']
      X-XSS-Protection: [1; mode=block]
      content-length: ['214']
    status: {code: 200, message: OK}
- request:
    body: null
    headers:
      Accept: ['*/*']
      Accept-Encoding: ['gzip, deflate']
      Authorization: [Bearer __MASTODON_PY_TEST_ACCESS_TOKEN]
      Connection: [keep-alive]
      Content-Length: ['0']
      User-Agent: [python-requests/2.9.1]
    method: DELETE
    uri: http://localhost:3000/api/v1/statuses/100154009030743123
  response:
    body: {string: '{}'}
    headers:
      Cache-Control: ['max-age=0, private, must-revalidate']
      Content-Type: [application/json; charset=utf-8]
      ETag: [W/"a71e9ed1525a2d05ebbc695180e492d5"]
      Referrer-Policy: [strict-origin-when-cross-origin]
      Transfer-Encoding: [chunked]
      Vary: ['Accept-Encoding, Origin']
      X-Content-Type-Options: [nosniff]
      X-Download-Options: [noopen]
      X-Frame-Options: [SAMEORIGIN]
      X-Permitted-Cross-Domain-Policies: [none]
      X-Request-Id: [ec2dc34a-d7db-45c6-b0fe-3c774379244b]
      X-Runtime: ['0.049468']
      X-XSS-Protection: [1; mode=block]
      content-length: ['2']
    status: {code: 200, message: OK}
version: 1
