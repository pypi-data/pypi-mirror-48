metadata:
  title: Nested for loops
  documentation: "https://docassemble.org/docs/groups.html"
  example start: 2
  example end: 5
---
modules:
  - docassemble.base.legal
---
objects:
  - person: PartyList.using(minimum_number=1, complete_attribute='complete')
  - person[i].child: ChildList.using(complete_attribute='complete')
  - person[i].child[j].allergy: DAList
---
mandatory: True
question: |
  Information retrieved
subquestion: |
  The people are:

  % for item in person:
  * ${ item }
  % endfor
buttons:
  - Restart: restart
---
code: |
  person[i].name.first
  person[i].name.last
  person[i].child.gather()
  person[i].complete = True
---
code: |
  person[i].child[j].name.first
  person[i].child[j].name.last
  person[i].child[j].allergy.gather()
  person[i].child[j].complete = True
---
question: |
  Is there another person?
yesno: person.there_is_another
---
generic object: Individual
question: |
  Does ${ x } have any children?
yesno: x.child.there_are_any
---
generic object: Individual
question: |
  Does ${ x } have any children other than ${ x.child }?
yesno: x.child.there_is_another
---
generic object: Individual
question: |
  Does ${ x } have any allergies?
yesno: x.allergy.there_are_any
---
generic object: Individual
question: |
  Does ${ x } have any allergies other than ${ x.allergy }?
yesno: x.allergy.there_is_another
---
question: |
  What is the name of the ${ ordinal(i) } person?
fields:
  - First: person[i].name.first
  - Last: person[i].name.last
---
generic object: Individual
question: |
  What is the name of ${ x.possessive(ordinal(i) + ' child') }?
fields:
  - First: x.child[i].name.first
  - Last: x.child[i].name.last
---
generic object: Individual
question: |
  What allergy does ${ x } have?
fields:
  - Allergy: x.allergy[i]
