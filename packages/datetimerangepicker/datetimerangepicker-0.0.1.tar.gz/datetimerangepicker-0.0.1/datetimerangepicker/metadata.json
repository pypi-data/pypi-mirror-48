{
  "src/lib/components/DateTimeRangePicker.react.js": {
    "description": "DatePickerRange is a tailor made component designed for selecting\ntimespan across multiple days off of a calendar.\n\nThe DatePicker integrates well with the Python datetime module with the\nstartDate and endDate being returned in a string format suitable for\ncreating datetime objects.\n\nThis component is based off of Airbnb's react-dates react component\nwhich can be found here: https://github.com/airbnb/react-dates", 
    "displayName": "DateTimeRangeRange", 
    "methods": [
      {
        "name": "propsToState", 
        "docblock": null, 
        "modifiers": [], 
        "params": [
          {
            "name": "newProps", 
            "type": null
          }
        ], 
        "returns": null
      }, 
      {
        "name": "onDatesChange", 
        "docblock": null, 
        "modifiers": [], 
        "params": [
          {
            "name": "{startDate: start_date, endDate: end_date}", 
            "type": null
          }
        ], 
        "returns": null
      }, 
      {
        "name": "isOutsideRange", 
        "docblock": null, 
        "modifiers": [], 
        "params": [
          {
            "name": "date", 
            "type": null
          }
        ], 
        "returns": null
      }
    ], 
    "props": {
      "locale": {
        "type": {
          "name": "string"
        }, 
        "required": false, 
        "description": "", 
        "defaultValue": {
          "value": "'en'", 
          "computed": false
        }
      }, 
      "id": {
        "type": {
          "name": "string"
        }, 
        "required": false, 
        "description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app."
      }, 
      "start_date": {
        "type": {
          "name": "string"
        }, 
        "required": false, 
        "description": "Specifies the starting date for the component.\nAccepts datetime.datetime objects or strings\nin the format 'YYYY-MM-DD'"
      }, 
      "start_date_id": {
        "type": {
          "name": "string"
        }, 
        "required": false, 
        "description": "The HTML element ID of the start date input field.\nNot used by Dash, only by CSS."
      }, 
      "end_date_id": {
        "type": {
          "name": "string"
        }, 
        "required": false, 
        "description": "The HTML element ID of the end date input field.\nNot used by Dash, only by CSS."
      }, 
      "end_date": {
        "type": {
          "name": "string"
        }, 
        "required": false, 
        "description": "Specifies the ending date for the component.\nAccepts datetime.datetime objects or strings\nin the format 'YYYY-MM-DD'"
      }, 
      "min_date_allowed": {
        "type": {
          "name": "string"
        }, 
        "required": false, 
        "description": "Specifies the lowest selectable date for the component.\nAccepts datetime.datetime objects or strings\nin the format 'YYYY-MM-DD'"
      }, 
      "max_date_allowed": {
        "type": {
          "name": "string"
        }, 
        "required": false, 
        "description": "Specifies the highest selectable date for the component.\nAccepts datetime.datetime objects or strings\nin the format 'YYYY-MM-DD'"
      }, 
      "initial_visible_month": {
        "type": {
          "name": "string"
        }, 
        "required": false, 
        "description": "Specifies the month that is initially presented when the user\nopens the calendar. Accepts datetime.datetime objects or strings\nin the format 'YYYY-MM-DD'"
      }, 
      "start_date_placeholder_text": {
        "type": {
          "name": "string"
        }, 
        "required": false, 
        "description": "Text that will be displayed in the first input\nbox of the date picker when no date is selected. Default value is 'Start Date'"
      }, 
      "end_date_placeholder_text": {
        "type": {
          "name": "string"
        }, 
        "required": false, 
        "description": "Text that will be displayed in the second input\nbox of the date picker when no date is selected. Default value is 'End Date'"
      }, 
      "day_size": {
        "type": {
          "name": "number"
        }, 
        "required": false, 
        "description": "Size of rendered calendar days, higher number\nmeans bigger day size and larger calendar overall", 
        "defaultValue": {
          "value": "39", 
          "computed": false
        }
      }, 
      "calendar_orientation": {
        "type": {
          "name": "enum", 
          "value": [
            {
              "value": "'vertical'", 
              "computed": false
            }, 
            {
              "value": "'horizontal'", 
              "computed": false
            }
          ]
        }, 
        "required": false, 
        "description": "Orientation of calendar, either vertical or horizontal.\nValid options are 'vertical' or 'horizontal'.", 
        "defaultValue": {
          "value": "'horizontal'", 
          "computed": false
        }
      }, 
      "is_RTL": {
        "type": {
          "name": "bool"
        }, 
        "required": false, 
        "description": "Determines whether the calendar and days operate\nfrom left to right or from right to left", 
        "defaultValue": {
          "value": "false", 
          "computed": false
        }
      }, 
      "reopen_calendar_on_clear": {
        "type": {
          "name": "bool"
        }, 
        "required": false, 
        "description": "If True, the calendar will automatically open when cleared", 
        "defaultValue": {
          "value": "false", 
          "computed": false
        }
      }, 
      "number_of_months_shown": {
        "type": {
          "name": "number"
        }, 
        "required": false, 
        "description": "Number of calendar months that are shown when calendar is opened", 
        "defaultValue": {
          "value": "1", 
          "computed": false
        }
      }, 
      "with_portal": {
        "type": {
          "name": "bool"
        }, 
        "required": false, 
        "description": "If True, calendar will open in a screen overlay portal,\nnot supported on vertical calendar", 
        "defaultValue": {
          "value": "false", 
          "computed": false
        }
      }, 
      "with_full_screen_portal": {
        "type": {
          "name": "bool"
        }, 
        "required": false, 
        "description": "If True, calendar will open in a full screen overlay portal, will\ntake precedent over 'withPortal' if both are set to true,\nnot supported on vertical calendar", 
        "defaultValue": {
          "value": "false", 
          "computed": false
        }
      }, 
      "first_day_of_week": {
        "type": {
          "name": "enum", 
          "value": [
            {
              "value": "0", 
              "computed": false
            }, 
            {
              "value": "1", 
              "computed": false
            }, 
            {
              "value": "2", 
              "computed": false
            }, 
            {
              "value": "3", 
              "computed": false
            }, 
            {
              "value": "4", 
              "computed": false
            }, 
            {
              "value": "5", 
              "computed": false
            }, 
            {
              "value": "6", 
              "computed": false
            }
          ]
        }, 
        "required": false, 
        "description": "Specifies what day is the first day of the week, values must be\nfrom [0, ..., 6] with 0 denoting Sunday and 6 denoting Saturday", 
        "defaultValue": {
          "value": "0", 
          "computed": false
        }
      }, 
      "minimum_nights": {
        "type": {
          "name": "number"
        }, 
        "required": false, 
        "description": "Specifies a minimum number of nights that must be selected between\nthe startDate and the endDate"
      }, 
      "stay_open_on_select": {
        "type": {
          "name": "bool"
        }, 
        "required": false, 
        "description": "If True the calendar will not close when the user has selected a value\nand will wait until the user clicks off the calendar", 
        "defaultValue": {
          "value": "false", 
          "computed": false
        }
      }, 
      "show_outside_days": {
        "type": {
          "name": "bool"
        }, 
        "required": false, 
        "description": "If True the calendar will display days that rollover into\nthe next month"
      }, 
      "month_format": {
        "type": {
          "name": "string"
        }, 
        "required": false, 
        "description": "Specifies the format that the month will be displayed in the calendar,\nvalid formats are variations of \"MM YY\". For example:\n\"MM YY\" renders as '05 97' for May 1997\n\"MMMM, YYYY\" renders as 'May, 1997' for May 1997\n\"MMM, YY\" renders as 'Sep, 97' for September 1997"
      }, 
      "display_format": {
        "type": {
          "name": "string"
        }, 
        "required": false, 
        "description": "Specifies the format that the selected dates will be displayed\nvalid formats are variations of \"MM YY DD\". For example:\n\"MM YY DD\" renders as '05 10 97' for May 10th 1997\n\"MMMM, YY\" renders as 'May, 1997' for May 10th 1997\n\"M, D, YYYY\" renders as '07, 10, 1997' for September 10th 1997\n\"MMMM\" renders as 'May' for May 10 1997"
      }, 
      "disabled": {
        "type": {
          "name": "bool"
        }, 
        "required": false, 
        "description": "If True, no dates can be selected.", 
        "defaultValue": {
          "value": "false", 
          "computed": false
        }
      }, 
      "clearable": {
        "type": {
          "name": "bool"
        }, 
        "required": false, 
        "description": "Whether or not the dropdown is \"clearable\", that is, whether or\nnot a small \"x\" appears on the right of the dropdown that removes\nthe selected value.", 
        "defaultValue": {
          "value": "false", 
          "computed": false
        }
      }, 
      "setProps": {
        "type": {
          "name": "func"
        }, 
        "required": false, 
        "description": "Dash-assigned callback that gets fired when the value changes."
      }, 
      "style": {
        "type": {
          "name": "object"
        }, 
        "required": false, 
        "description": "CSS styles appended to wrapper div"
      }, 
      "className": {
        "type": {
          "name": "string"
        }, 
        "required": false, 
        "description": "Appends a CSS class to the wrapper div component."
      }, 
      "updatemode": {
        "type": {
          "name": "enum", 
          "value": [
            {
              "value": "'singledate'", 
              "computed": false
            }, 
            {
              "value": "'bothdates'", 
              "computed": false
            }
          ]
        }, 
        "required": false, 
        "description": "Determines when the component should update\nits value. If `bothdates`, then the DatePicker\nwill only trigger its value when the user has\nfinished picking both dates. If `singledate`, then\nthe DatePicker will update its value\nas one date is picked.", 
        "defaultValue": {
          "value": "'singledate'", 
          "computed": false
        }
      }, 
      "loading_state": {
        "type": {
          "name": "shape", 
          "value": {
            "is_loading": {
              "name": "bool", 
              "description": "Determines if the component is loading or not", 
              "required": false
            }, 
            "prop_name": {
              "name": "string", 
              "description": "Holds which property is loading", 
              "required": false
            }, 
            "component_name": {
              "name": "string", 
              "description": "Holds the name of the component that is loading", 
              "required": false
            }
          }
        }, 
        "required": false, 
        "description": "Object that holds the loading state object coming from dash-renderer"
      }
    }
  }
}