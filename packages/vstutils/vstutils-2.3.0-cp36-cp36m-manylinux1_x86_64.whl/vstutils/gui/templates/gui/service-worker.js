importScripts('https://storage.googleapis.com/workbox-cdn/releases/4.3.1/workbox-sw.js');workbox.core.skipWaiting();workbox.core.clientsClaim();const STATIC_FILES_LIST=['{% static static_file.name %}?v={{ gui_version }}',];const OFFLINE_PAGE='/offline.html';const FAVICON="{% static 'img/logo/favicon.ico' %}";const ADDITIONAL_FILES_LIST=[];const PRECACHE_LIST=[OFFLINE_PAGE,FAVICON].concat(STATIC_FILES_LIST,ADDITIONAL_FILES_LIST);workbox.core.setCacheNameDetails({prefix:'{{ project_gui_name }}',suffix:'v{{gui_version}}',precache:'static',runtime:'run-time',});workbox.precaching.precacheAndRoute(PRECACHE_LIST);workbox.routing.registerRoute(/\/api\/openapi\/\?format=openapi/,new workbox.strategies.CacheFirst({cacheName:workbox.core.cacheNames.runtime,}),);self.addEventListener('activate',event=>{let cacheWhitelist=[workbox.core.cacheNames.precache,workbox.core.cacheNames.runtime];event.waitUntil(caches.keys().then(keyList=>{return Promise.all(keyList.map(key=>{if(cacheWhitelist.indexOf(key)===-1){return caches.delete(key);}}));}));});self.addEventListener('fetch',(event)=>{let request=event.request;if(request.method==='GET'&&request.headers.get('accept').includes('text/html')){event.respondWith(fetch(request).catch((error)=>caches.match(OFFLINE_PAGE)));}});