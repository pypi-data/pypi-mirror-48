# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkNormalizedCorrelationTwoImageToOneImageMetricPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkNormalizedCorrelationTwoImageToOneImageMetricPython', [dirname(__file__)])
        except ImportError:
            import _itkNormalizedCorrelationTwoImageToOneImageMetricPython
            return _itkNormalizedCorrelationTwoImageToOneImageMetricPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkNormalizedCorrelationTwoImageToOneImageMetricPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkNormalizedCorrelationTwoImageToOneImageMetricPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkNormalizedCorrelationTwoImageToOneImageMetricPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkArrayPython
import vnl_vectorPython
import stdcomplexPython
import pyBasePython
import vnl_matrixPython
import ITKCommonBasePython
import itkTwoImageToOneImageMetricPython
import itkTransformBasePython
import itkVectorPython
import itkFixedArrayPython
import vnl_vector_refPython
import itkSymmetricSecondRankTensorPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkPointPython
import itkCovariantVectorPython
import itkOptimizerParametersPython
import itkDiffusionTensor3DPython
import itkVariableLengthVectorPython
import itkArray2DPython
import itkSpatialObjectBasePython
import itkImageRegionPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkBoundingBoxPython
import itkMapContainerPython
import itkVectorContainerPython
import itkContinuousIndexPython
import itkSpatialObjectPropertyPython
import itkRGBAPixelPython
import itkAffineTransformPython
import itkMatrixOffsetTransformBasePython
import itkImagePython
import itkRGBPixelPython
import ITKCostFunctionsPython
import vnl_least_squares_functionPython
import itkCostFunctionPython
import vnl_cost_functionPython
import vnl_unary_functionPython
import itkInterpolateImageFunctionPython
import itkImageFunctionBasePython
import itkFunctionBasePython

def itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3_New():
  return itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3.New()


def itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2_New():
  return itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2.New()


def itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3_New():
  return itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3.New()


def itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2_New():
  return itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2.New()


def itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3_New():
  return itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3.New()


def itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2_New():
  return itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2.New()


def itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3_New():
  return itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3.New()


def itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2_New():
  return itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2.New()

class itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2(itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF2IF2):
    """Proxy of C++ itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2_Pointer":
        """__New_orig__() -> itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2_Pointer"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2_Pointer":
        """Clone(itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2 self) -> itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2_Pointer"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2_Clone(self)


    def SetSubtractMean(self, _arg: 'bool const') -> "void":
        """SetSubtractMean(itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2 self, bool const _arg)"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2_SetSubtractMean(self, _arg)


    def GetSubtractMean(self) -> "bool const &":
        """GetSubtractMean(itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2 self) -> bool const &"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2_GetSubtractMean(self)


    def SubtractMeanOn(self) -> "void":
        """SubtractMeanOn(itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2 self)"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2_SubtractMeanOn(self)


    def SubtractMeanOff(self) -> "void":
        """SubtractMeanOff(itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2 self)"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2_SubtractMeanOff(self)

    __swig_destroy__ = _itkNormalizedCorrelationTwoImageToOneImageMetricPython.delete_itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2

    def cast(obj: 'itkLightObject') -> "itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2 *":
        """cast(itkLightObject obj) -> itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2

        Create a new object of the class itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2.Clone = new_instancemethod(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2_Clone, None, itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2)
itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2.SetSubtractMean = new_instancemethod(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2_SetSubtractMean, None, itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2)
itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2.GetSubtractMean = new_instancemethod(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2_GetSubtractMean, None, itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2)
itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2.SubtractMeanOn = new_instancemethod(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2_SubtractMeanOn, None, itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2)
itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2.SubtractMeanOff = new_instancemethod(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2_SubtractMeanOff, None, itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2)
itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2_swigregister = _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2_swigregister
itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2_swigregister(itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2)

def itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2___New_orig__() -> "itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2_Pointer":
    """itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2___New_orig__() -> itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2_Pointer"""
    return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2___New_orig__()

def itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2_cast(obj: 'itkLightObject') -> "itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2 *":
    """itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2_cast(itkLightObject obj) -> itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2"""
    return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2_cast(obj)

class itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3(itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF3IF3):
    """Proxy of C++ itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3_Pointer":
        """__New_orig__() -> itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3_Pointer"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3_Pointer":
        """Clone(itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3 self) -> itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3_Pointer"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3_Clone(self)


    def SetSubtractMean(self, _arg: 'bool const') -> "void":
        """SetSubtractMean(itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3 self, bool const _arg)"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3_SetSubtractMean(self, _arg)


    def GetSubtractMean(self) -> "bool const &":
        """GetSubtractMean(itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3 self) -> bool const &"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3_GetSubtractMean(self)


    def SubtractMeanOn(self) -> "void":
        """SubtractMeanOn(itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3 self)"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3_SubtractMeanOn(self)


    def SubtractMeanOff(self) -> "void":
        """SubtractMeanOff(itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3 self)"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3_SubtractMeanOff(self)

    __swig_destroy__ = _itkNormalizedCorrelationTwoImageToOneImageMetricPython.delete_itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3

    def cast(obj: 'itkLightObject') -> "itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3 *":
        """cast(itkLightObject obj) -> itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3

        Create a new object of the class itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3.Clone = new_instancemethod(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3_Clone, None, itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3)
itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3.SetSubtractMean = new_instancemethod(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3_SetSubtractMean, None, itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3)
itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3.GetSubtractMean = new_instancemethod(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3_GetSubtractMean, None, itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3)
itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3.SubtractMeanOn = new_instancemethod(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3_SubtractMeanOn, None, itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3)
itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3.SubtractMeanOff = new_instancemethod(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3_SubtractMeanOff, None, itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3)
itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3_swigregister = _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3_swigregister
itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3_swigregister(itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3)

def itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3___New_orig__() -> "itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3_Pointer":
    """itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3___New_orig__() -> itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3_Pointer"""
    return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3___New_orig__()

def itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3_cast(obj: 'itkLightObject') -> "itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3 *":
    """itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3_cast(itkLightObject obj) -> itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3"""
    return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3_cast(obj)

class itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2(itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS2ISS2):
    """Proxy of C++ itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2_Pointer":
        """__New_orig__() -> itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2_Pointer"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2_Pointer":
        """Clone(itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2 self) -> itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2_Pointer"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2_Clone(self)


    def SetSubtractMean(self, _arg: 'bool const') -> "void":
        """SetSubtractMean(itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2 self, bool const _arg)"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2_SetSubtractMean(self, _arg)


    def GetSubtractMean(self) -> "bool const &":
        """GetSubtractMean(itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2 self) -> bool const &"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2_GetSubtractMean(self)


    def SubtractMeanOn(self) -> "void":
        """SubtractMeanOn(itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2 self)"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2_SubtractMeanOn(self)


    def SubtractMeanOff(self) -> "void":
        """SubtractMeanOff(itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2 self)"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2_SubtractMeanOff(self)

    __swig_destroy__ = _itkNormalizedCorrelationTwoImageToOneImageMetricPython.delete_itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2

    def cast(obj: 'itkLightObject') -> "itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2 *":
        """cast(itkLightObject obj) -> itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2

        Create a new object of the class itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2.Clone = new_instancemethod(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2_Clone, None, itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2)
itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2.SetSubtractMean = new_instancemethod(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2_SetSubtractMean, None, itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2)
itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2.GetSubtractMean = new_instancemethod(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2_GetSubtractMean, None, itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2)
itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2.SubtractMeanOn = new_instancemethod(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2_SubtractMeanOn, None, itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2)
itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2.SubtractMeanOff = new_instancemethod(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2_SubtractMeanOff, None, itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2)
itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2_swigregister = _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2_swigregister
itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2_swigregister(itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2)

def itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2___New_orig__() -> "itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2_Pointer":
    """itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2___New_orig__() -> itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2_Pointer"""
    return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2___New_orig__()

def itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2_cast(obj: 'itkLightObject') -> "itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2 *":
    """itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2_cast(itkLightObject obj) -> itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2"""
    return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2_cast(obj)

class itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3(itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS3ISS3):
    """Proxy of C++ itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3_Pointer":
        """__New_orig__() -> itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3_Pointer"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3_Pointer":
        """Clone(itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3 self) -> itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3_Pointer"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3_Clone(self)


    def SetSubtractMean(self, _arg: 'bool const') -> "void":
        """SetSubtractMean(itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3 self, bool const _arg)"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3_SetSubtractMean(self, _arg)


    def GetSubtractMean(self) -> "bool const &":
        """GetSubtractMean(itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3 self) -> bool const &"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3_GetSubtractMean(self)


    def SubtractMeanOn(self) -> "void":
        """SubtractMeanOn(itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3 self)"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3_SubtractMeanOn(self)


    def SubtractMeanOff(self) -> "void":
        """SubtractMeanOff(itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3 self)"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3_SubtractMeanOff(self)

    __swig_destroy__ = _itkNormalizedCorrelationTwoImageToOneImageMetricPython.delete_itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3

    def cast(obj: 'itkLightObject') -> "itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3 *":
        """cast(itkLightObject obj) -> itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3

        Create a new object of the class itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3.Clone = new_instancemethod(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3_Clone, None, itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3)
itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3.SetSubtractMean = new_instancemethod(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3_SetSubtractMean, None, itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3)
itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3.GetSubtractMean = new_instancemethod(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3_GetSubtractMean, None, itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3)
itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3.SubtractMeanOn = new_instancemethod(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3_SubtractMeanOn, None, itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3)
itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3.SubtractMeanOff = new_instancemethod(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3_SubtractMeanOff, None, itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3)
itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3_swigregister = _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3_swigregister
itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3_swigregister(itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3)

def itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3___New_orig__() -> "itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3_Pointer":
    """itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3___New_orig__() -> itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3_Pointer"""
    return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3___New_orig__()

def itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3_cast(obj: 'itkLightObject') -> "itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3 *":
    """itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3_cast(itkLightObject obj) -> itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3"""
    return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3_cast(obj)

class itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2(itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC2IUC2):
    """Proxy of C++ itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2_Pointer":
        """__New_orig__() -> itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2_Pointer"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2_Pointer":
        """Clone(itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2 self) -> itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2_Pointer"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2_Clone(self)


    def SetSubtractMean(self, _arg: 'bool const') -> "void":
        """SetSubtractMean(itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2 self, bool const _arg)"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2_SetSubtractMean(self, _arg)


    def GetSubtractMean(self) -> "bool const &":
        """GetSubtractMean(itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2 self) -> bool const &"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2_GetSubtractMean(self)


    def SubtractMeanOn(self) -> "void":
        """SubtractMeanOn(itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2 self)"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2_SubtractMeanOn(self)


    def SubtractMeanOff(self) -> "void":
        """SubtractMeanOff(itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2 self)"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2_SubtractMeanOff(self)

    __swig_destroy__ = _itkNormalizedCorrelationTwoImageToOneImageMetricPython.delete_itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2

    def cast(obj: 'itkLightObject') -> "itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2 *":
        """cast(itkLightObject obj) -> itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2

        Create a new object of the class itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2.Clone = new_instancemethod(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2_Clone, None, itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2)
itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2.SetSubtractMean = new_instancemethod(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2_SetSubtractMean, None, itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2)
itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2.GetSubtractMean = new_instancemethod(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2_GetSubtractMean, None, itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2)
itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2.SubtractMeanOn = new_instancemethod(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2_SubtractMeanOn, None, itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2)
itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2.SubtractMeanOff = new_instancemethod(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2_SubtractMeanOff, None, itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2)
itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2_swigregister = _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2_swigregister
itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2_swigregister(itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2)

def itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2___New_orig__() -> "itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2_Pointer":
    """itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2___New_orig__() -> itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2_Pointer"""
    return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2___New_orig__()

def itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2_cast(obj: 'itkLightObject') -> "itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2 *":
    """itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2_cast(itkLightObject obj) -> itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2"""
    return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2_cast(obj)

class itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3(itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC3IUC3):
    """Proxy of C++ itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3_Pointer":
        """__New_orig__() -> itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3_Pointer"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3_Pointer":
        """Clone(itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3 self) -> itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3_Pointer"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3_Clone(self)


    def SetSubtractMean(self, _arg: 'bool const') -> "void":
        """SetSubtractMean(itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3 self, bool const _arg)"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3_SetSubtractMean(self, _arg)


    def GetSubtractMean(self) -> "bool const &":
        """GetSubtractMean(itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3 self) -> bool const &"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3_GetSubtractMean(self)


    def SubtractMeanOn(self) -> "void":
        """SubtractMeanOn(itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3 self)"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3_SubtractMeanOn(self)


    def SubtractMeanOff(self) -> "void":
        """SubtractMeanOff(itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3 self)"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3_SubtractMeanOff(self)

    __swig_destroy__ = _itkNormalizedCorrelationTwoImageToOneImageMetricPython.delete_itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3

    def cast(obj: 'itkLightObject') -> "itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3 *":
        """cast(itkLightObject obj) -> itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3

        Create a new object of the class itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3.Clone = new_instancemethod(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3_Clone, None, itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3)
itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3.SetSubtractMean = new_instancemethod(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3_SetSubtractMean, None, itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3)
itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3.GetSubtractMean = new_instancemethod(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3_GetSubtractMean, None, itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3)
itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3.SubtractMeanOn = new_instancemethod(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3_SubtractMeanOn, None, itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3)
itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3.SubtractMeanOff = new_instancemethod(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3_SubtractMeanOff, None, itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3)
itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3_swigregister = _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3_swigregister
itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3_swigregister(itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3)

def itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3___New_orig__() -> "itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3_Pointer":
    """itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3___New_orig__() -> itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3_Pointer"""
    return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3___New_orig__()

def itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3_cast(obj: 'itkLightObject') -> "itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3 *":
    """itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3_cast(itkLightObject obj) -> itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3"""
    return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3_cast(obj)

class itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2(itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS2IUS2):
    """Proxy of C++ itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2_Pointer":
        """__New_orig__() -> itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2_Pointer"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2_Pointer":
        """Clone(itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2 self) -> itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2_Pointer"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2_Clone(self)


    def SetSubtractMean(self, _arg: 'bool const') -> "void":
        """SetSubtractMean(itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2 self, bool const _arg)"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2_SetSubtractMean(self, _arg)


    def GetSubtractMean(self) -> "bool const &":
        """GetSubtractMean(itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2 self) -> bool const &"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2_GetSubtractMean(self)


    def SubtractMeanOn(self) -> "void":
        """SubtractMeanOn(itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2 self)"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2_SubtractMeanOn(self)


    def SubtractMeanOff(self) -> "void":
        """SubtractMeanOff(itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2 self)"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2_SubtractMeanOff(self)

    __swig_destroy__ = _itkNormalizedCorrelationTwoImageToOneImageMetricPython.delete_itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2

    def cast(obj: 'itkLightObject') -> "itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2 *":
        """cast(itkLightObject obj) -> itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2

        Create a new object of the class itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2.Clone = new_instancemethod(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2_Clone, None, itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2)
itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2.SetSubtractMean = new_instancemethod(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2_SetSubtractMean, None, itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2)
itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2.GetSubtractMean = new_instancemethod(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2_GetSubtractMean, None, itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2)
itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2.SubtractMeanOn = new_instancemethod(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2_SubtractMeanOn, None, itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2)
itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2.SubtractMeanOff = new_instancemethod(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2_SubtractMeanOff, None, itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2)
itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2_swigregister = _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2_swigregister
itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2_swigregister(itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2)

def itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2___New_orig__() -> "itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2_Pointer":
    """itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2___New_orig__() -> itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2_Pointer"""
    return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2___New_orig__()

def itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2_cast(obj: 'itkLightObject') -> "itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2 *":
    """itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2_cast(itkLightObject obj) -> itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2"""
    return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2_cast(obj)

class itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3(itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS3IUS3):
    """Proxy of C++ itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3_Pointer":
        """__New_orig__() -> itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3_Pointer"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3_Pointer":
        """Clone(itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3 self) -> itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3_Pointer"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3_Clone(self)


    def SetSubtractMean(self, _arg: 'bool const') -> "void":
        """SetSubtractMean(itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3 self, bool const _arg)"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3_SetSubtractMean(self, _arg)


    def GetSubtractMean(self) -> "bool const &":
        """GetSubtractMean(itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3 self) -> bool const &"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3_GetSubtractMean(self)


    def SubtractMeanOn(self) -> "void":
        """SubtractMeanOn(itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3 self)"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3_SubtractMeanOn(self)


    def SubtractMeanOff(self) -> "void":
        """SubtractMeanOff(itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3 self)"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3_SubtractMeanOff(self)

    __swig_destroy__ = _itkNormalizedCorrelationTwoImageToOneImageMetricPython.delete_itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3

    def cast(obj: 'itkLightObject') -> "itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3 *":
        """cast(itkLightObject obj) -> itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3"""
        return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3

        Create a new object of the class itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3.Clone = new_instancemethod(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3_Clone, None, itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3)
itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3.SetSubtractMean = new_instancemethod(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3_SetSubtractMean, None, itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3)
itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3.GetSubtractMean = new_instancemethod(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3_GetSubtractMean, None, itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3)
itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3.SubtractMeanOn = new_instancemethod(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3_SubtractMeanOn, None, itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3)
itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3.SubtractMeanOff = new_instancemethod(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3_SubtractMeanOff, None, itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3)
itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3_swigregister = _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3_swigregister
itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3_swigregister(itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3)

def itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3___New_orig__() -> "itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3_Pointer":
    """itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3___New_orig__() -> itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3_Pointer"""
    return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3___New_orig__()

def itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3_cast(obj: 'itkLightObject') -> "itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3 *":
    """itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3_cast(itkLightObject obj) -> itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3"""
    return _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3_cast(obj)



