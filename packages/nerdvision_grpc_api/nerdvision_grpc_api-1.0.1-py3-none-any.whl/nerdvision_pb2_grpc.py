# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import nerdvision_pb2 as nerdvision__pb2


class NerdVisionBreakpointsStub(object):
  """This is the service that will stream the breakpoint configuration changes to the clients. 
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.streamBreakpoints = channel.unary_stream(
        '/com.nerdvision.grpc.NerdVisionBreakpoints/streamBreakpoints',
        request_serializer=nerdvision__pb2.BreakpointConnection.SerializeToString,
        response_deserializer=nerdvision__pb2.BreakpointResponse.FromString,
        )


class NerdVisionBreakpointsServicer(object):
  """This is the service that will stream the breakpoint configuration changes to the clients. 
  """

  def streamBreakpoints(self, request, context):
    """This will connect to the service and begin streaming the responses to the client. 
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_NerdVisionBreakpointsServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'streamBreakpoints': grpc.unary_stream_rpc_method_handler(
          servicer.streamBreakpoints,
          request_deserializer=nerdvision__pb2.BreakpointConnection.FromString,
          response_serializer=nerdvision__pb2.BreakpointResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'com.nerdvision.grpc.NerdVisionBreakpoints', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
