version: 1.0.{build}
clone_depth: 30
clone_folder: c:\projects\vipster
environment:
    matrix:
        - ARCH: "x86"
          PYARCH: ""
          QTDIR: C:\Qt\5.12\mingw73_32
          MWDIR: C:\Qt\Tools\mingw730_32\bin
          PATH: '%QTDIR%\lib;%QTDIR%\bin;%MWDIR%;C:\projects\vipster\libvipster\release;%PATH%'
        - ARCH: "x86_64"
          PYARCH: "-x64"
          QTDIR: C:\Qt\5.12\mingw73_64
          MWDIR: C:\Qt\Tools\mingw730_64\bin
          PATH: '%QTDIR%\lib;%QTDIR%\bin;%MWDIR%;C:\projects\vipster\libvipster\release;%PATH%'
build_script:
    - git submodule update --init --recursive
    - mkdir build
    - cd build
    - mv "C:\Program Files\Git\usr\bin\sh.exe" "C:\Program Files\Git\usr\bin\sh2.exe"
    - cmake -D TESTS=YES -D DESKTOP=YES -D CMAKE_BUILD_TYPE=Release -D CMAKE_PREFIX_PATH="$MWDIR" -G "MinGW Makefiles" ..
    - cmake --build .
test_script:
    - test_lib.exe
after_test:
    - mkdir Vipster
    - mv vipster.exe Vipster
    - mv libvipster.dll Vipster
    - windeployqt --release --compiler-runtime Vipster/vipster.exe
    - 7z a Vipster-Win-%ARCH%.7z Vipster
    - cd ..
    - SET OLDPATH=%PATH%
      # Python 2.7
    - "SET PATH=C:\\Python27%PYARCH%;C:\\Python27%PYARCH%\\Scripts;%OLDPATH%"
    - IF "%APPVEYOR_REPO_TAG%"=="true" (
          python -m pip install setuptools wheel cmake &&
          python setup.py bdist_wheel
      )
      # Python 3.6
    - "SET PATH=C:\\Python36%PYARCH%;C:\\Python36%PYARCH%\\Scripts;%OLDPATH%"
    - IF "%APPVEYOR_REPO_TAG%"=="true" (
          python -m pip install setuptools wheel cmake &&
          python setup.py bdist_wheel
      )
      # Python 3.7
    - "SET PATH=C:\\Python37%PYARCH%;C:\\Python37%PYARCH%\\Scripts;%OLDPATH%"
    - IF "%APPVEYOR_REPO_TAG%"=="true" (
          pip install setuptools wheel cmake &&
          python setup.py bdist_wheel
      )
      # Source archive
    - IF "%APPVEYOR_REPO_TAG%"=="true" (
          IF "%ARCH%"=="x86_64" (
              pip install setuptools_scm &&
              python setup.py sdist --formats=zip
          )
      )
      # upload
    - IF "%APPVEYOR_REPO_TAG%"=="true" (
          pip install twine &&
          twine upload --verbose --skip-existing dist/*
      )
artifacts:
    - name: Archive
      path: 'build\*.7z'
deploy:
    - provider: GitHub
      auth_token:
        secure: B7byrQs5wuFQdK1ws3GCmTGI/0YCLZ3TUN+h3UxP9nl/uOlZX1jS1kO+AMWhprA5
      draft: true
      artifacts: /.*\.(exe|7z)/
      on:
        branch: master
        appveyor_repo_tag: true
