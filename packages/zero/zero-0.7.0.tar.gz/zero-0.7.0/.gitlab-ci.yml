# https://git.ligo.org/lscsoft/example-ci-project/wikis/automatically-produce-documentation
# https://wiki.ligo.org/viewauth/DASWG/GitLigoOrg#Accessing_GitLab_Pages

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache"
  LISO_GIT_ARCHIVE_URL: "https://gitlab.aei.uni-hannover.de/api/v4/projects/143/repository/archive?private_token=${LISO_ACCESS_TOKEN}"

cache:
  paths:
    - .cache/

stages:
  - test
  - deploy

.template:test:unit: &template-test-unit
  script:
    - python --version
    - apt update -qy
    - apt install --assume-yes python-pip
    - pip install .
    - make test-unit

.template:test:integration: &template-test-integration
  script:
    - python --version
    - apt update -qy
    - apt install --assume-yes python-pip
    - pip install .
    - make test-integration

.template:test:validation: &template-test-validation
  script:
    - mkdir liso
    - cd liso
    - wget -O liso.tar.gz ${LISO_GIT_ARCHIVE_URL}
    - tar -xvf liso.tar.gz -C . --wildcards liso-linux*/ --strip-components=1
    - chmod +x fil_static
    - cd ..
    - export LISO_DIR=$(pwd)/liso
    - export LISO_PATH=$LISO_DIR/fil_static
    - python --version
    - apt update -qy
    - apt install --assume-yes python-pip
    - pip install .
    - make test-validation

.template:deploy:docs: &template-deploy-docs
  script:
    - mkdir liso
    - cd liso
    - wget -O liso.tar.gz ${LISO_GIT_ARCHIVE_URL}
    - tar -xvf liso.tar.gz -C . --wildcards liso-linux*/ --strip-components=1
    - chmod +x fil_static
    - cd ..
    - export LISO_DIR=$(pwd)/liso
    - export LISO_PATH=$LISO_DIR/fil_static
    - python --version
    - apt update -qy
    - apt install --assume-yes python-pip
    - pip install .[dev]
    - cd docs
    - make html
    - mv _build/html ../public
  artifacts:
    paths:
    - public

test unit:latest:
  image: python:latest
  stage: test
  <<: *template-test-unit

test unit:3.6:
  image: python:3.6
  stage: test
  <<: *template-test-unit

test unit:3.7:
  image: python:3.7
  stage: test
  <<: *template-test-unit

test integration:latest:
  image: python:latest
  stage: test
  <<: *template-test-integration

test integration:3.6:
  image: python:3.6
  stage: test
  <<: *template-test-integration

test integration:3.7:
  image: python:3.7
  stage: test
  <<: *template-test-integration

test validation:latest:
  image: python:latest
  stage: test
  <<: *template-test-validation

test validation:3.6:
  image: python:3.6
  stage: test
  <<: *template-test-validation

test validation:3.7:
  image: python:3.7
  stage: test
  <<: *template-test-validation

# Generate the documentation only on creation of new tags.
pages:
  image: python:3.7
  stage: deploy
  only:
    - tags
  <<: *template-deploy-docs
