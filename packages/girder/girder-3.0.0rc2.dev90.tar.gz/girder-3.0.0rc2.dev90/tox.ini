[tox]
envlist = py{27,35,36},docs,public_names
skip_missing_interpreters = true
toxworkdir = {toxinidir}/build/test/tox

[testenv]
deps = -rrequirements-dev.txt
# In the install command, we include the "girder" package as `.`.  This is because
# tox runs the install command *before* installing girder, but girder is a dependency
# of many of the packages in requirements-dev.txt (pytest-girder and all of the plugins).
# Without this, pip attempts to install girder from pypi during the dependency
# installation.
install_command = pip install --upgrade --upgrade-strategy eager {opts} . {packages}
commands = pytest {posargs}

[testenv:docs]
# Building docs has a direct dependency on Sphinx. Additionally, to ensure import-time logic in
# girder executes correctly, funcsigs and six should be installed and not be mocked during
# documentation import / building. Finally, documentation dependencies are listed in a separate file
# to allow readthedocs.org to read and install them.
deps = -rdocs/requirements-docs.txt
# readthedocs.org runs "python setup.py install" (which installs no dependencies). With the
# limitations of Tox (not being able to use a different install_command for deps installation and
# package installation) and the desire to install cleanly via pip (instead of directly with
# setuptools), skip_install and an explicit "pip install" run command seems to be the best
# configuration possible.
skip_install = true
# In combination with skip_install, usedevelop just prevents Tox from creating an sdist.
usedevelop = true
commands =
    pip install --no-deps --editable . --editable clients/python
    sphinx-build \
        -W \
        -b html \
        -d {envtmpdir}/doctrees \
        docs \
        build/docs/python

[testenv:ansible]
skip_install = true
skipsdist = true
changedir = devops/ansible-role-girder
passenv = DOCKER_*
deps =
  # This pin is necessary until Molecule is fixed
  ansible<2.8
  molecule
  docker
commands =
  molecule {posargs: test}

[testenv:release]
skip_install = true
skipsdist = true
basepython = python2.7
passenv =
  CIRCLE_BRANCH
  TWINE_USERNAME
  TWINE_PASSWORD
deps =
  setuptools-git
  setuptools-scm
  twine
commands =
  {toxinidir}/scripts/pypi_publish.sh

[testenv:public_names]
deps = six
commands = {toxinidir}/scripts/test_names.sh

[testenv:circleci-py27]
basepython = python2.7
commands = pytest \
           --tb=long \
           --junit-xml="build/test/results/pytest-2.7.xml" \
           --cov-append \
           --keep-db \
           {posargs}

[testenv:circleci-py35]
basepython = python3.5
commands = pytest \
           --tb=long \
           --junit-xml="build/test/results/pytest-3.5.xml" \
           --cov-append \
           --keep-db \
            {posargs}
