Metadata-Version: 1.2
Name: uproot
Version: 3.4.21
Summary: ROOT I/O in pure Python and Numpy.
Home-page: https://github.com/scikit-hep/uproot
Author: Jim Pivarski (IRIS-HEP)
Author-email: pivarski@princeton.edu
Maintainer: Jim Pivarski (IRIS-HEP)
Maintainer-email: pivarski@princeton.edu
License: BSD 3-clause
Download-URL: https://github.com/scikit-hep/uproot/releases
Description: .. image:: https://raw.githubusercontent.com/scikit-hep/uproot/master/docs/source/logo-300px.png
           :alt: uproot
           :target: https://github.com/scikit-hep/uproot
        
        .. inclusion-marker-1-5-do-not-remove
        
        uproot (originally Î¼proot, for "micro-Python ROOT") is a reader and a writer of the `ROOT file format <https://root.cern/>`__ using only Python and Numpy. Unlike the standard C++ ROOT implementation, uproot is only an I/O library, primarily intended to stream data into machine learning libraries in Python. Unlike PyROOT and root_numpy, uproot does not depend on C++ ROOT. Instead, it uses Numpy to cast blocks of data from the ROOT file as Numpy arrays.
        
        Python does not necessarily mean slow. As long as the data blocks ("baskets") are large, this "array at a time" approach can even be faster than "event at a time" C++. Below, the rate of reading data into arrays with uproot is shown to be faster than C++ ROOT (left) and root_numpy (right), as long as the baskets are tens of kilobytes or larger (for a variable number of muons per event in an ensemble of different physics samples; higher is better).
        
        
        .. image:: https://raw.githubusercontent.com/scikit-hep/uproot/master/docs/root-none-muon.png
           :width: 350 px
        .. image:: https://raw.githubusercontent.com/scikit-hep/uproot/master/docs/rootnumpy-none-muon.png
           :width: 350 px
        
        
        uproot is not maintained by the ROOT project team, so post bug reports here as `GitHub issues <https://github.com/scikit-hep/uproot/issues>`__, not on a ROOT forum. Thanks!
        
        .. inclusion-marker-2-do-not-remove
        
        Installation
        ============
        
        Install uproot like any other Python package:
        
        .. code-block:: bash
        
            pip install uproot                        # maybe with sudo or --user, or in virtualenv
        
        or install with `conda <https://conda.io/en/latest/miniconda.html>`__:
        
        .. code-block:: bash
        
            conda config --add channels conda-forge   # if you haven't added conda-forge already
            conda install uproot
        
        The pip installer automatically installs strict dependencies; the conda installer installs optional dependencies, too.
        
        Strict dependencies:
        --------------------
        
        - `numpy <https://scipy.org/install.html>`__ (1.13.1+)
        - `awkward-array <https://github.com/scikit-hep/awkward-array>`__ (0.8.0+)
        - `uproot-methods <https://github.com/scikit-hep/uproot-methods>`__ (0.4.0+)
        - `cachetools <https://pypi.org/project/cachetools>`__
        
        Optional dependencies:
        ----------------------
        
        - `lz4 <https://pypi.org/project/lz4>`__ to read lz4-compressed ROOT files
        - `lzma <https://pypi.org/project/backports.lzma>`__ to read lzma-compressed ROOT files in Python 2
        - `xrootd <https://anaconda.org/conda-forge/xrootd>`__ to access remote files through XRootD
        - `requests <https://pypi.org/project/requests>`__ to access remote files through HTTP
        
        **Reminder: you do not need C++ ROOT to run uproot.**
        
        Tutorial
        ========
        
        See the `project homepage <https://github.com/scikit-hep/uproot>`__ for a `tutorial <https://github.com/scikit-hep/uproot#tutorial>`__.
        
        Run `that tutorial <https://mybinder.org/v2/gh/scikit-hep/uproot/master?urlpath=lab/tree/binder%2Ftutorial.ipynb>`__ on Binder.
        
        Reference documentation
        =======================
        
        * `Opening files <http://uproot.readthedocs.io/en/latest/opening-files.html>`__
        
          - `uproot.open <http://uproot.readthedocs.io/en/latest/opening-files.html#uproot-open>`__
          - `uproot.xrootd <http://uproot.readthedocs.io/en/latest/opening-files.html#uproot-xrootd>`__
          - `uproot.iterate <http://uproot.readthedocs.io/en/latest/opening-files.html#uproot-iterate>`__
        
        * `ROOT I/O <http://uproot.readthedocs.io/en/latest/root-io.html>`__
        
          - `uproot.rootio.ROOTDirectory <http://uproot.readthedocs.io/en/latest/root-io.html#uproot-rootio-rootdirectory>`__
          - `uproot.rootio.ROOTObject <http://uproot.readthedocs.io/en/latest/root-io.html#uproot-rootio-rootobject>`__
          - `uproot.rootio.ROOTStreamedObject <http://uproot.readthedocs.io/en/latest/root-io.html#uproot-rootio-rootstreamedobject>`__
        
        * `TTree Handling <http://uproot.readthedocs.io/en/latest/ttree-handling.html>`__
        
          - `uproot.tree.TTreeMethods <http://uproot.readthedocs.io/en/latest/ttree-handling.html#uproot-tree-ttreemethods>`__
          - `uproot.tree.TBranchMethods <http://uproot.readthedocs.io/en/latest/ttree-handling.html#uproot-tree-tbranchmethods>`__
        
        * `Interpretation <http://uproot.readthedocs.io/en/latest/interpretation.html>`__
        * `Caches <http://uproot.readthedocs.io/en/latest/caches.html>`__
        * `Parallel I/O <http://uproot.readthedocs.io/en/latest/parallel-io.html>`__
        
Platform: Any
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Information Technology
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: MacOS
Classifier: Operating System :: POSIX
Classifier: Operating System :: Unix
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: Information Analysis
Classifier: Topic :: Scientific/Engineering :: Mathematics
Classifier: Topic :: Scientific/Engineering :: Physics
Classifier: Topic :: Software Development
Classifier: Topic :: Utilities
