[metadata]
name = lambda_handlers
version = attr: lambda_handlers.version.__version__
url = http://lambda-handlers.readthedocs.io
description = A collection of useful decorators for making AWS Lambda handlers
long_description = file: README.md, CHANGELOG.md
author = Steffen Leistner, Alexandre Savio
author_email = info@enterat.de
license = Apache
keywords = serverless lambda decorator aws
classifiers = 
	Development Status :: 5 - Production/Stable
	Environment :: Other Environment
	Intended Audience :: Developers
	License :: OSI Approved :: Apache Software License
	Programming Language :: Python :: 3
	Programming Language :: Python :: 3.7

[options]
python_requires = ==3.7
include_package_data = True
test_suite = tests
setup_requires = 
	wheel
	setuptools
	pytest-runner
install_requires = 
tests_require = 
	pytest
	marshmallow
	jsonschema

[options.extras_require]
jsonschema = jsonschema
marshmallow = marshmallow

[pycodestyle]
max-line-length = 120

[pydocstyle]
ignore = D100,D101
max-line-length = 120

[pylint]
ignore-docstrings = yes
max-line-length = 120

[flake8]
max-line-length = 120
max-complexity = 10
select = C,E,F,W,B,B950
ignore = 
	E501,
	E126,

[isort]
multi_line_output = 3
include_trailing_comma = True
use_parentheses = True
force_single_line = False
indent = 4
line_length = 79
wrap_length = 60
not_skip = __init__.py
length_sort = True
known_first_party = lambda_handlers
known_third_party = pytest,marshmallow,jsonschema
sections = FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER

[mypy]
python_version = 3.7
ignore_missing_imports = True
warn_unused_configs = True

[tox:tox]
envlist = 
	lint,
	isort,
	mypy,
	tests
skipsdist = True

[tool:pytest]
filterwarnings = 
	ignore::DeprecationWarning

[coverage:run]
branch = True

[coverage:report]
include = 
	lambda_handlers/*
omit = 
	*/tests/*

[testenv]
basepython = python3
whitelist_externals = make
deps = 
	lint: flake8
	lint: flake8-bugbear
	isort: isort
	mypy: mypy
passenv = 
	CI = 1
setenv = 
	PYTHONPATH = {toxinidir}:{toxinidir}
	TESTING = True
commands = 
	lint: flake8 lambda_handlers
	isort: isort -c -rc lambda_handlers
	mypy: mypy lambda_handlers

[testenv:tests]
deps = 
	pipenv
	coverage
commands = 
	make install-dev
	coverage run -m pytest
	coverage report

[egg_info]
tag_build = 
tag_date = 0

