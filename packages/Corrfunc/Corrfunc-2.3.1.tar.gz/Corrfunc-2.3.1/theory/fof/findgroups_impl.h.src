// # -*- mode: c -*-
/* File: findgroups_impl.h.src */
/*
  This file is a part of the Corrfunc package
  Copyright (C) 2015-- Manodeep Sinha (manodeep@gmail.com)
  License: MIT LICENSE. See LICENSE file under the top-level
  directory at https://github.com/manodeep/Corrfunc/
*/

#pragma once


#ifdef __cplusplus
extern "C" {
#endif

#include "defs.h"
#include <inttypes.h>

#include "findgroups.h"  

    extern void interrupt_handler_findgroups_DOUBLE(int signo);


    typedef int (*findgroups_func_ptr_DOUBLE)(DOUBLE *x0, DOUBLE *y0, DOUBLE *z0, const int64_t N0,
                                              DOUBLE *x1, DOUBLE *y1, DOUBLE *z1, const int64_t N1,
                                              const DOUBLE linkx, const DOUBLE linky, const DOUBLE linkz, 
                                              const DOUBLE off_xwrap, const DOUBLE off_ywrap, const DOUBLE off_zwrap,
                                              uint64_t *src_npairs);
    
    extern findgroups_func_ptr_DOUBLE findgroups_driver_DOUBLE(const struct config_options *options) __attribute__((warn_unused_result));
    
    extern int findgroups_DOUBLE(const int64_t ND1, DOUBLE * restrict X1, DOUBLE * restrict Y1, DOUBLE * restrict Z1,
                                 const double boxsize,
                                 const double linkx, const double linky, const double linkz,
                                 const int numthreads,
                                 results_findgroups *result,
                                 struct config_options *options,
                                 struct extra_options *extra) __attribute__((warn_unused_result));
  
#ifdef __cplusplus
}
#endif
