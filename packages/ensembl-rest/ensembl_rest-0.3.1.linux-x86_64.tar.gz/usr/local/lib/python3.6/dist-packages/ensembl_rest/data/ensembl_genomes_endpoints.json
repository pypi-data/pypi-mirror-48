{
  "base_url": "http://rest.ensemblgenomes.org",
  "api_version": "7.0",
  "endpoints": {
    "family": {
      "resource": "GET family/id/:id",
      "documentation_link": "/documentation/info/family",
      "description": "Retrieves gene family information by ID"
    },
    "family_member_id": {
      "resource": "GET family/member/id/:id",
      "documentation_link": "/documentation/info/family_member_id",
      "description": "Retrieves gene families to which a gene belongs"
    },
    "family_member_symbol": {
      "resource": "GET family/member/symbol/:species/:symbol",
      "documentation_link": "/documentation/info/family_member_symbol",
      "description": "Retrieves gene families to which a gene belongs"
    },
    "genetree": {
      "resource": "GET genetree/id/:id",
      "documentation_link": "/documentation/info/genetree",
      "description": "Retrieves a gene tree dump for a gene tree stable identifier"
    },
    "genetree_member_id": {
      "resource": "GET genetree/member/id/:id",
      "documentation_link": "/documentation/info/genetree_member_id",
      "description": "Retrieves a gene tree that contains the stable identifier"
    },
    "genetree_member_symbol": {
      "resource": "GET genetree/member/symbol/:species/:symbol",
      "documentation_link": "/documentation/info/genetree_member_symbol",
      "description": "Retrieves a gene tree containing the gene identified by a symbol"
    },
    "genomic_alignment_region": {
      "resource": "GET alignment/region/:species/:region",
      "documentation_link": "/documentation/info/genomic_alignment_region",
      "description": "Retrieves genomic alignments as separate blocks based on a region and species"
    },
    "homology_ensemblgene": {
      "resource": "GET homology/id/:id",
      "documentation_link": "/documentation/info/homology_ensemblgene",
      "description": "Retrieves homology information (orthologs) by Ensembl gene id"
    },
    "homology_symbol": {
      "resource": "GET homology/symbol/:species/:symbol",
      "documentation_link": "/documentation/info/homology_symbol",
      "description": "Retrieves homology information (orthologs) by symbol"
    },
    "xref_external": {
      "resource": "GET xrefs/symbol/:species/:symbol",
      "documentation_link": "/documentation/info/xref_external",
      "description": "Looks up an external symbol and returns all Ensembl objects linked to it. This can be a display name for a gene/transcript/translation, a synonym or an externally linked reference. If a gene's transcript is linked to the supplied symbol the service will return both gene and transcript (it supports transient links)."
    },
    "xref_id": {
      "resource": "GET xrefs/id/:id",
      "documentation_link": "/documentation/info/xref_id",
      "description": "Perform lookups of Ensembl Identifiers and retrieve their external references in other databases"
    },
    "xref_name": {
      "resource": "GET xrefs/name/:species/:name",
      "documentation_link": "/documentation/info/xref_name",
      "description": "Performs a lookup based upon the primary accession or display label of an external reference and returning the information we hold about the entry"
    },
    "analysis": {
      "resource": "GET info/analysis/:species",
      "documentation_link": "/documentation/info/analysis",
      "description": "List the names of analyses involved in generating Ensembl data."
    },
    "assembly_info": {
      "resource": "GET info/assembly/:species",
      "documentation_link": "/documentation/info/assembly_info",
      "description": "List the currently available assemblies for a species, along with toplevel sequences, chromosomes and cytogenetic bands."
    },
    "assembly_stats": {
      "resource": "GET info/assembly/:species/:region_name",
      "documentation_link": "/documentation/info/assembly_stats",
      "description": "Returns information about the specified toplevel sequence region for the given species."
    },
    "biotypes": {
      "resource": "GET info/biotypes/:species",
      "documentation_link": "/documentation/info/biotypes",
      "description": "List the functional classifications of gene models that Ensembl associates with a particular species. Useful for restricting the type of genes/transcripts retrieved by other endpoints."
    },
    "biotypes_groups": {
      "resource": "GET info/biotypes/groups/:group/:object_type",
      "documentation_link": "/documentation/info/biotypes_groups",
      "description": "Without argument the list of available biotype groups is returned. With :group argument provided, list the properties of biotypes within that group. Object type (gene or transcript) can be provided for filtering."
    },
    "biotypes_name": {
      "resource": "GET info/biotypes/name/:name/:object_type",
      "documentation_link": "/documentation/info/biotypes_name",
      "description": "List the properties of biotypes with a given name. Object type (gene or transcript) can be provided for filtering."
    },
    "compara_methods": {
      "resource": "GET info/compara/methods",
      "documentation_link": "/documentation/info/compara_methods",
      "description": "List all compara analyses available (an analysis defines the type of comparative data)."
    },
    "compara_species_sets": {
      "resource": "GET info/compara/species_sets/:method",
      "documentation_link": "/documentation/info/compara_species_sets",
      "description": "List all collections of species analysed with the specified compara method."
    },
    "comparas": {
      "resource": "GET info/comparas",
      "documentation_link": "/documentation/info/comparas",
      "description": "Lists all available comparative genomics databases and their data release."
    },
    "data": {
      "resource": "GET info/data",
      "documentation_link": "/documentation/info/data",
      "description": "Shows the data releases available on this REST server. May return more than one release (unfrequent non-standard Ensembl configuration)."
    },
    "eg_version": {
      "resource": "GET info/eg_version",
      "documentation_link": "/documentation/info/eg_version",
      "description": "Returns the Ensembl Genomes version of the databases backing this service"
    },
    "external_dbs": {
      "resource": "GET info/external_dbs/:species",
      "documentation_link": "/documentation/info/external_dbs",
      "description": "Lists all available external sources for a species."
    },
    "info_divisions": {
      "resource": "GET info/divisions",
      "documentation_link": "/documentation/info/info_divisions",
      "description": "Get list of all Ensembl divisions for which information is available"
    },
    "info_genome": {
      "resource": "GET info/genomes/:genome_name",
      "documentation_link": "/documentation/info/info_genome",
      "description": "Find information about a given genome"
    },
    "info_genomes": {
      "resource": "GET info/genomes",
      "documentation_link": "/documentation/info/info_genomes",
      "description": "Find information about all genomes. Response may be very large."
    },
    "info_genomes_accession": {
      "resource": "GET info/genomes/accession/:accession",
      "documentation_link": "/documentation/info/info_genomes_accession",
      "description": "Find information about genomes containing a specified INSDC accession"
    },
    "info_genomes_assembly": {
      "resource": "GET info/genomes/assembly/:assembly_id",
      "documentation_link": "/documentation/info/info_genomes_assembly",
      "description": "Find information about a genome with a specified assembly"
    },
    "info_genomes_division": {
      "resource": "GET info/genomes/division/:division_name",
      "documentation_link": "/documentation/info/info_genomes_division",
      "description": "Find information about all genomes in a given division. May be large for Ensembl Bacteria."
    },
    "info_genomes_taxonomy": {
      "resource": "GET info/genomes/taxonomy/:taxon_name",
      "documentation_link": "/documentation/info/info_genomes_taxonomy",
      "description": "Find information about all genomes beneath a given node of the taxonomy"
    },
    "ping": {
      "resource": "GET info/ping",
      "documentation_link": "/documentation/info/ping",
      "description": "Checks if the service is alive."
    },
    "rest": {
      "resource": "GET info/rest",
      "documentation_link": "/documentation/info/rest",
      "description": "Shows the current version of the Ensembl REST API."
    },
    "software": {
      "resource": "GET info/software",
      "documentation_link": "/documentation/info/software",
      "description": "Shows the current version of the Ensembl API used by the REST server."
    },
    "species": {
      "resource": "GET info/species",
      "documentation_link": "/documentation/info/species",
      "description": "Lists all available species, their aliases, available adaptor groups and data release."
    },
    "variation": {
      "resource": "GET info/variation/:species",
      "documentation_link": "/documentation/info/variation",
      "description": "List the variation sources used in Ensembl for a species."
    },
    "variation_consequence_types": {
      "resource": "GET info/variation/consequence_types",
      "documentation_link": "/documentation/info/variation_consequence_types",
      "description": "Lists all variant consequence types."
    },
    "variation_populations": {
      "resource": "GET info/variation/populations/:species",
      "documentation_link": "/documentation/info/variation_populations",
      "description": "List all populations for a species"
    },
    "lookup": {
      "resource": "GET lookup/id/:id",
      "documentation_link": "/documentation/info/lookup",
      "description": "Find the species and database for a single identifier e.g. gene, transcript, protein"
    },
    "lookup_genome": {
      "resource": "GET lookup/genome/:name",
      "documentation_link": "/documentation/info/lookup_genome",
      "description": "Query for a named genome and retrieve the gene models"
    },
    "lookup_post": {
      "resource": "POST lookup/id",
      "documentation_link": "/documentation/info/lookup_post",
      "description": "Find the species and database for several identifiers. IDs that are not found are returned with no data."
    },
    "symbol_lookup": {
      "resource": "GET lookup/symbol/:species/:symbol",
      "documentation_link": "/documentation/info/symbol_lookup",
      "description": "Find the species and database for a symbol in a linked external database"
    },
    "symbol_post": {
      "resource": "POST lookup/symbol/:species/:symbol",
      "documentation_link": "/documentation/info/symbol_post",
      "description": "Find the species and database for a set of symbols in a linked external database. Unknown symbols are omitted from the response."
    },
    "assembly_cdna": {
      "resource": "GET map/cdna/:id/:region",
      "documentation_link": "/documentation/info/assembly_cdna",
      "description": "Convert from cDNA coordinates to genomic coordinates. Output reflects forward orientation coordinates as returned from the Ensembl API."
    },
    "assembly_cds": {
      "resource": "GET map/cds/:id/:region",
      "documentation_link": "/documentation/info/assembly_cds",
      "description": "Convert from CDS coordinates to genomic coordinates. Output reflects forward orientation coordinates as returned from the Ensembl API."
    },
    "assembly_map": {
      "resource": "GET map/:species/:asm_one/:region/:asm_two",
      "documentation_link": "/documentation/info/assembly_map",
      "description": "Convert the co-ordinates of one assembly to another"
    },
    "assembly_translation": {
      "resource": "GET map/translation/:id/:region",
      "documentation_link": "/documentation/info/assembly_translation",
      "description": "Convert from protein (translation) coordinates to genomic coordinates. Output reflects forward orientation coordinates as returned from the Ensembl API."
    },
    "ontology_ancestors": {
      "resource": "GET ontology/ancestors/:id",
      "documentation_link": "/documentation/info/ontology_ancestors",
      "description": "Reconstruct the entire ancestry of a term from is_a and part_of relationships"
    },
    "ontology_ancestors_chart": {
      "resource": "GET ontology/ancestors/chart/:id",
      "documentation_link": "/documentation/info/ontology_ancestors_chart",
      "description": "Reconstruct the entire ancestry of a term from is_a and part_of relationships."
    },
    "ontology_descendants": {
      "resource": "GET ontology/descendants/:id",
      "documentation_link": "/documentation/info/ontology_descendants",
      "description": "Find all the terms descended from a given term. By default searches are conducted within the namespace of the given identifier"
    },
    "ontology_id": {
      "resource": "GET ontology/id/:id",
      "documentation_link": "/documentation/info/ontology_id",
      "description": "Search for an ontological term by its namespaced identifier"
    },
    "ontology_name": {
      "resource": "GET ontology/name/:name",
      "documentation_link": "/documentation/info/ontology_name",
      "description": "Search for a list of ontological terms by their name"
    },
    "taxonomy_classification": {
      "resource": "GET taxonomy/classification/:id",
      "documentation_link": "/documentation/info/taxonomy_classification",
      "description": "Return the taxonomic classification of a taxon node"
    },
    "taxonomy_id": {
      "resource": "GET taxonomy/id/:id",
      "documentation_link": "/documentation/info/taxonomy_id",
      "description": "Search for a taxonomic term by its identifier or name"
    },
    "taxonomy_name": {
      "resource": "GET taxonomy/name/:name",
      "documentation_link": "/documentation/info/taxonomy_name",
      "description": "Search for a taxonomic id by a non-scientific name"
    },
    "overlap_id": {
      "resource": "GET overlap/id/:id",
      "documentation_link": "/documentation/info/overlap_id",
      "description": "Retrieves features (e.g. genes, transcripts, variants and more) that overlap a region defined by the given identifier."
    },
    "overlap_region": {
      "resource": "GET overlap/region/:species/:region",
      "documentation_link": "/documentation/info/overlap_region",
      "description": "Retrieves features (e.g. genes, transcripts, variants and more) that overlap a given region."
    },
    "overlap_translation": {
      "resource": "GET overlap/translation/:id",
      "documentation_link": "/documentation/info/overlap_translation",
      "description": "Retrieve features related to a specific Translation as described by its stable ID (e.g. domains, variants)."
    },
    "phenotype_gene": {
      "resource": "GET /phenotype/gene/:species/:gene",
      "documentation_link": "/documentation/info/phenotype_gene",
      "description": "Return phenotype annotations for a given gene."
    },
    "phenotype_region": {
      "resource": "GET /phenotype/region/:species/:region",
      "documentation_link": "/documentation/info/phenotype_region",
      "description": "Return phenotype annotations that overlap a given genomic region."
    },
    "array_info": {
      "resource": "GET regulatory/species/:species/microarray/:microarray/vendor/:vendor",
      "documentation_link": "/documentation/info/array_info",
      "description": "Returns information about a specific microarray"
    },
    "list_all_microarrays": {
      "resource": "GET regulatory/species/:species/microarray",
      "documentation_link": "/documentation/info/list_all_microarrays",
      "description": "Returns information about all microarrays available for the given species"
    },
    "probe_info": {
      "resource": "GET regulatory/species/:species/microarray/:microarray/probe/:probe",
      "documentation_link": "/documentation/info/probe_info",
      "description": "Returns information about a specific probe of a microarray"
    },
    "sequence_id": {
      "resource": "GET sequence/id/:id",
      "documentation_link": "/documentation/info/sequence_id",
      "description": "Request multiple types of sequence by stable identifier. Supports feature masking and expand options."
    },
    "sequence_id_post": {
      "resource": "POST sequence/id",
      "documentation_link": "/documentation/info/sequence_id_post",
      "description": "Request multiple types of sequence by a stable identifier list."
    },
    "sequence_region": {
      "resource": "GET sequence/region/:species/:region",
      "documentation_link": "/documentation/info/sequence_region",
      "description": "Returns the genomic sequence of the specified region of the given species. Supports feature masking and expand options."
    },
    "sequence_region_post": {
      "resource": "POST sequence/region/:species",
      "documentation_link": "/documentation/info/sequence_region_post",
      "description": "Request multiple types of sequence by a list of regions."
    },
    "vep_id_get": {
      "resource": "GET vep/:species/id/:id",
      "documentation_link": "/documentation/info/vep_id_get",
      "description": "Fetch variant consequences based on a variant identifier"
    },
    "vep_id_post": {
      "resource": "POST vep/:species/id",
      "documentation_link": "/documentation/info/vep_id_post",
      "description": "Fetch variant consequences for multiple ids"
    },
    "vep_region_get": {
      "resource": "GET vep/:species/region/:region/:allele/",
      "documentation_link": "/documentation/info/vep_region_get",
      "description": "Fetch variant consequences"
    },
    "vep_region_post": {
      "resource": "POST vep/:species/region",
      "documentation_link": "/documentation/info/vep_region_post",
      "description": "Fetch variant consequences for multiple regions"
    },
    "variant_recoder": {
      "resource": "GET variant_recoder/:species/:id",
      "documentation_link": "/documentation/info/variant_recoder",
      "description": "Translate a variant identifier or HGVS notation to all possible variant IDs and HGVS"
    },
    "variant_recoder_post": {
      "resource": "POST variant_recoder/:species",
      "documentation_link": "/documentation/info/variant_recoder_post",
      "description": "Translate a list of variant identifiers or HGVS notations to all possible variant IDs and HGVS"
    },
    "variation_id": {
      "resource": "GET variation/:species/:id",
      "documentation_link": "/documentation/info/variation_id",
      "description": "Uses a variant identifier (e.g. rsID) to return the variation features including optional genotype, phenotype and population data"
    },
    "variation_post": {
      "resource": "POST variation/:species/",
      "documentation_link": "/documentation/info/variation_post",
      "description": "Uses a list of variant identifiers (e.g. rsID) to return the variation features including optional genotype, phenotype and population data"
    }
  }
}