{
  "expectation_type": "expect_column_values_to_be_of_type",
  "datasets": [
    {
      "data": {
        "x" : [1,2,4],
        "y" : [1.0,2.2,5.3],
        "z" : ["hello", "jello", "mello"],
        "n" : [null, null, null],
        "b" : [false, true, false],
        "s" : [2.1, 3.1, 4.1],
        "s1" : [1, 2, 3]
      },
      "schemas": {
        "pandas" : {
          "x": "int",
          "y": "float",
          "z": "str",
          "n": "str",
          "b": "bool",
          "s": "float64",
          "s1": "int64"
        },
        "postgresql": {
          "x": "INTEGER",
          "y": "DOUBLE_PRECISION",
          "z": "TEXT",
          "n": "TEXT",
          "b": "BOOLEAN",
          "s": "DOUBLE_PRECISION",
          "s1": "BIGINT"
        },
        "spark": {
          "x": "IntegerType",
          "y": "FloatType",
          "z": "StringType",
          "n": "StringType",
          "b": "BooleanType",
          "s": "FloatType",
          "s1": "LongType"
        },
        "sqlite": {
          "x": "INTEGER",
          "y": "FLOAT",
          "z": "VARCHAR",
          "n": "VARCHAR",
          "b": "BOOLEAN",
          "s": "FLOAT",
          "s1": "INTEGER"
        },
        "mysql": {
          "x": "INTEGER",
          "y": "FLOAT",
          "z": "TEXT",
          "n": "TEXT",
          "b": "BOOLEAN",
          "s": "FLOAT",
          "s1": "BIGINT"
        }
      },
      "tests": [
        {
          "title": "Basic Python int Positive Test",
          "exact_match_out": false,
          "in": {
            "column": "x",
            "type_": "int"
          },
          "out": {
            "success": true,
            "unexpected_list": [],
            "unexpected_index_list": []
          },
          "only_for": ["pandas"]
        },
        {
          "_note": "type name here works for tested sqlalchemy types; for sqlalchemy note we do not expect unexpected_list or unexpected_index_list since there are no column_map semantics for type",
          "title": "Basic non-python integer Positive Test",
          "exact_match_out": false,
          "in": {
            "column": "x",
            "type_": "INTEGER"
          },
          "out": {
            "success": true
          },
          "only_for": ["sqlalchemy"]
        },
        {
          "title": "Negative, Python ints are not string",
          "exact_match_out": false,
          "in":
          {
            "column":"x",
            "type_":"string"
          },
          "out":
          {
            "success":false,
            "unexpected_list":[1,2,4],
            "unexpected_index_list":[0,1,2]
          },
          "only_for": ["pandas"]
        },
        {
          "_note": "type name here works for tested sqlalchemy types; for sqlalchemy note we do not expect unexpected_list or unexpected_index_list since there are no column_map semantics for type",
          "title": "Negative, sql ints are not text",
          "exact_match_out": false,
          "in":
          {
            "column":"x",
            "type_":"TEXT"
          },
          "out":
          {
            "success":false
          },
          "only_for": ["postgresql", "mysql"]
        },
        {
          "_note": "type name here works for tested sqlalchemy types; for sqlalchemy note we do not expect unexpected_list or unexpected_index_list since there are no column_map semantics for type",
          "title": "Negative, sqlite integer is not VARCHAR",
          "exact_match_out": false,
          "in":
          {
            "column":"x",
            "type_":"VARCHAR"
          },
          "out":
          {
            "success":false
          },
          "only_for": ["sqlite"]
        },
        {
          "title": "Positive, floats",
          "exact_match_out": false,
          "in":
          {
            "column":"y",
            "type_":"float"
          },
          "out":
          {
            "success":true,
            "unexpected_list":[],
            "unexpected_index_list":[]
          },
          "only_for": ["pandas"]
        },
        {
          "_note": "type name here works for tested sqlalchemy types; for sqlalchemy note we do not expect unexpected_list or unexpected_index_list since there are no column_map semantics for type",
          "title": "Positive, floats",
          "exact_match_out": false,
          "in":
          {
            "column":"y",
            "type_":"DOUBLE_PRECISION"
          },
          "out":
          {
            "success":true
          },
          "only_for": ["postgres"]
        },
        {
          "title": "Positive, strings",
          "exact_match_out": false,
          "in":{"column":"z","type_":"string"},
          "out":{"success":true, "unexpected_list":[], "unexpected_index_list":[]},
          "only_for": ["pandas"]
        },
        {
          "_note": "type name here works for tested sqlalchemy types; for sqlalchemy note we do not expect unexpected_list or unexpected_index_list since there are no column_map semantics for type",
          "title": "Positive, TEXT",
          "exact_match_out": false,
          "in":{"column":"z","type_":"TEXT"},
          "out":{"success":true},
          "only_for": ["postgresql", "mysql"]
        },
        {
          "_note": "type name here works for tested sqlalchemy types; for sqlalchemy note we do not expect unexpected_list or unexpected_index_list since there are no column_map semantics for type",
          "title": "Positive, VARCHAR",
          "exact_match_out": false,
          "in":{"column":"z","type_":"VARCHAR"},
          "out":{"success":true},
          "only_for": ["sqlite"]
        },
        {
          "title": "Negative, python floats are not python bools",
          "exact_match_out": false,
          "in":{"column":"b","type_":"boolean"},
          "out":{
            "success":true, 
            "unexpected_list":[], 
            "unexpected_index_list":[]
          },
          "only_for": ["pandas"]
        },
        {
          "_note": "type name here works for tested sqlalchemy types; for sqlalchemy note we do not expect unexpected_list or unexpected_index_list since there are no column_map semantics for type",
          "title": "Negative, sqlalchemy floats are not BOOLEAN",
          "exact_match_out": false,
          "in":{"column":"b","type_":"BOOLEAN"},
          "out":{
            "success":true
          },
          "only_for": ["sqlalchemy"]
        }
    ]  
  }]
}