{"version":3,"sources":["webpack:///./src/mixins/events-mixin.js","webpack:///./src/mixins/localize-mixin.js","webpack:///./src/components/ha-card.ts","webpack:///./src/common/datetime/format_date_time.ts","webpack:///./src/panels/mailbox/ha-panel-mailbox.js"],"names":["EventsMixin","dedupingMixin","superClass","_superClass","_class","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","apply","arguments","_inherits","key","value","type","detail","options","fireEvent","node","get","hass","Object","localize","Function","computed","HaCard","property","css","_templateObject","html","_templateObject2","header","_templateObject3","_templateObject4","LitElement","customElements","define","fecha__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","toLocaleStringSupportsOptions","Date","toLocaleString","e","name","dateObj","locales","year","month","day","hour","minute","fecha","format","registeredDialog","HaPanelMailbox","LocalizeMixin","PolymerElement","platforms","Array","_messages","_currentPlatform","Number","_get","prototype","call","fire","dialogShowEvent","dialogTag","dialogImport","Promise","all","then","bind","hassChanged","connection","subscribeEvents","unsub","_unsubEvents","computePlatforms","getMessages","items","event","message","model","item","_this","platform","callApi","concat","values","platformItems","arrayLength","length","i","datetime","formatDateTime","info","origtime","language","push","timestamp","caller","callerid","text","sha","duration","sort","a","b","ev","newPlatform","selected","entity","states","toLowerCase","attributes","friendly_name"],"mappings":"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","file":"chunk.a878c1adb03ffa0703a2.js","sourcesContent":["import { dedupingMixin } from \"@polymer/polymer/lib/utils/mixin\";\n\nimport { fireEvent } from \"../common/dom/fire_event\";\n\n// Polymer legacy event helpers used courtesy of the Polymer project.\n//\n// Copyright (c) 2017 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n//    * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n//    * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n//    * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n/* @polymerMixin */\nexport const EventsMixin = dedupingMixin(\n  (superClass) =>\n    class extends superClass {\n      /**\n   * Dispatches a custom event with an optional detail value.\n   *\n   * @param {string} type Name of event type.\n   * @param {*=} detail Detail value containing event-specific\n   *   payload.\n   * @param {{ bubbles: (boolean|undefined),\n               cancelable: (boolean|undefined),\n                composed: (boolean|undefined) }=}\n    *  options Object specifying options.  These may include:\n    *  `bubbles` (boolean, defaults to `true`),\n    *  `cancelable` (boolean, defaults to false), and\n    *  `node` on which to fire the event (HTMLElement, defaults to `this`).\n    * @return {Event} The new event that was fired.\n    */\n      fire(type, detail, options) {\n        options = options || {};\n        return fireEvent(options.node || this, type, detail, options);\n      }\n    }\n);\n","import { dedupingMixin } from \"@polymer/polymer/lib/utils/mixin\";\n/**\n * Polymer Mixin to enable a localize function powered by language/resources from hass object.\n *\n * @polymerMixin\n */\nexport default dedupingMixin(\n  (superClass) =>\n    class extends superClass {\n      static get properties() {\n        return {\n          hass: Object,\n\n          /**\n           * Translates a string to the current `language`. Any parameters to the\n           * string should be passed in order, as follows:\n           * `localize(stringKey, param1Name, param1Value, param2Name, param2Value)`\n           */\n          localize: {\n            type: Function,\n            computed: \"__computeLocalize(hass.localize)\",\n          },\n        };\n      }\n\n      __computeLocalize(localize) {\n        return localize;\n      }\n    }\n);\n","import {\n  css,\n  CSSResult,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\n\nclass HaCard extends LitElement {\n  @property() public header?: string;\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        background: var(\n          --ha-card-background,\n          var(--paper-card-background-color, white)\n        );\n        border-radius: var(--ha-card-border-radius, 2px);\n        box-shadow: var(\n          --ha-card-box-shadow,\n          0 2px 2px 0 rgba(0, 0, 0, 0.14),\n          0 1px 5px 0 rgba(0, 0, 0, 0.12),\n          0 3px 1px -2px rgba(0, 0, 0, 0.2)\n        );\n        color: var(--primary-text-color);\n        display: block;\n        transition: all 0.3s ease-out;\n        position: relative;\n      }\n\n      .card-header,\n      :host ::slotted(.card-header) {\n        color: var(--ha-card-header-color, --primary-text-color);\n        font-family: var(--ha-card-header-font-family, inherit);\n        font-size: var(--ha-card-header-font-size, 24px);\n        letter-spacing: -0.012em;\n        line-height: 32px;\n        padding: 24px 16px 16px;\n        display: block;\n      }\n\n      :host ::slotted(.card-content:not(:first-child)),\n      slot:not(:first-child)::slotted(.card-content) {\n        padding-top: 0px;\n        margin-top: -8px;\n      }\n\n      :host ::slotted(.card-content) {\n        padding: 16px;\n      }\n\n      :host ::slotted(.card-actions) {\n        border-top: 1px solid #e8e8e8;\n        padding: 5px 16px;\n      }\n    `;\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      ${this.header\n        ? html`\n            <div class=\"card-header\">${this.header}</div>\n          `\n        : html``}\n      <slot></slot>\n    `;\n  }\n}\n\ncustomElements.define(\"ha-card\", HaCard);\n","import fecha from \"fecha\";\n\n// Check for support of native locale string options\nfunction toLocaleStringSupportsOptions() {\n  try {\n    new Date().toLocaleString(\"i\");\n  } catch (e) {\n    return e.name === \"RangeError\";\n  }\n  return false;\n}\n\nexport default (toLocaleStringSupportsOptions()\n  ? (dateObj: Date, locales: string) =>\n      dateObj.toLocaleString(locales, {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n        hour: \"numeric\",\n        minute: \"2-digit\",\n      })\n  : (dateObj: Date) => fecha.format(dateObj, \"haDateTime\"));\n","import \"@polymer/app-layout/app-header-layout/app-header-layout\";\nimport \"@polymer/app-layout/app-header/app-header\";\nimport \"@polymer/app-layout/app-toolbar/app-toolbar\";\nimport \"@material/mwc-button\";\nimport \"@polymer/paper-input/paper-textarea\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-tabs/paper-tab\";\nimport \"@polymer/paper-tabs/paper-tabs\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../../components/ha-menu-button\";\nimport \"../../components/ha-card\";\nimport \"../../resources/ha-style\";\n\nimport formatDateTime from \"../../common/datetime/format_date_time\";\nimport LocalizeMixin from \"../../mixins/localize-mixin\";\nimport { EventsMixin } from \"../../mixins/events-mixin\";\n\nlet registeredDialog = false;\n\n/*\n * @appliesMixin LocalizeMixin\n */\nclass HaPanelMailbox extends EventsMixin(LocalizeMixin(PolymerElement)) {\n  static get template() {\n    return html`\n      <style include=\"ha-style\">\n        :host {\n          -ms-user-select: initial;\n          -webkit-user-select: initial;\n          -moz-user-select: initial;\n        }\n\n        .content {\n          padding: 16px;\n          max-width: 600px;\n          margin: 0 auto;\n        }\n\n        ha-card {\n          overflow: hidden;\n        }\n\n        paper-item {\n          cursor: pointer;\n        }\n\n        .empty {\n          text-align: center;\n          color: var(--secondary-text-color);\n        }\n\n        .header {\n          @apply --paper-font-title;\n        }\n\n        .row {\n          display: flex;\n          justify-content: space-between;\n        }\n\n        @media all and (max-width: 450px) {\n          .content {\n            width: auto;\n            padding: 0;\n          }\n        }\n\n        .tip {\n          color: var(--secondary-text-color);\n          font-size: 14px;\n        }\n        .date {\n          color: var(--primary-text-color);\n        }\n      </style>\n\n      <app-header-layout has-scrolling-region>\n        <app-header slot=\"header\" fixed>\n          <app-toolbar>\n            <ha-menu-button></ha-menu-button>\n            <div main-title>[[localize('panel.mailbox')]]</div>\n          </app-toolbar>\n          <div sticky hidden$=\"[[areTabsHidden(platforms)]]\">\n            <paper-tabs\n              scrollable\n              selected=\"[[_currentPlatform]]\"\n              on-iron-activate=\"handlePlatformSelected\"\n            >\n              <template is=\"dom-repeat\" items=\"[[platforms]]\">\n                <paper-tab data-entity=\"[[item]]\">\n                  [[getPlatformName(item)]]\n                </paper-tab>\n              </template>\n            </paper-tabs>\n          </div>\n        </app-header>\n        <div class=\"content\">\n          <ha-card>\n            <template is=\"dom-if\" if=\"[[!_messages.length]]\">\n              <div class=\"card-content empty\">\n                [[localize('ui.panel.mailbox.empty')]]\n              </div>\n            </template>\n            <template is=\"dom-repeat\" items=\"[[_messages]]\">\n              <paper-item on-click=\"openMP3Dialog\">\n                <paper-item-body style=\"width:100%\" two-line>\n                  <div class=\"row\">\n                    <div>[[item.caller]]</div>\n                    <div class=\"tip\">\n                      [[localize('ui.duration.second', 'count', item.duration)]]\n                    </div>\n                  </div>\n                  <div secondary>\n                    <span class=\"date\">[[item.timestamp]]</span> -\n                    [[item.message]]\n                  </div>\n                </paper-item-body>\n              </paper-item>\n            </template>\n          </ha-card>\n        </div>\n      </app-header-layout>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n      },\n\n      platforms: {\n        type: Array,\n      },\n\n      _messages: {\n        type: Array,\n      },\n\n      _currentPlatform: {\n        type: Number,\n        value: 0,\n      },\n    };\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    if (!registeredDialog) {\n      registeredDialog = true;\n      this.fire(\"register-dialog\", {\n        dialogShowEvent: \"show-audio-message-dialog\",\n        dialogTag: \"ha-dialog-show-audio-message\",\n        dialogImport: () =>\n          import(/* webpackChunkName: \"ha-dialog-show-audio-message\" */ \"./ha-dialog-show-audio-message\"),\n      });\n    }\n    this.hassChanged = this.hassChanged.bind(this);\n    this.hass.connection\n      .subscribeEvents(this.hassChanged, \"mailbox_updated\")\n      .then(\n        function(unsub) {\n          this._unsubEvents = unsub;\n        }.bind(this)\n      );\n    this.computePlatforms().then(\n      function(platforms) {\n        this.platforms = platforms;\n        this.hassChanged();\n      }.bind(this)\n    );\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    if (this._unsubEvents) this._unsubEvents();\n  }\n\n  hassChanged() {\n    if (!this._messages) {\n      this._messages = [];\n    }\n    this.getMessages().then(\n      function(items) {\n        this._messages = items;\n      }.bind(this)\n    );\n  }\n\n  openMP3Dialog(event) {\n    this.fire(\"show-audio-message-dialog\", {\n      hass: this.hass,\n      message: event.model.item,\n    });\n  }\n\n  getMessages() {\n    const platform = this.platforms[this._currentPlatform];\n    return this.hass\n      .callApi(\"GET\", `mailbox/messages/${platform.name}`)\n      .then((values) => {\n        const platformItems = [];\n        const arrayLength = values.length;\n        for (let i = 0; i < arrayLength; i++) {\n          const datetime = formatDateTime(\n            new Date(values[i].info.origtime * 1000),\n            this.hass.language\n          );\n          platformItems.push({\n            timestamp: datetime,\n            caller: values[i].info.callerid,\n            message: values[i].text,\n            sha: values[i].sha,\n            duration: values[i].info.duration,\n            platform: platform,\n          });\n        }\n        return platformItems.sort(function(a, b) {\n          return new Date(b.timestamp) - new Date(a.timestamp);\n        });\n      });\n  }\n\n  computePlatforms() {\n    return this.hass.callApi(\"GET\", \"mailbox/platforms\");\n  }\n\n  handlePlatformSelected(ev) {\n    const newPlatform = ev.detail.selected;\n    if (newPlatform !== this._currentPlatform) {\n      this._currentPlatform = newPlatform;\n      this.hassChanged();\n    }\n  }\n\n  areTabsHidden(platforms) {\n    return !platforms || platforms.length < 2;\n  }\n\n  getPlatformName(item) {\n    const entity = `mailbox.${item.name}`;\n    const stateObj = this.hass.states[entity.toLowerCase()];\n    return stateObj.attributes.friendly_name;\n  }\n}\n\ncustomElements.define(\"ha-panel-mailbox\", HaPanelMailbox);\n"],"sourceRoot":""}