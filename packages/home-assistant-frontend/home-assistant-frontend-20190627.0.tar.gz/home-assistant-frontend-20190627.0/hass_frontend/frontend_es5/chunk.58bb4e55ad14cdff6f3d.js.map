{"version":3,"sources":["webpack:///./src/mixins/events-mixin.js","webpack:///./src/components/ha-card.ts","webpack:///./src/common/datetime/format_date_time.ts","webpack:///./src/common/datetime/format_time.ts","webpack:///./src/components/buttons/ha-call-service-button.js","webpack:///./src/components/buttons/ha-progress-button.js","webpack:///./src/panels/dev-info/show-dialog-system-log-detail.ts","webpack:///./src/panels/dev-info/system-log-card.ts","webpack:///./src/data/system_log.ts","webpack:///./src/panels/dev-info/error-log-card.ts","webpack:///./src/data/error_log.ts","webpack:///./src/panels/dev-info/system-health-card.ts","webpack:///./src/data/system_health.ts","webpack:///./src/panels/dev-info/ha-panel-dev-info.ts"],"names":["EventsMixin","dedupingMixin","superClass","_superClass","_class","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","apply","arguments","_inherits","key","value","type","detail","options","fireEvent","node","HaCard","property","css","_templateObject","html","_templateObject2","header","_templateObject3","_templateObject4","LitElement","customElements","define","fecha__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","toLocaleStringSupportsOptions","Date","toLocaleString","e","name","dateObj","locales","year","month","day","hour","minute","fecha","format","toLocaleTimeStringSupportsOptions","toLocaleTimeString","HaCallServiceButton","PolymerElement","hass","Object","progress","Boolean","domain","String","service","serviceData","el","eventData","callService","then","$","actionSuccess","success","actionError","fire","HaProgressButton","disabled","className","classList","container","add","setTimeout","remove","_this","_get","prototype","call","addEventListener","ev","buttonTapped","stopPropagation","tempClass","registeredDialog","showSystemLogDetailDialog","element","systemLogDetailParams","dialogShowEvent","dialogTag","dialogImport","Promise","all","bind","registerDialog","formatLogTime","date","language","today","setHours","dateTime","formatDateTime","formatTime","SystemLogCard","_items","_this2","undefined","length","map","item","_templateObject5","_openLog","message","timestamp","source","level","count","_templateObject6","first_occured","_templateObject7","_fetchData","changedProps","_this3","serviceCalled","callApi","currentTarget","logItem","_templateObject8","ErrorLogCard","_errorLog","error_log_card_templateObject","error_log_card_templateObject2","_refreshErrorLog","error_log_card_templateObject3","log","error_log_card_templateObject4","sortKeys","a","b","SystemHealthCard","_info","sections","domains","keys","sort","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","push","system_health_card_templateObject4","err","return","system_health_card_templateObject2","localize","concat","system_health_card_templateObject3","system_health_card_templateObject","system_health_card_templateObject5","system_health_card_get","system_health_card_getPrototypeOf","_fetchInfo","config","components","includes","Error","callWS","system_health","error","system_health_card_templateObject6","HaPanelDevInfo","haStyle","ha_panel_dev_info_templateObject5","ha_panel_dev_info_templateObject","customUiList","window","CUSTOM_UI_LIST","nonDefaultLink","localStorage","defaultPage","nonDefaultLinkText","defaultPageText","ha_panel_dev_info_templateObject2","version","config_dir","__BUILD__","ha_panel_dev_info_templateObject3","ha_panel_dev_info_templateObject4","url","_toggleDefaultPage","ha_panel_dev_info_get","ha_panel_dev_info_getPrototypeOf","customUI","requestUpdate"],"mappings":"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","file":"chunk.58bb4e55ad14cdff6f3d.js","sourcesContent":["import { dedupingMixin } from \"@polymer/polymer/lib/utils/mixin\";\n\nimport { fireEvent } from \"../common/dom/fire_event\";\n\n// Polymer legacy event helpers used courtesy of the Polymer project.\n//\n// Copyright (c) 2017 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n//    * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n//    * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n//    * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n/* @polymerMixin */\nexport const EventsMixin = dedupingMixin(\n  (superClass) =>\n    class extends superClass {\n      /**\n   * Dispatches a custom event with an optional detail value.\n   *\n   * @param {string} type Name of event type.\n   * @param {*=} detail Detail value containing event-specific\n   *   payload.\n   * @param {{ bubbles: (boolean|undefined),\n               cancelable: (boolean|undefined),\n                composed: (boolean|undefined) }=}\n    *  options Object specifying options.  These may include:\n    *  `bubbles` (boolean, defaults to `true`),\n    *  `cancelable` (boolean, defaults to false), and\n    *  `node` on which to fire the event (HTMLElement, defaults to `this`).\n    * @return {Event} The new event that was fired.\n    */\n      fire(type, detail, options) {\n        options = options || {};\n        return fireEvent(options.node || this, type, detail, options);\n      }\n    }\n);\n","import {\n  css,\n  CSSResult,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\n\nclass HaCard extends LitElement {\n  @property() public header?: string;\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        background: var(\n          --ha-card-background,\n          var(--paper-card-background-color, white)\n        );\n        border-radius: var(--ha-card-border-radius, 2px);\n        box-shadow: var(\n          --ha-card-box-shadow,\n          0 2px 2px 0 rgba(0, 0, 0, 0.14),\n          0 1px 5px 0 rgba(0, 0, 0, 0.12),\n          0 3px 1px -2px rgba(0, 0, 0, 0.2)\n        );\n        color: var(--primary-text-color);\n        display: block;\n        transition: all 0.3s ease-out;\n        position: relative;\n      }\n\n      .card-header,\n      :host ::slotted(.card-header) {\n        color: var(--ha-card-header-color, --primary-text-color);\n        font-family: var(--ha-card-header-font-family, inherit);\n        font-size: var(--ha-card-header-font-size, 24px);\n        letter-spacing: -0.012em;\n        line-height: 32px;\n        padding: 24px 16px 16px;\n        display: block;\n      }\n\n      :host ::slotted(.card-content:not(:first-child)),\n      slot:not(:first-child)::slotted(.card-content) {\n        padding-top: 0px;\n        margin-top: -8px;\n      }\n\n      :host ::slotted(.card-content) {\n        padding: 16px;\n      }\n\n      :host ::slotted(.card-actions) {\n        border-top: 1px solid #e8e8e8;\n        padding: 5px 16px;\n      }\n    `;\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      ${this.header\n        ? html`\n            <div class=\"card-header\">${this.header}</div>\n          `\n        : html``}\n      <slot></slot>\n    `;\n  }\n}\n\ncustomElements.define(\"ha-card\", HaCard);\n","import fecha from \"fecha\";\n\n// Check for support of native locale string options\nfunction toLocaleStringSupportsOptions() {\n  try {\n    new Date().toLocaleString(\"i\");\n  } catch (e) {\n    return e.name === \"RangeError\";\n  }\n  return false;\n}\n\nexport default (toLocaleStringSupportsOptions()\n  ? (dateObj: Date, locales: string) =>\n      dateObj.toLocaleString(locales, {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n        hour: \"numeric\",\n        minute: \"2-digit\",\n      })\n  : (dateObj: Date) => fecha.format(dateObj, \"haDateTime\"));\n","import fecha from \"fecha\";\n\n// Check for support of native locale string options\nfunction toLocaleTimeStringSupportsOptions() {\n  try {\n    new Date().toLocaleTimeString(\"i\");\n  } catch (e) {\n    return e.name === \"RangeError\";\n  }\n  return false;\n}\n\nexport default (toLocaleTimeStringSupportsOptions()\n  ? (dateObj: Date, locales: string) =>\n      dateObj.toLocaleTimeString(locales, {\n        hour: \"numeric\",\n        minute: \"2-digit\",\n      })\n  : (dateObj: Date) => fecha.format(dateObj, \"shortTime\"));\n","import { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"./ha-progress-button\";\nimport { EventsMixin } from \"../../mixins/events-mixin\";\n\n/*\n * @appliesMixin EventsMixin\n */\nclass HaCallServiceButton extends EventsMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <ha-progress-button\n        id=\"progress\"\n        progress=\"[[progress]]\"\n        on-click=\"buttonTapped\"\n        ><slot></slot\n      ></ha-progress-button>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n      },\n\n      progress: {\n        type: Boolean,\n        value: false,\n      },\n\n      domain: {\n        type: String,\n      },\n\n      service: {\n        type: String,\n      },\n\n      serviceData: {\n        type: Object,\n        value: {},\n      },\n    };\n  }\n\n  buttonTapped() {\n    this.progress = true;\n    var el = this;\n    var eventData = {\n      domain: this.domain,\n      service: this.service,\n      serviceData: this.serviceData,\n    };\n\n    this.hass\n      .callService(this.domain, this.service, this.serviceData)\n      .then(\n        function() {\n          el.progress = false;\n          el.$.progress.actionSuccess();\n          eventData.success = true;\n        },\n        function() {\n          el.progress = false;\n          el.$.progress.actionError();\n          eventData.success = false;\n        }\n      )\n      .then(function() {\n        el.fire(\"hass-service-called\", eventData);\n      });\n  }\n}\n\ncustomElements.define(\"ha-call-service-button\", HaCallServiceButton);\n","import \"@material/mwc-button\";\nimport \"@polymer/paper-spinner/paper-spinner\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nclass HaProgressButton extends PolymerElement {\n  static get template() {\n    return html`\n      <style>\n        .container {\n          position: relative;\n          display: inline-block;\n        }\n\n        mwc-button {\n          transition: all 1s;\n        }\n\n        .success mwc-button {\n          --mdc-theme-primary: white;\n          background-color: var(--google-green-500);\n          transition: none;\n        }\n\n        .error mwc-button {\n          --mdc-theme-primary: white;\n          background-color: var(--google-red-500);\n          transition: none;\n        }\n\n        .progress {\n          @apply --layout;\n          @apply --layout-center-center;\n          position: absolute;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n        }\n      </style>\n      <div class=\"container\" id=\"container\">\n        <mwc-button\n          id=\"button\"\n          disabled=\"[[computeDisabled(disabled, progress)]]\"\n          on-click=\"buttonTapped\"\n        >\n          <slot></slot>\n        </mwc-button>\n        <template is=\"dom-if\" if=\"[[progress]]\">\n          <div class=\"progress\"><paper-spinner active=\"\"></paper-spinner></div>\n        </template>\n      </div>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n      },\n\n      progress: {\n        type: Boolean,\n        value: false,\n      },\n\n      disabled: {\n        type: Boolean,\n        value: false,\n      },\n    };\n  }\n\n  tempClass(className) {\n    var classList = this.$.container.classList;\n    classList.add(className);\n    setTimeout(() => {\n      classList.remove(className);\n    }, 1000);\n  }\n\n  ready() {\n    super.ready();\n    this.addEventListener(\"click\", (ev) => this.buttonTapped(ev));\n  }\n\n  buttonTapped(ev) {\n    if (this.progress) ev.stopPropagation();\n  }\n\n  actionSuccess() {\n    this.tempClass(\"success\");\n  }\n\n  actionError() {\n    this.tempClass(\"error\");\n  }\n\n  computeDisabled(disabled, progress) {\n    return disabled || progress;\n  }\n}\n\ncustomElements.define(\"ha-progress-button\", HaProgressButton);\n","import { fireEvent } from \"../../common/dom/fire_event\";\nimport { LoggedError } from \"../../data/system_log\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"show-dialog-system-log-detail\": SystemLogDetailDialogParams;\n  }\n}\n\nlet registeredDialog = false;\nconst dialogShowEvent = \"show-dialog-system-log-detail\";\nconst dialogTag = \"dialog-system-log-detail\";\n\nexport interface SystemLogDetailDialogParams {\n  item: LoggedError;\n}\n\nconst registerDialog = (element: HTMLElement) =>\n  fireEvent(element, \"register-dialog\", {\n    dialogShowEvent,\n    dialogTag,\n    dialogImport: () =>\n      import(/* webpackChunkName: \"system-log-detail-dialog\" */ \"./dialog-system-log-detail\"),\n  });\n\nexport const showSystemLogDetailDialog = (\n  element: HTMLElement,\n  systemLogDetailParams: SystemLogDetailDialogParams\n): void => {\n  if (!registeredDialog) {\n    registeredDialog = true;\n    registerDialog(element);\n  }\n  fireEvent(element, dialogShowEvent, systemLogDetailParams);\n};\n","import {\n  LitElement,\n  html,\n  CSSResult,\n  css,\n  PropertyDeclarations,\n  TemplateResult,\n} from \"lit-element\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-spinner/paper-spinner\";\nimport \"../../components/ha-card\";\nimport \"../../components/buttons/ha-call-service-button\";\nimport \"../../components/buttons/ha-progress-button\";\nimport { HomeAssistant } from \"../../types\";\nimport { LoggedError, fetchSystemLog } from \"../../data/system_log\";\nimport formatDateTime from \"../../common/datetime/format_date_time\";\nimport formatTime from \"../../common/datetime/format_time\";\nimport { showSystemLogDetailDialog } from \"./show-dialog-system-log-detail\";\n\nconst formatLogTime = (date, language: string) => {\n  const today = new Date().setHours(0, 0, 0, 0);\n  const dateTime = new Date(date * 1000);\n  const dateTimeDay = new Date(date * 1000).setHours(0, 0, 0, 0);\n\n  return dateTimeDay < today\n    ? formatDateTime(dateTime, language)\n    : formatTime(dateTime, language);\n};\n\nclass SystemLogCard extends LitElement {\n  public hass?: HomeAssistant;\n  private _items?: LoggedError[];\n\n  static get properties(): PropertyDeclarations {\n    return {\n      hass: {},\n      _items: {},\n    };\n  }\n\n  protected render(): TemplateResult | void {\n    return html`\n      <div class=\"system-log-intro\">\n        <ha-card>\n          ${this._items === undefined\n            ? html`\n                <div class=\"loading-container\">\n                  <paper-spinner active></paper-spinner>\n                </div>\n              `\n            : html`\n                ${this._items.length === 0\n                  ? html`\n                      <div class=\"card-content\">There are no new issues!</div>\n                    `\n                  : this._items.map(\n                      (item) => html`\n                        <paper-item @click=${this._openLog} .logItem=${item}>\n                          <paper-item-body two-line>\n                            <div class=\"row\">\n                              ${item.message}\n                            </div>\n                            <div secondary>\n                              ${formatLogTime(\n                                item.timestamp,\n                                this.hass!.language\n                              )}\n                              ${item.source} (${item.level})\n                              ${item.count > 1\n                                ? html`\n                                    - message first occured at\n                                    ${formatLogTime(\n                                      item.first_occured,\n                                      this.hass!.language\n                                    )}\n                                    and shows up ${item.count} times\n                                  `\n                                : html``}\n                            </div>\n                          </paper-item-body>\n                        </paper-item>\n                      `\n                    )}\n\n                <div class=\"card-actions\">\n                  <ha-call-service-button\n                    .hass=${this.hass}\n                    domain=\"system_log\"\n                    service=\"clear\"\n                    >Clear</ha-call-service-button\n                  >\n                  <ha-progress-button @click=${this._fetchData}\n                    >Refresh</ha-progress-button\n                  >\n                </div>\n              `}\n        </ha-card>\n      </div>\n    `;\n  }\n\n  protected firstUpdated(changedProps): void {\n    super.firstUpdated(changedProps);\n    this._fetchData();\n    this.addEventListener(\"hass-service-called\", (ev) =>\n      this.serviceCalled(ev)\n    );\n  }\n\n  protected serviceCalled(ev): void {\n    // Check if this is for us\n    if (ev.detail.success && ev.detail.domain === \"system_log\") {\n      // Do the right thing depending on service\n      if (ev.detail.service === \"clear\") {\n        this._items = [];\n      }\n    }\n  }\n\n  private async _fetchData(): Promise<void> {\n    this._items = undefined;\n    this._items = await fetchSystemLog(this.hass!);\n  }\n\n  private _openLog(ev: Event): void {\n    const item = (ev.currentTarget as any).logItem;\n    showSystemLogDetailDialog(this, { item });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      ha-card {\n        padding-top: 16px;\n      }\n\n      paper-item {\n        cursor: pointer;\n      }\n\n      .system-log-intro {\n        margin: 16px;\n        border-top: 1px solid var(--light-primary-color);\n        padding-top: 16px;\n      }\n\n      .loading-container {\n        height: 100px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n    `;\n  }\n}\n\ncustomElements.define(\"system-log-card\", SystemLogCard);\n","import { HomeAssistant } from \"../types\";\n\nexport interface LoggedError {\n  message: string;\n  level: string;\n  source: string;\n  // unix timestamp in seconds\n  timestamp: number;\n  exception: string;\n  count: number;\n  // unix timestamp in seconds\n  first_occured: number;\n}\n\nexport const fetchSystemLog = (hass: HomeAssistant) =>\n  hass.callApi<LoggedError[]>(\"GET\", \"error/all\");\n","import {\n  LitElement,\n  html,\n  CSSResult,\n  css,\n  PropertyDeclarations,\n  TemplateResult,\n} from \"lit-element\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@material/mwc-button\";\n\nimport { HomeAssistant } from \"../../types\";\nimport { fetchErrorLog } from \"../../data/error_log\";\n\nclass ErrorLogCard extends LitElement {\n  public hass?: HomeAssistant;\n  private _errorLog?: string;\n\n  static get properties(): PropertyDeclarations {\n    return {\n      hass: {},\n      _errorLog: {},\n    };\n  }\n\n  protected render(): TemplateResult | void {\n    return html`\n      <p class=\"error-log-intro\">\n        ${this._errorLog\n          ? html`\n              <paper-icon-button\n                icon=\"hass:refresh\"\n                @click=${this._refreshErrorLog}\n              ></paper-icon-button>\n            `\n          : html`\n              <mwc-button raised @click=${this._refreshErrorLog}>\n                Load Full Home Assistant Log\n              </mwc-button>\n            `}\n      </p>\n      <div class=\"error-log\">${this._errorLog}</div>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .error-log-intro {\n        text-align: center;\n        margin: 16px;\n      }\n\n      paper-icon-button {\n        float: right;\n      }\n\n      .error-log {\n        @apply --paper-font-code)\n          clear: both;\n        white-space: pre-wrap;\n        margin: 16px;\n      }\n    `;\n  }\n\n  private async _refreshErrorLog(): Promise<void> {\n    this._errorLog = \"Loading error log…\";\n    const log = await fetchErrorLog(this.hass!);\n    this._errorLog = log || \"No errors have been reported.\";\n  }\n}\n\ncustomElements.define(\"error-log-card\", ErrorLogCard);\n","import { HomeAssistant } from \"../types\";\n\nexport const fetchErrorLog = (hass: HomeAssistant) =>\n  hass.callApi<string>(\"GET\", \"error_log\");\n","import {\n  LitElement,\n  html,\n  CSSResult,\n  css,\n  PropertyDeclarations,\n  TemplateResult,\n} from \"lit-element\";\nimport \"@polymer/paper-spinner/paper-spinner\";\nimport \"../../components/ha-card\";\n\nimport { HomeAssistant } from \"../../types\";\nimport {\n  SystemHealthInfo,\n  fetchSystemHealthInfo,\n} from \"../../data/system_health\";\n\nconst sortKeys = (a: string, b: string) => {\n  if (a === \"homeassistant\") {\n    return -1;\n  }\n  if (b === \"homeassistant\") {\n    return 1;\n  }\n  if (a < b) {\n    return -1;\n  }\n  if (b < a) {\n    return 1;\n  }\n  return 0;\n};\n\nclass SystemHealthCard extends LitElement {\n  public hass?: HomeAssistant;\n  private _info?: SystemHealthInfo;\n\n  static get properties(): PropertyDeclarations {\n    return {\n      hass: {},\n      _info: {},\n    };\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass) {\n      return;\n    }\n    const sections: TemplateResult[] = [];\n\n    if (!this._info) {\n      sections.push(\n        html`\n          <div class=\"loading-container\">\n            <paper-spinner active></paper-spinner>\n          </div>\n        `\n      );\n    } else {\n      const domains = Object.keys(this._info).sort(sortKeys);\n      for (const domain of domains) {\n        const keys: TemplateResult[] = [];\n\n        for (const key of Object.keys(this._info[domain]).sort()) {\n          keys.push(html`\n            <tr>\n              <td>${key}</td>\n              <td>${this._info[domain][key]}</td>\n            </tr>\n          `);\n        }\n        if (domain !== \"homeassistant\") {\n          sections.push(\n            html`\n              <h3>${this.hass.localize(`domain.${domain}`) || domain}</h3>\n            `\n          );\n        }\n        sections.push(html`\n          <table>\n            ${keys}\n          </table>\n        `);\n      }\n    }\n\n    return html`\n      <ha-card header=\"System Health\">\n        <div class=\"card-content\">${sections}</div>\n      </ha-card>\n    `;\n  }\n\n  protected firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n    this._fetchInfo();\n  }\n\n  private async _fetchInfo() {\n    try {\n      if (!this.hass!.config.components.includes(\"system_health\")) {\n        throw new Error();\n      }\n      this._info = await fetchSystemHealthInfo(this.hass!);\n    } catch (err) {\n      this._info = {\n        system_health: {\n          error:\n            \"System Health component is not loaded. Add 'system_health:' to configuration.yaml\",\n        },\n      };\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      table {\n        width: 100%;\n      }\n\n      td:first-child {\n        width: 33%;\n      }\n\n      .loading-container {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n    `;\n  }\n}\n\ncustomElements.define(\"system-health-card\", SystemHealthCard);\n","import { HomeAssistant } from \"../types\";\n\nexport interface HomeAssistantSystemHealthInfo {\n  version: string;\n  dev: boolean;\n  hassio: boolean;\n  virtualenv: string;\n  python_version: string;\n  docker: boolean;\n  arch: string;\n  timezone: string;\n  os_name: string;\n}\n\nexport interface SystemHealthInfo {\n  [domain: string]: { [key: string]: string | number | boolean };\n}\n\nexport const fetchSystemHealthInfo = (\n  hass: HomeAssistant\n): Promise<SystemHealthInfo> =>\n  hass.callWS({\n    type: \"system_health/info\",\n  });\n","import {\n  LitElement,\n  html,\n  PropertyDeclarations,\n  CSSResult,\n  css,\n  TemplateResult,\n} from \"lit-element\";\nimport \"@polymer/app-layout/app-header-layout/app-header-layout\";\nimport \"@polymer/app-layout/app-header/app-header\";\nimport \"@polymer/app-layout/app-toolbar/app-toolbar\";\nimport \"../../components/ha-menu-button\";\n\nimport { HomeAssistant } from \"../../types\";\nimport { haStyle } from \"../../resources/styles\";\n\nimport \"./system-log-card\";\nimport \"./error-log-card\";\nimport \"./system-health-card\";\n\nconst JS_VERSION = __BUILD__;\nconst OPT_IN_PANEL = \"states\";\n\nclass HaPanelDevInfo extends LitElement {\n  public hass?: HomeAssistant;\n\n  static get properties(): PropertyDeclarations {\n    return {\n      hass: {},\n    };\n  }\n\n  protected render(): TemplateResult | void {\n    const hass = this.hass;\n    if (!hass) {\n      return html``;\n    }\n    const customUiList: Array<{ name: string; url: string; version: string }> =\n      (window as any).CUSTOM_UI_LIST || [];\n\n    const nonDefaultLink =\n      localStorage.defaultPage === OPT_IN_PANEL && OPT_IN_PANEL === \"states\"\n        ? \"/lovelace\"\n        : \"/states\";\n\n    const nonDefaultLinkText =\n      localStorage.defaultPage === OPT_IN_PANEL && OPT_IN_PANEL === \"states\"\n        ? \"Go to the Lovelace UI\"\n        : \"Go to the states UI\";\n\n    const defaultPageText = `${\n      localStorage.defaultPage === OPT_IN_PANEL ? \"Remove\" : \"Set\"\n    } ${OPT_IN_PANEL} as default page on this device`;\n\n    return html`\n      <app-header-layout has-scrolling-region>\n        <app-header slot=\"header\" fixed>\n          <app-toolbar>\n            <ha-menu-button></ha-menu-button>\n            <div main-title>About</div>\n          </app-toolbar>\n        </app-header>\n\n        <div class=\"content\">\n          <div class=\"about\">\n            <p class=\"version\">\n              <a href=\"https://www.home-assistant.io\" target=\"_blank\">\n                <img\n                  src=\"/static/icons/favicon-192x192.png\"\n                  height=\"192\"\n                  alt=\"Home Assistant logo\"\n                />\n              </a>\n              <br />\n              Home Assistant<br />\n              ${hass.config.version}\n            </p>\n            <p>\n              Path to configuration.yaml: ${hass.config.config_dir}\n            </p>\n            <p class=\"develop\">\n              <a\n                href=\"https://www.home-assistant.io/developers/credits/\"\n                target=\"_blank\"\n              >\n                Developed by a bunch of awesome people.\n              </a>\n            </p>\n            <p>\n              Published under the Apache 2.0 license<br />\n              Source:\n              <a\n                href=\"https://github.com/home-assistant/home-assistant\"\n                target=\"_blank\"\n                >server</a\n              >\n              &mdash;\n              <a\n                href=\"https://github.com/home-assistant/home-assistant-polymer\"\n                target=\"_blank\"\n                >frontend-ui</a\n              >\n            </p>\n            <p>\n              Built using\n              <a href=\"https://www.python.org\">Python 3</a>,\n              <a href=\"https://www.polymer-project.org\" target=\"_blank\"\n                >Polymer</a\n              >, Icons by\n              <a href=\"https://www.google.com/design/icons/\" target=\"_blank\"\n                >Google</a\n              >\n              and\n              <a href=\"https://MaterialDesignIcons.com\" target=\"_blank\"\n                >MaterialDesignIcons.com</a\n              >.\n            </p>\n            <p>\n              Frontend JavaScript version: ${JS_VERSION}\n              ${customUiList.length > 0\n                ? html`\n                    <div>\n                      Custom UIs:\n                      ${customUiList.map(\n                        (item) => html`\n                          <div>\n                            <a href=\"${item.url}\" target=\"_blank\">\n                              ${item.name}</a\n                            >: ${item.version}\n                          </div>\n                        `\n                      )}\n                    </div>\n                  `\n                : \"\"}\n            </p>\n            <p>\n              <a href=\"${nonDefaultLink}\">${nonDefaultLinkText}</a><br />\n              <mwc-button @click=\"${this._toggleDefaultPage}\" raised>\n                ${defaultPageText}\n              </mwc-button>\n            </p>\n          </div>\n          <system-health-card .hass=${this.hass}></system-health-card>\n          <system-log-card .hass=${this.hass}></system-log-card>\n          <error-log-card .hass=${this.hass}></error-log-card>\n        </div>\n      </app-header-layout>\n    `;\n  }\n\n  protected firstUpdated(changedProps): void {\n    super.firstUpdated(changedProps);\n\n    // Legacy custom UI can be slow to register, give them time.\n    const customUI = ((window as any).CUSTOM_UI_LIST || []).length;\n    setTimeout(() => {\n      if (((window as any).CUSTOM_UI_LIST || []).length !== customUI.length) {\n        this.requestUpdate();\n      }\n    }, 1000);\n  }\n\n  protected _toggleDefaultPage(): void {\n    if (localStorage.defaultPage === OPT_IN_PANEL) {\n      delete localStorage.defaultPage;\n    } else {\n      localStorage.defaultPage = OPT_IN_PANEL;\n    }\n    this.requestUpdate();\n  }\n\n  static get styles(): CSSResult[] {\n    return [\n      haStyle,\n      css`\n        :host {\n          -ms-user-select: initial;\n          -webkit-user-select: initial;\n          -moz-user-select: initial;\n        }\n\n        .content {\n          padding: 16px 0px 16px 0;\n          direction: ltr;\n        }\n\n        .about {\n          text-align: center;\n          line-height: 2em;\n        }\n\n        .version {\n          @apply --paper-font-headline;\n        }\n\n        .develop {\n          @apply --paper-font-subhead;\n        }\n\n        .about a {\n          color: var(--dark-primary-color);\n        }\n\n        system-health-card {\n          display: block;\n          max-width: 600px;\n          margin: 0 auto;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-panel-dev-info\": HaPanelDevInfo;\n  }\n}\n\ncustomElements.define(\"ha-panel-dev-info\", HaPanelDevInfo);\n"],"sourceRoot":""}