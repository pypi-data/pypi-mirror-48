{"version":3,"sources":["webpack:///./node_modules/@polymer/paper-spinner/paper-spinner.js","webpack:///./node_modules/@polymer/app-layout/app-header-layout/app-header-layout.js","webpack:///./node_modules/@polymer/iron-autogrow-textarea/iron-autogrow-textarea.js","webpack:///./node_modules/@polymer/paper-input/paper-textarea.js","webpack:///./src/panels/dev-template/ha-panel-dev-template.js"],"names":["__webpack_require__","_polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_3__","_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_4__","_paper_spinner_behavior_js__WEBPACK_IMPORTED_MODULE_5__","template","html","setAttribute","Polymer","_template","is","behaviors","PaperSpinnerBehavior","_polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_2__","_polymer_polymer_lib_legacy_polymer_dom_js__WEBPACK_IMPORTED_MODULE_3__","_app_layout_behavior_app_layout_behavior_js__WEBPACK_IMPORTED_MODULE_5__","AppLayoutBehavior","properties","hasScrollingRegion","type","Boolean","value","reflectToAttribute","observers","header","dom","this","$","headerSlot","getDistributedNodes","_updateLayoutStates","isAttached","wrapper","classList","remove","scrollTarget","contentContainer","ownerDocument","documentElement","headerHeight","offsetHeight","style","left","right","requestAnimationFrame","rect","getBoundingClientRect","rightOffset","document","clientWidth","bind","containerStyle","fixed","condenses","marginTop","paddingTop","IronValidatableBehavior","IronControlState","observer","String","notify","bindValue","rows","Number","maxRows","autocomplete","autofocus","inputmode","placeholder","readonly","required","minlength","maxlength","label","listeners","input","textarea","selectionStart","selectionEnd","attached","navigator","userAgent","match","marginLeft","validate","valid","validity","hasValidator","call","invalid","fire","_bindValueChanged","_valueChanged","mirror","innerHTML","_valueForMirror","_onInput","event","eventPath","path","target","_constrain","tokens","_tokens","length","slice","push","join","replace","split","_updateCached","PaperInputBehavior","IronFormElementBehavior","_ariaLabelledBy","_ariaDescribedBy","start","end","_ariaLabelledByChanged","ariaLabelledBy","_focusableElement","_ariaDescribedByChanged","ariaDescribedBy","inputElement","r","__webpack_exports__","_polymer_polymer_lib_utils_async__WEBPACK_IMPORTED_MODULE_5__","_polymer_polymer_lib_utils_debounce__WEBPACK_IMPORTED_MODULE_6__","_polymer_polymer_lib_utils_html_tag__WEBPACK_IMPORTED_MODULE_7__","_polymer_polymer_polymer_element__WEBPACK_IMPORTED_MODULE_8__","customElements","define","PolymerElement","hass","Object","error","rendering","processed","computeFormClasses","narrow","computeRenderedClasses","templateChanged","_debouncer","Debouncer","debounce","timeOut","after","renderTemplate","callApi","then","body","message"],"mappings":"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","file":"chunk.6ccdddfed1f256bfda46.js","sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/paper-styles/color.js';\nimport './paper-spinner-styles.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\nimport {PaperSpinnerBehavior} from './paper-spinner-behavior.js';\n\nconst template = html`\n  <style include=\"paper-spinner-styles\"></style>\n\n  <div id=\"spinnerContainer\" class-name=\"[[__computeContainerClasses(active, __coolingDown)]]\" on-animationend=\"__reset\" on-webkit-animation-end=\"__reset\">\n    <div class=\"spinner-layer layer-1\">\n      <div class=\"circle-clipper left\">\n        <div class=\"circle\"></div>\n      </div>\n      <div class=\"circle-clipper right\">\n        <div class=\"circle\"></div>\n      </div>\n    </div>\n\n    <div class=\"spinner-layer layer-2\">\n      <div class=\"circle-clipper left\">\n        <div class=\"circle\"></div>\n      </div>\n      <div class=\"circle-clipper right\">\n        <div class=\"circle\"></div>\n      </div>\n    </div>\n\n    <div class=\"spinner-layer layer-3\">\n      <div class=\"circle-clipper left\">\n        <div class=\"circle\"></div>\n      </div>\n      <div class=\"circle-clipper right\">\n        <div class=\"circle\"></div>\n      </div>\n    </div>\n\n    <div class=\"spinner-layer layer-4\">\n      <div class=\"circle-clipper left\">\n        <div class=\"circle\"></div>\n      </div>\n      <div class=\"circle-clipper right\">\n        <div class=\"circle\"></div>\n      </div>\n    </div>\n  </div>\n`;\ntemplate.setAttribute('strip-whitespace', '');\n\n/**\nMaterial design: [Progress &\nactivity](https://www.google.com/design/spec/components/progress-activity.html)\n\nElement providing a multiple color material design circular spinner.\n\n    <paper-spinner active></paper-spinner>\n\nThe default spinner cycles between four layers of colors; by default they are\nblue, red, yellow and green. It can be customized to cycle between four\ndifferent colors. Use <paper-spinner-lite> for single color spinners.\n\n### Accessibility\n\nAlt attribute should be set to provide adequate context for accessibility. If\nnot provided, it defaults to 'loading'. Empty alt can be provided to mark the\nelement as decorative if alternative content is provided in another form (e.g. a\ntext block following the spinner).\n\n    <paper-spinner alt=\"Loading contacts list\" active></paper-spinner>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-spinner-layer-1-color` | Color of the first spinner rotation | `--google-blue-500`\n`--paper-spinner-layer-2-color` | Color of the second spinner rotation | `--google-red-500`\n`--paper-spinner-layer-3-color` | Color of the third spinner rotation | `--google-yellow-500`\n`--paper-spinner-layer-4-color` | Color of the fourth spinner rotation | `--google-green-500`\n`--paper-spinner-stroke-width` | The width of the spinner stroke | 3px\n\n@group Paper Elements\n@element paper-spinner\n@hero hero.svg\n@demo demo/index.html\n*/\nPolymer({\n  _template: template,\n\n  is: 'paper-spinner',\n\n  behaviors: [PaperSpinnerBehavior]\n});\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\nimport {AppLayoutBehavior} from '../app-layout-behavior/app-layout-behavior.js';\n\n/**\napp-header-layout is a wrapper element that positions an app-header and other\ncontent. This element uses the document scroll by default, but it can also\ndefine its own scrolling region.\n\nUsing the document scroll:\n\n```html\n<app-header-layout>\n  <app-header slot=\"header\" fixed condenses effects=\"waterfall\">\n    <app-toolbar>\n      <div main-title>App name</div>\n    </app-toolbar>\n  </app-header>\n  <div>\n    main content\n  </div>\n</app-header-layout>\n```\n\nUsing an own scrolling region:\n\n```html\n<app-header-layout has-scrolling-region style=\"width: 300px; height: 400px;\">\n  <app-header slot=\"header\" fixed condenses effects=\"waterfall\">\n    <app-toolbar>\n      <div main-title>App name</div>\n    </app-toolbar>\n  </app-header>\n  <div>\n    main content\n  </div>\n</app-header-layout>\n```\n\nAdd the `fullbleed` attribute to app-header-layout to make it fit the size of\nits container:\n\n```html\n<app-header-layout fullbleed>\n ...\n</app-header-layout>\n```\n\n@group App Elements\n@element app-header-layout\n@demo app-header-layout/demo/simple.html Simple Demo\n@demo app-header-layout/demo/scrolling-region.html Scrolling Region\n@demo app-header-layout/demo/music.html Music Demo\n@demo app-header-layout/demo/footer.html Footer Demo\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        display: block;\n        /**\n         * Force app-header-layout to have its own stacking context so that its parent can\n         * control the stacking of it relative to other elements (e.g. app-drawer-layout).\n         * This could be done using \\`isolation: isolate\\`, but that's not well supported\n         * across browsers.\n         */\n        position: relative;\n        z-index: 0;\n      }\n\n      #wrapper ::slotted([slot=header]) {\n        @apply --layout-fixed-top;\n        z-index: 1;\n      }\n\n      #wrapper.initializing ::slotted([slot=header]) {\n        position: relative;\n      }\n\n      :host([has-scrolling-region]) {\n        height: 100%;\n      }\n\n      :host([has-scrolling-region]) #wrapper ::slotted([slot=header]) {\n        position: absolute;\n      }\n\n      :host([has-scrolling-region]) #wrapper.initializing ::slotted([slot=header]) {\n        position: relative;\n      }\n\n      :host([has-scrolling-region]) #wrapper #contentContainer {\n        @apply --layout-fit;\n        overflow-y: auto;\n        -webkit-overflow-scrolling: touch;\n      }\n\n      :host([has-scrolling-region]) #wrapper.initializing #contentContainer {\n        position: relative;\n      }\n\n      :host([fullbleed]) {\n        @apply --layout-vertical;\n        @apply --layout-fit;\n      }\n\n      :host([fullbleed]) #wrapper,\n      :host([fullbleed]) #wrapper #contentContainer {\n        @apply --layout-vertical;\n        @apply --layout-flex;\n      }\n\n      #contentContainer {\n        /* Create a stacking context here so that all children appear below the header. */\n        position: relative;\n        z-index: 0;\n      }\n\n      @media print {\n        :host([has-scrolling-region]) #wrapper #contentContainer {\n          overflow-y: visible;\n        }\n      }\n\n    </style>\n\n    <div id=\"wrapper\" class=\"initializing\">\n      <slot id=\"headerSlot\" name=\"header\"></slot>\n\n      <div id=\"contentContainer\">\n        <slot></slot>\n      </div>\n    </div>\n`,\n\n  is: 'app-header-layout',\n  behaviors: [AppLayoutBehavior],\n\n  properties: {\n    /**\n     * If true, the current element will have its own scrolling region.\n     * Otherwise, it will use the document scroll to control the header.\n     */\n    hasScrollingRegion: {type: Boolean, value: false, reflectToAttribute: true}\n  },\n\n  observers: ['resetLayout(isAttached, hasScrollingRegion)'],\n\n  /**\n   * A reference to the app-header element.\n   *\n   * @property header\n   */\n  get header() {\n    return dom(this.$.headerSlot).getDistributedNodes()[0];\n  },\n\n  _updateLayoutStates: function() {\n    var header = this.header;\n    if (!this.isAttached || !header) {\n      return;\n    }\n    // Remove the initializing class, which staticly positions the header and\n    // the content until the height of the header can be read.\n    this.$.wrapper.classList.remove('initializing');\n    // Update scroll target.\n    header.scrollTarget = this.hasScrollingRegion ?\n        this.$.contentContainer :\n        this.ownerDocument.documentElement;\n    // Get header height here so that style reads are batched together before\n    // style writes (i.e. getBoundingClientRect() below).\n    var headerHeight = header.offsetHeight;\n    // Update the header position.\n    if (!this.hasScrollingRegion) {\n      requestAnimationFrame(function() {\n        var rect = this.getBoundingClientRect();\n        var rightOffset = document.documentElement.clientWidth - rect.right;\n        header.style.left = rect.left + 'px';\n        header.style.right = rightOffset + 'px';\n      }.bind(this));\n    } else {\n      header.style.left = '';\n      header.style.right = '';\n    }\n    // Update the content container position.\n    var containerStyle = this.$.contentContainer.style;\n    if (header.fixed && !header.condenses && this.hasScrollingRegion) {\n      // If the header size does not change and we're using a scrolling region,\n      // exclude the header area from the scrolling region so that the header\n      // doesn't overlap the scrollbar.\n      containerStyle.marginTop = headerHeight + 'px';\n      containerStyle.paddingTop = '';\n    } else {\n      containerStyle.paddingTop = headerHeight + 'px';\n      containerStyle.marginTop = '';\n    }\n  }\n});\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\n\nimport {IronControlState} from '@polymer/iron-behaviors/iron-control-state.js';\nimport {IronValidatableBehavior} from '@polymer/iron-validatable-behavior/iron-validatable-behavior.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\n/**\n`iron-autogrow-textarea` is an element containing a textarea that grows in\nheight as more lines of input are entered. Unless an explicit height or the\n`maxRows` property is set, it will never scroll.\n\nExample:\n\n    <iron-autogrow-textarea></iron-autogrow-textarea>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--iron-autogrow-textarea` | Mixin applied to the textarea | `{}`\n`--iron-autogrow-textarea-placeholder` | Mixin applied to the textarea placeholder | `{}`\n\n@group Iron Elements\n@hero hero.svg\n@demo demo/index.html\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        display: inline-block;\n        position: relative;\n        width: 400px;\n        border: 1px solid;\n        padding: 2px;\n        -moz-appearance: textarea;\n        -webkit-appearance: textarea;\n        overflow: hidden;\n      }\n\n      .mirror-text {\n        visibility: hidden;\n        word-wrap: break-word;\n        @apply --iron-autogrow-textarea;\n      }\n\n      .fit {\n        @apply --layout-fit;\n      }\n\n      textarea {\n        position: relative;\n        outline: none;\n        border: none;\n        resize: none;\n        background: inherit;\n        color: inherit;\n        /* see comments in template */\n        width: 100%;\n        height: 100%;\n        font-size: inherit;\n        font-family: inherit;\n        line-height: inherit;\n        text-align: inherit;\n        @apply --iron-autogrow-textarea;\n      }\n\n      textarea::-webkit-input-placeholder {\n        @apply --iron-autogrow-textarea-placeholder;\n      }\n\n      textarea:-moz-placeholder {\n        @apply --iron-autogrow-textarea-placeholder;\n      }\n\n      textarea::-moz-placeholder {\n        @apply --iron-autogrow-textarea-placeholder;\n      }\n\n      textarea:-ms-input-placeholder {\n        @apply --iron-autogrow-textarea-placeholder;\n      }\n    </style>\n\n    <!-- the mirror sizes the input/textarea so it grows with typing -->\n    <!-- use &#160; instead &nbsp; of to allow this element to be used in XHTML -->\n    <div id=\"mirror\" class=\"mirror-text\" aria-hidden=\"true\">&nbsp;</div>\n\n    <!-- size the input/textarea with a div, because the textarea has intrinsic size in ff -->\n    <div class=\"textarea-container fit\">\n      <textarea id=\"textarea\" name\\$=\"[[name]]\" aria-label\\$=\"[[label]]\" autocomplete\\$=\"[[autocomplete]]\" autofocus\\$=\"[[autofocus]]\" inputmode\\$=\"[[inputmode]]\" placeholder\\$=\"[[placeholder]]\" readonly\\$=\"[[readonly]]\" required\\$=\"[[required]]\" disabled\\$=\"[[disabled]]\" rows\\$=\"[[rows]]\" minlength\\$=\"[[minlength]]\" maxlength\\$=\"[[maxlength]]\"></textarea>\n    </div>\n`,\n\n  is: 'iron-autogrow-textarea',\n  behaviors: [IronValidatableBehavior, IronControlState],\n\n  properties: {\n    /**\n     * Use this property instead of `bind-value` for two-way data binding.\n     * @type {string|number}\n     */\n    value: {observer: '_valueChanged', type: String, notify: true},\n\n    /**\n     * This property is deprecated, and just mirrors `value`. Use `value`\n     * instead.\n     * @type {string|number}\n     */\n    bindValue: {observer: '_bindValueChanged', type: String, notify: true},\n\n    /**\n     * The initial number of rows.\n     *\n     * @attribute rows\n     * @type number\n     * @default 1\n     */\n    rows: {type: Number, value: 1, observer: '_updateCached'},\n\n    /**\n     * The maximum number of rows this element can grow to until it\n     * scrolls. 0 means no maximum.\n     *\n     * @attribute maxRows\n     * @type number\n     * @default 0\n     */\n    maxRows: {type: Number, value: 0, observer: '_updateCached'},\n\n    /**\n     * Bound to the textarea's `autocomplete` attribute.\n     */\n    autocomplete: {type: String, value: 'off'},\n\n    /**\n     * Bound to the textarea's `autofocus` attribute.\n     */\n    autofocus: {type: Boolean, value: false},\n\n    /**\n     * Bound to the textarea's `inputmode` attribute.\n     */\n    inputmode: {type: String},\n\n    /**\n     * Bound to the textarea's `placeholder` attribute.\n     */\n    placeholder: {type: String},\n\n    /**\n     * Bound to the textarea's `readonly` attribute.\n     */\n    readonly: {type: String},\n\n    /**\n     * Set to true to mark the textarea as required.\n     */\n    required: {type: Boolean},\n\n    /**\n     * The minimum length of the input value.\n     */\n    minlength: {type: Number},\n\n    /**\n     * The maximum length of the input value.\n     */\n    maxlength: {type: Number},\n\n    /**\n     * Bound to the textarea's `aria-label` attribute.\n     */\n    label: {type: String}\n\n  },\n\n  listeners: {'input': '_onInput'},\n\n  /**\n   * Returns the underlying textarea.\n   * @return {!HTMLTextAreaElement}\n   */\n  get textarea() {\n    return this.$.textarea;\n  },\n\n  /**\n   * Returns textarea's selection start.\n   * @return {number}\n   */\n  get selectionStart() {\n    return this.$.textarea.selectionStart;\n  },\n\n  /**\n   * Returns textarea's selection end.\n   * @return {number}\n   */\n  get selectionEnd() {\n    return this.$.textarea.selectionEnd;\n  },\n\n  /**\n   * Sets the textarea's selection start.\n   */\n  set selectionStart(value) {\n    this.$.textarea.selectionStart = value;\n  },\n\n  /**\n   * Sets the textarea's selection end.\n   */\n  set selectionEnd(value) {\n    this.$.textarea.selectionEnd = value;\n  },\n\n  attached: function() {\n    /* iOS has an arbitrary left margin of 3px that isn't present\n     * in any other browser, and means that the paper-textarea's cursor\n     * overlaps the label.\n     * See https://github.com/PolymerElements/paper-input/issues/468.\n     */\n    var IS_IOS = navigator.userAgent.match(/iP(?:[oa]d|hone)/);\n    if (IS_IOS) {\n      this.$.textarea.style.marginLeft = '-3px';\n    }\n  },\n\n  /**\n   * Returns true if `value` is valid. The validator provided in `validator`\n   * will be used first, if it exists; otherwise, the `textarea`'s validity\n   * is used.\n   * @return {boolean} True if the value is valid.\n   */\n  validate: function() {\n    // Use the nested input's native validity.\n    var valid = this.$.textarea.validity.valid;\n\n    // Only do extra checking if the browser thought this was valid.\n    if (valid) {\n      // Empty, required input is invalid\n      if (this.required && this.value === '') {\n        valid = false;\n      } else if (this.hasValidator()) {\n        valid = IronValidatableBehavior.validate.call(this, this.value);\n      }\n    }\n\n    this.invalid = !valid;\n    this.fire('iron-input-validate');\n    return valid;\n  },\n\n  _bindValueChanged: function(bindValue) {\n    this.value = bindValue;\n  },\n\n  _valueChanged: function(value) {\n    var textarea = this.textarea;\n    if (!textarea) {\n      return;\n    }\n\n    // If the bindValue changed manually, then we need to also update\n    // the underlying textarea's value. Otherwise this change was probably\n    // generated from the _onInput handler, and the two values are already\n    // the same.\n    if (textarea.value !== value) {\n      textarea.value = !(value || value === 0) ? '' : value;\n    }\n\n    this.bindValue = value;\n    this.$.mirror.innerHTML = this._valueForMirror();\n\n    // Manually notify because we don't want to notify until after setting\n    // value.\n    this.fire('bind-value-changed', {value: this.bindValue});\n  },\n\n  _onInput: function(event) {\n    var eventPath = dom(event).path;\n    this.value = eventPath ? eventPath[0].value : event.target.value;\n  },\n\n  _constrain: function(tokens) {\n    var _tokens;\n    tokens = tokens || [''];\n    // Enforce the min and max heights for a multiline input to avoid\n    // measurement\n    if (this.maxRows > 0 && tokens.length > this.maxRows) {\n      _tokens = tokens.slice(0, this.maxRows);\n    } else {\n      _tokens = tokens.slice(0);\n    }\n    while (this.rows > 0 && _tokens.length < this.rows) {\n      _tokens.push('');\n    }\n    // Use &#160; instead &nbsp; of to allow this element to be used in XHTML.\n    return _tokens.join('<br/>') + '&#160;';\n  },\n\n  _valueForMirror: function() {\n    var input = this.textarea;\n    if (!input) {\n      return;\n    }\n    this.tokens = (input && input.value) ? input.value.replace(/&/gm, '&amp;')\n                                               .replace(/\"/gm, '&quot;')\n                                               .replace(/'/gm, '&#39;')\n                                               .replace(/</gm, '&lt;')\n                                               .replace(/>/gm, '&gt;')\n                                               .split('\\n') :\n                                           [''];\n    return this._constrain(this.tokens);\n  },\n\n  _updateCached: function() {\n    this.$.mirror.innerHTML = this._constrain(this.tokens);\n  }\n});\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-autogrow-textarea/iron-autogrow-textarea.js';\nimport './paper-input-char-counter.js';\nimport './paper-input-container.js';\nimport './paper-input-error.js';\n\nimport {IronFormElementBehavior} from '@polymer/iron-form-element-behavior/iron-form-element-behavior.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\nimport {PaperInputBehavior} from './paper-input-behavior.js';\n\n/*\n`<paper-textarea>` is a multi-line text field with Material Design styling.\n\n    <paper-textarea label=\"Textarea label\"></paper-textarea>\n\nSee `Polymer.PaperInputBehavior` for more API docs.\n\n### Validation\n\nCurrently only `required` and `maxlength` validation is supported.\n\n### Styling\n\nSee `Polymer.PaperInputContainer` for a list of custom properties used to\nstyle this element.\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        display: block;\n      }\n\n      :host([hidden]) {\n        display: none !important;\n      }\n\n      label {\n        pointer-events: none;\n      }\n    </style>\n\n    <paper-input-container no-label-float$=\"[[noLabelFloat]]\" always-float-label=\"[[_computeAlwaysFloatLabel(alwaysFloatLabel,placeholder)]]\" auto-validate$=\"[[autoValidate]]\" disabled$=\"[[disabled]]\" invalid=\"[[invalid]]\">\n\n      <label hidden$=\"[[!label]]\" aria-hidden=\"true\" for$=\"[[_inputId]]\" slot=\"label\">[[label]]</label>\n\n      <iron-autogrow-textarea class=\"paper-input-input\" slot=\"input\" id$=\"[[_inputId]]\" aria-labelledby$=\"[[_ariaLabelledBy]]\" aria-describedby$=\"[[_ariaDescribedBy]]\" bind-value=\"{{value}}\" invalid=\"{{invalid}}\" validator$=\"[[validator]]\" disabled$=\"[[disabled]]\" autocomplete$=\"[[autocomplete]]\" autofocus$=\"[[autofocus]]\" inputmode$=\"[[inputmode]]\" name$=\"[[name]]\" placeholder$=\"[[placeholder]]\" readonly$=\"[[readonly]]\" required$=\"[[required]]\" minlength$=\"[[minlength]]\" maxlength$=\"[[maxlength]]\" autocapitalize$=\"[[autocapitalize]]\" rows$=\"[[rows]]\" max-rows$=\"[[maxRows]]\" on-change=\"_onChange\"></iron-autogrow-textarea>\n\n      <template is=\"dom-if\" if=\"[[errorMessage]]\">\n        <paper-input-error aria-live=\"assertive\" slot=\"add-on\">[[errorMessage]]</paper-input-error>\n      </template>\n\n      <template is=\"dom-if\" if=\"[[charCounter]]\">\n        <paper-input-char-counter slot=\"add-on\"></paper-input-char-counter>\n      </template>\n\n    </paper-input-container>\n`,\n\n  is: 'paper-textarea',\n\n  behaviors: [\n    PaperInputBehavior,\n    IronFormElementBehavior,\n  ],\n\n  properties: {\n    _ariaLabelledBy: {\n      observer: '_ariaLabelledByChanged',\n      type: String,\n    },\n\n    _ariaDescribedBy: {\n      observer: '_ariaDescribedByChanged',\n      type: String,\n    },\n\n    value: {\n      // Required for the correct TypeScript type-generation\n      type: String,\n    },\n\n    /**\n     * The initial number of rows.\n     *\n     * @attribute rows\n     * @type {number}\n     * @default 1\n     */\n    rows: {\n      type: Number,\n      value: 1,\n    },\n\n    /**\n     * The maximum number of rows this element can grow to until it\n     * scrolls. 0 means no maximum.\n     *\n     * @attribute maxRows\n     * @type {number}\n     * @default 0\n     */\n    maxRows: {\n      type: Number,\n      value: 0,\n    },\n  },\n\n  /**\n   * @return {number}\n   */\n  get selectionStart() {\n    return this.$.input.textarea.selectionStart;\n  },\n\n  set selectionStart(start) {\n    this.$.input.textarea.selectionStart = start;\n  },\n\n  /**\n   * @return {number}\n   */\n  get selectionEnd() {\n    return this.$.input.textarea.selectionEnd;\n  },\n\n  set selectionEnd(end) {\n    this.$.input.textarea.selectionEnd = end;\n  },\n\n  _ariaLabelledByChanged: function(ariaLabelledBy) {\n    this._focusableElement.setAttribute('aria-labelledby', ariaLabelledBy);\n  },\n\n  _ariaDescribedByChanged: function(ariaDescribedBy) {\n    this._focusableElement.setAttribute('aria-describedby', ariaDescribedBy);\n  },\n\n  get _focusableElement() {\n    return this.inputElement.textarea;\n  }\n});\n","import \"@polymer/app-layout/app-header-layout/app-header-layout\";\nimport \"@polymer/app-layout/app-header/app-header\";\nimport \"@polymer/app-layout/app-toolbar/app-toolbar\";\nimport \"@polymer/paper-input/paper-textarea\";\nimport \"@polymer/paper-spinner/paper-spinner\";\nimport { timeOut } from \"@polymer/polymer/lib/utils/async\";\nimport { Debouncer } from \"@polymer/polymer/lib/utils/debounce\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../../components/ha-menu-button\";\nimport \"../../resources/ha-style\";\n\nclass HaPanelDevTemplate extends PolymerElement {\n  static get template() {\n    return html`\n      <style include=\"ha-style iron-flex iron-positioning\"></style>\n      <style>\n        :host {\n          -ms-user-select: initial;\n          -webkit-user-select: initial;\n          -moz-user-select: initial;\n        }\n\n        .content {\n          padding: 16px;\n          direction: ltr;\n        }\n\n        .edit-pane {\n          margin-right: 16px;\n        }\n\n        .edit-pane a {\n          color: var(--dark-primary-color);\n        }\n\n        .horizontal .edit-pane {\n          max-width: 50%;\n        }\n\n        .render-pane {\n          position: relative;\n          max-width: 50%;\n        }\n\n        .render-spinner {\n          position: absolute;\n          top: 8px;\n          right: 8px;\n        }\n\n        paper-textarea {\n          --paper-input-container-input: {\n            @apply --paper-font-code1;\n          }\n        }\n\n        .rendered {\n          @apply --paper-font-code1;\n          clear: both;\n          white-space: pre-wrap;\n        }\n\n        .rendered.error {\n          color: red;\n        }\n      </style>\n\n      <app-header-layout has-scrolling-region>\n        <app-header slot=\"header\" fixed>\n          <app-toolbar>\n            <ha-menu-button></ha-menu-button>\n            <div main-title>Templates</div>\n          </app-toolbar>\n        </app-header>\n\n        <div class$=\"[[computeFormClasses(narrow)]]\">\n          <div class=\"edit-pane\">\n            <p>\n              Templates are rendered using the Jinja2 template engine with some\n              Home Assistant specific extensions.\n            </p>\n            <ul>\n              <li>\n                <a\n                  href=\"http://jinja.pocoo.org/docs/dev/templates/\"\n                  target=\"_blank\"\n                  >Jinja2 template documentation</a\n                >\n              </li>\n              <li>\n                <a\n                  href=\"https://home-assistant.io/docs/configuration/templating/\"\n                  target=\"_blank\"\n                  >Home Assistant template extensions</a\n                >\n              </li>\n            </ul>\n            <paper-textarea\n              label=\"Template editor\"\n              value=\"{{template}}\"\n              autofocus\n            ></paper-textarea>\n          </div>\n\n          <div class=\"render-pane\">\n            <paper-spinner\n              class=\"render-spinner\"\n              active=\"[[rendering]]\"\n            ></paper-spinner>\n            <pre class$=\"[[computeRenderedClasses(error)]]\">[[processed]]</pre>\n          </div>\n        </div>\n      </app-header-layout>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n      },\n\n      error: {\n        type: Boolean,\n        value: false,\n      },\n\n      rendering: {\n        type: Boolean,\n        value: false,\n      },\n\n      template: {\n        type: String,\n        /* eslint-disable max-len */\n        value: `Imitate available variables:\n{% set my_test_json = {\n  \"temperature\": 25,\n  \"unit\": \"°C\"\n} %}\n\nThe temperature is {{ my_test_json.temperature }} {{ my_test_json.unit }}.\n\n{% if is_state(\"device_tracker.paulus\", \"home\") and\n      is_state(\"device_tracker.anne_therese\", \"home\") -%}\n  You are both home, you silly\n{%- else -%}\n  Anne Therese is at {{ states(\"device_tracker.anne_therese\") }}\n  Paulus is at {{ states(\"device_tracker.paulus\") }}\n{%- endif %}\n\nFor loop example:\n{% for state in states.sensor -%}\n  {%- if loop.first %}The {% elif loop.last %} and the {% else %}, the {% endif -%}\n  {{ state.name | lower }} is {{state.state_with_unit}}\n{%- endfor %}.`,\n        /* eslint-enable max-len */\n        observer: \"templateChanged\",\n      },\n\n      processed: {\n        type: String,\n        value: \"\",\n      },\n    };\n  }\n\n  computeFormClasses(narrow) {\n    return narrow ? \"content fit\" : \"content fit layout horizontal\";\n  }\n\n  computeRenderedClasses(error) {\n    return error ? \"error rendered\" : \"rendered\";\n  }\n\n  templateChanged() {\n    if (this.error) {\n      this.error = false;\n    }\n    this._debouncer = Debouncer.debounce(\n      this._debouncer,\n      timeOut.after(500),\n      () => {\n        this.renderTemplate();\n      }\n    );\n  }\n\n  renderTemplate() {\n    this.rendering = true;\n\n    this.hass.callApi(\"POST\", \"template\", { template: this.template }).then(\n      function(processed) {\n        this.processed = processed;\n        this.rendering = false;\n      }.bind(this),\n      function(error) {\n        this.processed =\n          (error && error.body && error.body.message) ||\n          \"Unknown error rendering template\";\n        this.error = true;\n        this.rendering = false;\n      }.bind(this)\n    );\n  }\n}\n\ncustomElements.define(\"ha-panel-dev-template\", HaPanelDevTemplate);\n"],"sourceRoot":""}