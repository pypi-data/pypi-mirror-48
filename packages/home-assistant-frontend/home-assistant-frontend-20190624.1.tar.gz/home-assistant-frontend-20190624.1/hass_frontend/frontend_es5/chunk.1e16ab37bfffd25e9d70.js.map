{"version":3,"sources":["webpack:///./node_modules/@polymer/paper-item/paper-item-behavior.js","webpack:///./node_modules/@polymer/paper-item/paper-item.js","webpack:///./node_modules/@polymer/paper-listbox/paper-listbox.js","webpack:///./node_modules/@polymer/paper-item/paper-item-shared-styles.js","webpack:///./src/components/ha-icon.ts","webpack:///./node_modules/@polymer/paper-item/paper-icon-item.js","webpack:///./src/common/config/is_component_loaded.ts","webpack:///./src/components/user/ha-user-badge.ts","webpack:///./src/components/ha-sidebar.ts","webpack:///./src/external_app/external_config.ts"],"names":["__webpack_require__","d","__webpack_exports__","PaperItemBehavior","_polymer_iron_behaviors_iron_button_state_js__WEBPACK_IMPORTED_MODULE_1__","_polymer_iron_behaviors_iron_control_state_js__WEBPACK_IMPORTED_MODULE_2__","IronButtonState","IronControlState","hostAttributes","role","tabindex","Polymer","_template","html","_templateObject","is","behaviors","IronMenuBehavior","$_documentContainer","document","createElement","setAttribute","innerHTML","head","appendChild","content","ironIconClass","customElements","get","loaded","HaIcon","_ironIconClass","_getPrototypeOf2","_this","_classCallCheck","this","_len","arguments","length","args","Array","_key","_possibleConstructorReturn","_getPrototypeOf","call","apply","concat","_iconsetName","_inherits","key","value","node","eventName","methodName","_get","prototype","e","then","bind","define","isComponentLoaded","hass","component","config","components","indexOf","customElement","property","name","user","initials","trim","split","slice","map","s","substr","join","classMap","profile-badge","long","css","_templateObject2","LitElement","computeUrl","urlPath","HaSidebar","localStorage","defaultPage","DEFAULT_PANEL","ha_sidebar_templateObject2","_templateObject3","panelUrl","_defaultPage","localize","panels","sortValue","logbook","history","result","Object","values","filter","panel","title","sort","a","b","aBuiltIn","component_name","bBuiltIn","computePanels","_templateObject4","url_path","icon","_externalConfig","hasSettingsScreen","_templateObject5","_handleExternalAppConfiguration","_templateObject7","_templateObject6","_handleLogOut","is_admin","_templateObject8","_templateObject9","_templateObject10","ha_sidebar_templateObject","changedProps","has","oldHass","bus","_this2","ha_sidebar_getPrototypeOf","auth","external","cache","cfg","sendMessage","type","conf","fireEvent","ev","preventDefault","fireMessage","_templateObject11"],"mappings":"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","file":"chunk.1e16ab37bfffd25e9d70.js","sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {IronButtonState} from '@polymer/iron-behaviors/iron-button-state.js';\nimport {IronControlState} from '@polymer/iron-behaviors/iron-control-state.js';\n\n/*\n`PaperItemBehavior` is a convenience behavior shared by <paper-item> and\n<paper-icon-item> that manages the shared control states and attributes of\nthe items.\n*/\n/** @polymerBehavior PaperItemBehavior */\nexport const PaperItemBehaviorImpl = {\n  hostAttributes: {role: 'option', tabindex: '0'}\n};\n\n/** @polymerBehavior */\nexport const PaperItemBehavior =\n    [IronButtonState, IronControlState, PaperItemBehaviorImpl];\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport './paper-item-shared-styles.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\nimport {PaperItemBehavior} from './paper-item-behavior.js';\n\n/**\nMaterial design:\n[Lists](https://www.google.com/design/spec/components/lists.html)\n\n`<paper-item>` is an interactive list item. By default, it is a horizontal\nflexbox.\n\n    <paper-item>Item</paper-item>\n\nUse this element with `<paper-item-body>` to make Material Design styled\ntwo-line and three-line items.\n\n    <paper-item>\n      <paper-item-body two-line>\n        <div>Show your status</div>\n        <div secondary>Your status is visible to everyone</div>\n      </paper-item-body>\n      <iron-icon icon=\"warning\"></iron-icon>\n    </paper-item>\n\nTo use `paper-item` as a link, wrap it in an anchor tag. Since `paper-item` will\nalready receive focus, you may want to prevent the anchor tag from receiving\nfocus as well by setting its tabindex to -1.\n\n    <a href=\"https://www.polymer-project.org/\" tabindex=\"-1\">\n      <paper-item raised>Polymer Project</paper-item>\n    </a>\n\nIf you are concerned about performance and want to use `paper-item` in a\n`paper-listbox` with many items, you can just use a native `button` with the\n`paper-item` class applied (provided you have correctly included the shared\nstyles):\n\n    <style is=\"custom-style\" include=\"paper-item-shared-styles\"></style>\n\n    <paper-listbox>\n      <button class=\"paper-item\" role=\"option\">Inbox</button>\n      <button class=\"paper-item\" role=\"option\">Starred</button>\n      <button class=\"paper-item\" role=\"option\">Sent mail</button>\n    </paper-listbox>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-item-min-height` | Minimum height of the item | `48px`\n`--paper-item` | Mixin applied to the item | `{}`\n`--paper-item-selected-weight` | The font weight of a selected item | `bold`\n`--paper-item-selected` | Mixin applied to selected paper-items | `{}`\n`--paper-item-disabled-color` | The color for disabled paper-items | `--disabled-text-color`\n`--paper-item-disabled` | Mixin applied to disabled paper-items | `{}`\n`--paper-item-focused` | Mixin applied to focused paper-items | `{}`\n`--paper-item-focused-before` | Mixin applied to :before focused paper-items | `{}`\n\n### Accessibility\n\nThis element has `role=\"listitem\"` by default. Depending on usage, it may be\nmore appropriate to set `role=\"menuitem\"`, `role=\"menuitemcheckbox\"` or\n`role=\"menuitemradio\"`.\n\n    <paper-item role=\"menuitemcheckbox\">\n      <paper-item-body>\n        Show your status\n      </paper-item-body>\n      <paper-checkbox></paper-checkbox>\n    </paper-item>\n\n@group Paper Elements\n@element paper-item\n@demo demo/index.html\n*/\nPolymer({\n  _template: html`\n    <style include=\"paper-item-shared-styles\">\n      :host {\n        @apply --layout-horizontal;\n        @apply --layout-center;\n        @apply --paper-font-subhead;\n\n        @apply --paper-item;\n      }\n    </style>\n    <slot></slot>\n`,\n\n  is: 'paper-item',\n  behaviors: [PaperItemBehavior]\n});\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/paper-styles/default-theme.js';\n\nimport {IronMenuBehavior} from '@polymer/iron-menu-behavior/iron-menu-behavior.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\n/**\nMaterial design:\n[Menus](https://www.google.com/design/spec/components/menus.html)\n\n`<paper-listbox>` implements an accessible listbox control with Material Design\nstyling. The focused item is highlighted, and the selected item has bolded text.\n\n    <paper-listbox>\n      <paper-item>Item 1</paper-item>\n      <paper-item>Item 2</paper-item>\n    </paper-listbox>\n\nAn initial selection can be specified with the `selected` attribute.\n\n    <paper-listbox selected=\"0\">\n      <paper-item>Item 1</paper-item>\n      <paper-item>Item 2</paper-item>\n    </paper-listbox>\n\nMake a multi-select listbox with the `multi` attribute. Items in a multi-select\nlistbox can be deselected, and multiple item can be selected.\n\n    <paper-listbox multi>\n      <paper-item>Item 1</paper-item>\n      <paper-item>Item 2</paper-item>\n    </paper-listbox>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-listbox-background-color`   | Menu background color |\n`--primary-background-color`\n`--paper-listbox-color`              | Menu foreground color |\n`--primary-text-color`\n`--paper-listbox`                    | Mixin applied to the listbox | `{}`\n\n### Accessibility\n\n`<paper-listbox>` has `role=\"listbox\"` by default. A multi-select listbox will\nalso have `aria-multiselectable` set. It implements key bindings to navigate\nthrough the listbox with the up and down arrow keys, esc to exit the listbox,\nand enter to activate a listbox item. Typing the first letter of a listbox item\nwill also focus it.\n\n@group Paper Elements\n@element paper-listbox\n@demo demo/index.html\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        display: block;\n        padding: 8px 0;\n\n        background: var(--paper-listbox-background-color, var(--primary-background-color));\n        color: var(--paper-listbox-color, var(--primary-text-color));\n\n        @apply --paper-listbox;\n      }\n    </style>\n\n    <slot></slot>\n`,\n\n  is: 'paper-listbox',\n  behaviors: [IronMenuBehavior],\n\n  /** @private */\n  hostAttributes: {role: 'listbox'}\n});\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/color.js';\nimport '@polymer/paper-styles/default-theme.js';\nimport '@polymer/paper-styles/typography.js';\nconst $_documentContainer = document.createElement('template');\n$_documentContainer.setAttribute('style', 'display: none;');\n\n$_documentContainer.innerHTML = `<dom-module id=\"paper-item-shared-styles\">\n  <template>\n    <style>\n      :host, .paper-item {\n        display: block;\n        position: relative;\n        min-height: var(--paper-item-min-height, 48px);\n        padding: 0px 16px;\n      }\n\n      .paper-item {\n        @apply --paper-font-subhead;\n        border:none;\n        outline: none;\n        background: white;\n        width: 100%;\n        text-align: left;\n      }\n\n      :host([hidden]), .paper-item[hidden] {\n        display: none !important;\n      }\n\n      :host(.iron-selected), .paper-item.iron-selected {\n        font-weight: var(--paper-item-selected-weight, bold);\n\n        @apply --paper-item-selected;\n      }\n\n      :host([disabled]), .paper-item[disabled] {\n        color: var(--paper-item-disabled-color, var(--disabled-text-color));\n\n        @apply --paper-item-disabled;\n      }\n\n      :host(:focus), .paper-item:focus {\n        position: relative;\n        outline: 0;\n\n        @apply --paper-item-focused;\n      }\n\n      :host(:focus):before, .paper-item:focus:before {\n        @apply --layout-fit;\n\n        background: currentColor;\n        content: '';\n        opacity: var(--dark-divider-opacity);\n        pointer-events: none;\n\n        @apply --paper-item-focused-before;\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n","import { Constructor } from \"lit-element\";\nimport \"@polymer/iron-icon/iron-icon\";\n// Not duplicate, this is for typing.\n// tslint:disable-next-line\nimport { IronIconElement } from \"@polymer/iron-icon/iron-icon\";\n\nconst ironIconClass = customElements.get(\"iron-icon\") as Constructor<\n  IronIconElement\n>;\n\nlet loaded = false;\n\nexport class HaIcon extends ironIconClass {\n  private _iconsetName?: string;\n\n  public listen(\n    node: EventTarget | null,\n    eventName: string,\n    methodName: string\n  ): void {\n    super.listen(node, eventName, methodName);\n\n    if (!loaded && this._iconsetName === \"mdi\") {\n      loaded = true;\n      import(/* webpackChunkName: \"mdi-icons\" */ \"../resources/mdi-icons\");\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon\": HaIcon;\n  }\n}\n\ncustomElements.define(\"ha-icon\", HaIcon);\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/typography.js';\nimport './paper-item-shared-styles.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\nimport {PaperItemBehavior} from './paper-item-behavior.js';\n\n/*\n`<paper-icon-item>` is a convenience element to make an item with icon. It is an\ninteractive list item with a fixed-width icon area, according to Material\nDesign. This is useful if the icons are of varying widths, but you want the item\nbodies to line up. Use this like a `<paper-item>`. The child node with the slot\nname `item-icon` is placed in the icon area.\n\n    <paper-icon-item>\n      <iron-icon icon=\"favorite\" slot=\"item-icon\"></iron-icon>\n      Favorite\n    </paper-icon-item>\n    <paper-icon-item>\n      <div class=\"avatar\" slot=\"item-icon\"></div>\n      Avatar\n    </paper-icon-item>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-item-icon-width` | Width of the icon area | `56px`\n`--paper-item-icon` | Mixin applied to the icon area | `{}`\n`--paper-icon-item` | Mixin applied to the item | `{}`\n`--paper-item-selected-weight` | The font weight of a selected item | `bold`\n`--paper-item-selected` | Mixin applied to selected paper-items | `{}`\n`--paper-item-disabled-color` | The color for disabled paper-items | `--disabled-text-color`\n`--paper-item-disabled` | Mixin applied to disabled paper-items | `{}`\n`--paper-item-focused` | Mixin applied to focused paper-items | `{}`\n`--paper-item-focused-before` | Mixin applied to :before focused paper-items | `{}`\n\n*/\nPolymer({\n  _template: html`\n    <style include=\"paper-item-shared-styles\"></style>\n    <style>\n      :host {\n        @apply --layout-horizontal;\n        @apply --layout-center;\n        @apply --paper-font-subhead;\n\n        @apply --paper-item;\n        @apply --paper-icon-item;\n      }\n\n      .content-icon {\n        @apply --layout-horizontal;\n        @apply --layout-center;\n\n        width: var(--paper-item-icon-width, 56px);\n        @apply --paper-item-icon;\n      }\n    </style>\n\n    <div id=\"contentIcon\" class=\"content-icon\">\n      <slot name=\"item-icon\"></slot>\n    </div>\n    <slot></slot>\n`,\n\n  is: 'paper-icon-item',\n  behaviors: [PaperItemBehavior]\n});\n","import { HomeAssistant } from \"../../types\";\n\n/** Return if a component is loaded. */\nexport default function isComponentLoaded(\n  hass: HomeAssistant,\n  component: string\n): boolean {\n  return hass && hass.config.components.indexOf(component) !== -1;\n}\n","import {\n  LitElement,\n  TemplateResult,\n  css,\n  CSSResult,\n  html,\n  property,\n  customElement,\n} from \"lit-element\";\nimport { classMap } from \"lit-html/directives/class-map\";\nimport { User } from \"../../data/user\";\nimport { CurrentUser } from \"../../types\";\n\nconst computeInitials = (name: string) => {\n  if (!name) {\n    return \"user\";\n  }\n  return (\n    name\n      .trim()\n      // Split by space and take first 3 words\n      .split(\" \")\n      .slice(0, 3)\n      // Of each word, take first letter\n      .map((s) => s.substr(0, 1))\n      .join(\"\")\n  );\n};\n\n@customElement(\"ha-user-badge\")\nclass StateBadge extends LitElement {\n  @property() public user?: User | CurrentUser;\n\n  protected render(): TemplateResult | void {\n    const user = this.user;\n\n    const initials = user ? computeInitials(user.name) : \"?\";\n\n    return html`\n      <div\n        class=\"${classMap({\n          \"profile-badge\": true,\n          long: initials.length > 2,\n        })}\"\n      >\n        ${initials}\n      </div>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .profile-badge {\n        display: inline-block;\n        box-sizing: border-box;\n        width: 40px;\n        line-height: 40px;\n        border-radius: 50%;\n        text-align: center;\n        background-color: var(--light-primary-color);\n        text-decoration: none;\n        color: var(--primary-text-color);\n        overflow: hidden;\n      }\n\n      .profile-badge.long {\n        font-size: 80%;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-user-badge\": StateBadge;\n  }\n}\n","import {\n  LitElement,\n  html,\n  CSSResult,\n  css,\n  PropertyValues,\n  property,\n} from \"lit-element\";\nimport \"@polymer/app-layout/app-toolbar/app-toolbar\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@polymer/paper-item/paper-icon-item\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-listbox/paper-listbox\";\nimport \"./ha-icon\";\n\nimport \"../components/user/ha-user-badge\";\nimport isComponentLoaded from \"../common/config/is_component_loaded\";\nimport { HomeAssistant, PanelInfo } from \"../types\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { DEFAULT_PANEL } from \"../common/const\";\nimport {\n  getExternalConfig,\n  ExternalConfig,\n} from \"../external_app/external_config\";\n\nconst computeUrl = (urlPath) => `/${urlPath}`;\n\nconst computePanels = (hass: HomeAssistant) => {\n  const panels = hass.panels;\n  if (!panels) {\n    return [];\n  }\n\n  const sortValue = {\n    map: 1,\n    logbook: 2,\n    history: 3,\n  };\n  const result: PanelInfo[] = Object.values(panels).filter(\n    (panel) => panel.title\n  );\n\n  result.sort((a, b) => {\n    const aBuiltIn = a.component_name in sortValue;\n    const bBuiltIn = b.component_name in sortValue;\n\n    if (aBuiltIn && bBuiltIn) {\n      return sortValue[a.component_name] - sortValue[b.component_name];\n    }\n    if (aBuiltIn) {\n      return -1;\n    }\n    if (bBuiltIn) {\n      return 1;\n    }\n    // both not built in, sort by title\n    if (a.title! < b.title!) {\n      return -1;\n    }\n    if (a.title! > b.title!) {\n      return 1;\n    }\n    return 0;\n  });\n\n  return result;\n};\n\n/*\n * @appliesMixin LocalizeMixin\n */\nclass HaSidebar extends LitElement {\n  @property() public hass?: HomeAssistant;\n  @property() public _defaultPage?: string =\n    localStorage.defaultPage || DEFAULT_PANEL;\n  @property() private _externalConfig?: ExternalConfig;\n\n  protected render() {\n    const hass = this.hass;\n\n    if (!hass) {\n      return html``;\n    }\n\n    return html`\n      <app-toolbar>\n        <div main-title>Home Assistant</div>\n        ${hass.user\n          ? html`\n              <a href=\"/profile\">\n                <ha-user-badge .user=${hass.user}></ha-user-badge>\n              </a>\n            `\n          : \"\"}\n      </app-toolbar>\n\n      <paper-listbox attr-for-selected=\"data-panel\" .selected=${hass.panelUrl}>\n        <a\n          href=\"${computeUrl(this._defaultPage)}\"\n          data-panel=${this._defaultPage}\n          tabindex=\"-1\"\n        >\n          <paper-icon-item>\n            <ha-icon slot=\"item-icon\" icon=\"hass:apps\"></ha-icon>\n            <span class=\"item-text\">${hass.localize(\"panel.states\")}</span>\n          </paper-icon-item>\n        </a>\n\n        ${computePanels(hass).map(\n          (panel) => html`\n            <a\n              href=\"${computeUrl(panel.url_path)}\"\n              data-panel=\"${panel.url_path}\"\n              tabindex=\"-1\"\n            >\n              <paper-icon-item>\n                <ha-icon slot=\"item-icon\" .icon=\"${panel.icon}\"></ha-icon>\n                <span class=\"item-text\"\n                  >${hass.localize(`panel.${panel.title}`) || panel.title}</span\n                >\n              </paper-icon-item>\n            </a>\n          `\n        )}\n        ${this._externalConfig && this._externalConfig.hasSettingsScreen\n          ? html`\n              <a\n                aria-label=\"App Configuration\"\n                href=\"#external-app-configuration\"\n                tabindex=\"-1\"\n                @click=${this._handleExternalAppConfiguration}\n              >\n                <paper-icon-item>\n                  <ha-icon\n                    slot=\"item-icon\"\n                    icon=\"hass:cellphone-settings-variant\"\n                  ></ha-icon>\n                  <span class=\"item-text\"\n                    >${hass.localize(\n                      \"ui.sidebar.external_app_configuration\"\n                    )}</span\n                  >\n                </paper-icon-item>\n              </a>\n            `\n          : \"\"}\n        ${!hass.user\n          ? html`\n              <paper-icon-item @click=${this._handleLogOut} class=\"logout\">\n                <ha-icon slot=\"item-icon\" icon=\"hass:exit-to-app\"></ha-icon>\n                <span class=\"item-text\"\n                  >${hass.localize(\"ui.sidebar.log_out\")}</span\n                >\n              </paper-icon-item>\n            `\n          : html``}\n      </paper-listbox>\n\n      ${hass.user && hass.user.is_admin\n        ? html`\n            <div>\n              <div class=\"divider\"></div>\n\n              <div class=\"subheader\">\n                ${hass.localize(\"ui.sidebar.developer_tools\")}\n              </div>\n\n              <div class=\"dev-tools\">\n                <a href=\"/dev-service\" tabindex=\"-1\">\n                  <paper-icon-button\n                    icon=\"hass:remote\"\n                    alt=\"${hass.localize(\"panel.dev-services\")}\"\n                    title=\"${hass.localize(\"panel.dev-services\")}\"\n                  ></paper-icon-button>\n                </a>\n                <a href=\"/dev-state\" tabindex=\"-1\">\n                  <paper-icon-button\n                    icon=\"hass:code-tags\"\n                    alt=\"${hass.localize(\"panel.dev-states\")}\"\n                    title=\"${hass.localize(\"panel.dev-states\")}\"\n                  ></paper-icon-button>\n                </a>\n                <a href=\"/dev-event\" tabindex=\"-1\">\n                  <paper-icon-button\n                    icon=\"hass:radio-tower\"\n                    alt=\"${hass.localize(\"panel.dev-events\")}\"\n                    title=\"${hass.localize(\"panel.dev-events\")}\"\n                  ></paper-icon-button>\n                </a>\n                <a href=\"/dev-template\" tabindex=\"-1\">\n                  <paper-icon-button\n                    icon=\"hass:file-xml\"\n                    alt=\"${hass.localize(\"panel.dev-templates\")}\"\n                    title=\"${hass.localize(\"panel.dev-templates\")}\"\n                  ></paper-icon-button>\n                </a>\n                ${isComponentLoaded(hass, \"mqtt\")\n                  ? html`\n                      <a href=\"/dev-mqtt\" tabindex=\"-1\">\n                        <paper-icon-button\n                          icon=\"hass:altimeter\"\n                          alt=\"${hass.localize(\"panel.dev-mqtt\")}\"\n                          title=\"${hass.localize(\"panel.dev-mqtt\")}\"\n                        ></paper-icon-button>\n                      </a>\n                    `\n                  : html``}\n                <a href=\"/dev-info\" tabindex=\"-1\">\n                  <paper-icon-button\n                    icon=\"hass:information-outline\"\n                    alt=\"${hass.localize(\"panel.dev-info\")}\"\n                    title=\"${hass.localize(\"panel.dev-info\")}\"\n                  ></paper-icon-button>\n                </a>\n              </div>\n            </div>\n          `\n        : \"\"}\n    `;\n  }\n\n  protected shouldUpdate(changedProps: PropertyValues): boolean {\n    if (changedProps.has(\"_externalConfig\")) {\n      return true;\n    }\n    if (!this.hass || !changedProps.has(\"hass\")) {\n      return false;\n    }\n    const oldHass = changedProps.get(\"hass\") as HomeAssistant;\n    if (!oldHass) {\n      return true;\n    }\n    const hass = this.hass;\n    return (\n      hass.panels !== oldHass.panels ||\n      hass.panelUrl !== oldHass.panelUrl ||\n      hass.config.components !== oldHass.config.components ||\n      hass.user !== oldHass.user ||\n      hass.localize !== oldHass.localize\n    );\n  }\n\n  protected firstUpdated(changedProps: PropertyValues) {\n    super.firstUpdated(changedProps);\n    if (this.hass && this.hass.auth.external) {\n      getExternalConfig(this.hass.auth.external).then((conf) => {\n        this._externalConfig = conf;\n      });\n    }\n  }\n\n  private _handleLogOut() {\n    fireEvent(this, \"hass-logout\");\n  }\n\n  private _handleExternalAppConfiguration(ev: Event) {\n    ev.preventDefault();\n    this.hass!.auth.external!.fireMessage({\n      type: \"config_screen/show\",\n    });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        height: 100%;\n        display: block;\n        overflow: auto;\n        -ms-user-select: none;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        border-right: 1px solid var(--divider-color);\n        background-color: var(\n          --sidebar-background-color,\n          var(--primary-background-color)\n        );\n      }\n\n      app-toolbar {\n        font-weight: 400;\n        color: var(--primary-text-color);\n        border-bottom: 1px solid var(--divider-color);\n        background-color: var(--primary-background-color);\n      }\n\n      app-toolbar a {\n        color: var(--primary-text-color);\n      }\n\n      paper-listbox {\n        padding: 0;\n      }\n\n      paper-listbox > a {\n        color: var(--sidebar-text-color);\n        font-weight: 500;\n        font-size: 14px;\n        text-decoration: none;\n      }\n\n      paper-icon-item {\n        margin: 8px;\n        padding-left: 9px;\n        border-radius: 4px;\n        --paper-item-min-height: 40px;\n      }\n\n      ha-icon[slot=\"item-icon\"] {\n        color: var(--sidebar-icon-color);\n      }\n\n      .iron-selected paper-icon-item:before {\n        border-radius: 4px;\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        pointer-events: none;\n        content: \"\";\n        background-color: var(--sidebar-selected-icon-color);\n        opacity: 0.12;\n        transition: opacity 15ms linear;\n        will-change: opacity;\n      }\n\n      .iron-selected paper-icon-item[pressed]:before {\n        opacity: 0.37;\n      }\n\n      paper-icon-item span {\n        color: var(--sidebar-text-color);\n        font-weight: 500;\n        font-size: 14px;\n      }\n\n      a.iron-selected paper-icon-item ha-icon {\n        color: var(--sidebar-selected-icon-color);\n      }\n\n      a.iron-selected .item-text {\n        color: var(--sidebar-selected-text-color);\n      }\n\n      paper-icon-item.logout {\n        margin-top: 16px;\n      }\n\n      .divider {\n        height: 1px;\n        background-color: var(--divider-color);\n        margin: 4px 0;\n      }\n\n      .subheader {\n        color: var(--sidebar-text-color);\n        font-weight: 500;\n        font-size: 14px;\n        padding: 16px;\n      }\n\n      .dev-tools {\n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n        padding: 0 8px;\n      }\n\n      .dev-tools a {\n        color: var(--sidebar-icon-color);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-sidebar\": HaSidebar;\n  }\n}\n\ncustomElements.define(\"ha-sidebar\", HaSidebar);\n","import { ExternalMessaging } from \"./external_messaging\";\n\nexport interface ExternalConfig {\n  hasSettingsScreen: boolean;\n}\n\nexport const getExternalConfig = (\n  bus: ExternalMessaging\n): Promise<ExternalConfig> => {\n  if (!bus.cache.cfg) {\n    bus.cache.cfg = bus.sendMessage<ExternalConfig>({\n      type: \"config/get\",\n    });\n  }\n  return bus.cache.cfg;\n};\n"],"sourceRoot":""}