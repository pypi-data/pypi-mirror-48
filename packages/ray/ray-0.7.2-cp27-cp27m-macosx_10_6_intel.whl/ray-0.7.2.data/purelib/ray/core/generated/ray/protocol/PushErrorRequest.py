# automatically generated by the FlatBuffers compiler, do not modify

# namespace: protocol

import flatbuffers

class PushErrorRequest(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsPushErrorRequest(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = PushErrorRequest()
        x.Init(buf, n + offset)
        return x

    # PushErrorRequest
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # PushErrorRequest
    def JobId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # PushErrorRequest
    def Type(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # PushErrorRequest
    def ErrorMessage(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # PushErrorRequest
    def Timestamp(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

def PushErrorRequestStart(builder): builder.StartObject(4)
def PushErrorRequestAddJobId(builder, jobId): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(jobId), 0)
def PushErrorRequestAddType(builder, type): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(type), 0)
def PushErrorRequestAddErrorMessage(builder, errorMessage): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(errorMessage), 0)
def PushErrorRequestAddTimestamp(builder, timestamp): builder.PrependFloat64Slot(3, timestamp, 0.0)
def PushErrorRequestEnd(builder): return builder.EndObject()
