# automatically generated by the FlatBuffers compiler, do not modify

# namespace: protocol

import flatbuffers

class TaskExecutionSpecification(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsTaskExecutionSpecification(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = TaskExecutionSpecification()
        x.Init(buf, n + offset)
        return x

    # TaskExecutionSpecification
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # TaskExecutionSpecification
    def Dependencies(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # TaskExecutionSpecification
    def DependenciesLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # TaskExecutionSpecification
    def LastTimestamp(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # TaskExecutionSpecification
    def NumForwards(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def TaskExecutionSpecificationStart(builder): builder.StartObject(3)
def TaskExecutionSpecificationAddDependencies(builder, dependencies): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(dependencies), 0)
def TaskExecutionSpecificationStartDependenciesVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def TaskExecutionSpecificationAddLastTimestamp(builder, lastTimestamp): builder.PrependFloat64Slot(1, lastTimestamp, 0.0)
def TaskExecutionSpecificationAddNumForwards(builder, numForwards): builder.PrependInt32Slot(2, numForwards, 0)
def TaskExecutionSpecificationEnd(builder): return builder.EndObject()
