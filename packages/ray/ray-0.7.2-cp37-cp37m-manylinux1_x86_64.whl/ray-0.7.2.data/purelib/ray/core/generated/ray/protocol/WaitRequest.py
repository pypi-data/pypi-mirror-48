# automatically generated by the FlatBuffers compiler, do not modify

# namespace: protocol

import flatbuffers

class WaitRequest(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsWaitRequest(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = WaitRequest()
        x.Init(buf, n + offset)
        return x

    # WaitRequest
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # WaitRequest
    def ObjectIds(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # WaitRequest
    def ObjectIdsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # WaitRequest
    def NumReadyObjects(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # WaitRequest
    def Timeout(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # WaitRequest
    def WaitLocal(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # WaitRequest
    def TaskId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def WaitRequestStart(builder): builder.StartObject(5)
def WaitRequestAddObjectIds(builder, objectIds): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(objectIds), 0)
def WaitRequestStartObjectIdsVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def WaitRequestAddNumReadyObjects(builder, numReadyObjects): builder.PrependInt32Slot(1, numReadyObjects, 0)
def WaitRequestAddTimeout(builder, timeout): builder.PrependInt64Slot(2, timeout, 0)
def WaitRequestAddWaitLocal(builder, waitLocal): builder.PrependBoolSlot(3, waitLocal, 0)
def WaitRequestAddTaskId(builder, taskId): builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(taskId), 0)
def WaitRequestEnd(builder): return builder.EndObject()
