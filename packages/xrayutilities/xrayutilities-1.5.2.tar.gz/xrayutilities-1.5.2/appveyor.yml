environment:
  matrix:
    # For Python versions available on Appveyor, see
    # http://www.appveyor.com/docs/installed-software#python and
    # https://www.appveyor.com/docs/build-environment/#miniconda
    - PYTHON: C:\Python27
    - PYTHON: C:\Python27-x64
    - PYTHON: C:\Python35
    - PYTHON: C:\Python35-x64
    - PYTHON: C:\Python36
    - PYTHON: C:\Python36-x64
    - PYTHON: C:\Python37
    - PYTHON: C:\Python37-x64
    - PYTHON_VERSION: 2.7
      MINICONDA: C:\Miniconda
    - PYTHON_VERSION: 2.7
      MINICONDA: C:\Miniconda-x64
    - PYTHON_VERSION: 3.5
      MINICONDA: C:\Miniconda35
    - PYTHON_VERSION: 3.5
      MINICONDA: C:\Miniconda35-x64
    - PYTHON_VERSION: 3.6
      MINICONDA: C:\Miniconda36
    - PYTHON_VERSION: 3.6
      MINICONDA: C:\Miniconda36-x64
    - PYTHON_VERSION: 3.7
      MINICONDA: C:\Miniconda37
    - PYTHON_VERSION: 3.7
      MINICONDA: C:\Miniconda37-x64

install:
  - ps: |
      $env:package_version=(Get-Content -Path VERSION)
      Update-AppveyorBuild -Version "$env:package_version-$env:APPVEYOR_BUILD_NUMBER"
      # fix error due to Python 2.7 deprecation
      $env:PYTHONWARNINGS="ignore:::pip._internal.cli.base_command"
      # install dependencies
      if($env:MINICONDA -eq $null)
      {
        $env:Path="$env:PYTHON;$env:PYTHON\Scripts;$env:Path"
        [Environment]::SetEnvironmentVariable("Path", "$env:PYTHON;$env:PYTHON\Scripts;senv:Path", [EnvironmentVariableTarget]::User)
        python -m pip install --upgrade --ignore-installed pip
        python -m pip install --upgrade numpy wheel
      }
      else
      {
        $env:Path="$env:MINICONDA;$env:MINICONDA\Scripts;$env:MINICONDA\Library\bin;$env:Path"
        [Environment]::SetEnvironmentVariable("Path", "$env:MINICONDA;$env:MINICONDA\Scripts;$env:Path", [EnvironmentVariableTarget]::User)
        conda config --set always_yes yes --set changeps1 no
        conda update -q conda
        conda info -a
        conda install -q cython numpy scipy wheel h5py
        python -m pip install --upgrade --ignore-installed pip
        python -m pip install lmfit
      }
      python -m pip install --upgrade --ignore-installed unittest2

build_script:
  - cmd: IF DEFINED MINICONDA ( echo "Skip packaging" ) ELSE ( python setup.py bdist_wheel bdist_wininst )

test_script:
  - cmd: IF DEFINED MINICONDA ( python setup.py test) ELSE ( echo "Tests skipped" )

artifacts:
  - path: dist\*
