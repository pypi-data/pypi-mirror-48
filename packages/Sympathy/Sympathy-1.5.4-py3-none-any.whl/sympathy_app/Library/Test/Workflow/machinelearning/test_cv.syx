<?xml version='1.0' encoding='ASCII'?>
<flow xmlns="http://www.sysess.org/sympathyfordata/workflow/1.0" cls="Flow" height="50.0" id="" is_locked="False" uuid="{717ed7c0-cf08-4c96-83ea-2ad77c6d5265}" width="50.0" x="0.0" y="0.0">
  <label></label>
  <description></description>
  <author></author>
  <copyright></copyright>
  <version></version>
  <source></source>
  <min_version></min_version>
  <aggregation type="json"><![CDATA[null]]></aggregation>
  <libraries type="json"><![CDATA[[]]]></libraries>
  <pythonpaths type="json"><![CDATA[[]]]></pythonpaths>
  <overrides type="json"><![CDATA[{}]]></overrides>
  <parameters type="json"><![CDATA[{}]]></parameters>
  <ports/>
  <node height="50.0" id="org.sysess.sympathy.machinelearning.crossval_stratifiedkfold" uuid="{120b9034-e3b5-44b0-9634-ef22016b05c8}" width="50.0" x="1629.5" y="1991.5">
    <label>Stratified K-fold cross validation</label>
    <description>Gives splits for stratified K-fold cross validation</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group", "n_splits": {"description": "Number of folds, must be atleast 2", "editor": null, "label": "Number of splits", "order": 0, "type": "integer", "value": 3}, "shuffle": {"description": "Shuffle the data before splitting", "editor": null, "label": "Shuffle", "order": 1, "type": "boolean", "value": false}}]]></parameters>
    <ports>
      <input key="X" requiresdata="False" scheme="hdf5" type="table" type_base="table" uuid="{b5b9193e-2600-4ff9-90fc-2b712eae1715}">
        <label>X</label>
        <description>X</description>
      </input>
      <input key="Y" requiresdata="False" scheme="hdf5" type="table" type_base="table" uuid="{5b3f3367-21a7-4f32-a4c3-1362623247a5}">
        <label>Y</label>
        <description>Y</description>
      </input>
      <output key="out" requiresdata="False" scheme="hdf5" type="[(table, table)]" type_base="[(table, table)]" uuid="{1d46709c-9db4-48c5-afc2-519c4fde3e65}">
        <label>out</label>
        <description>out</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.machinelearning.crossval_split" port_format="1.1" uuid="{1d0a4dd6-2d90-420b-b23c-4bfd0244e200}" width="50.0" x="1779.5" y="1941.5">
    <label>Split data for cross validation</label>
    <description>Partitions the data as per given training and test indicies. Returns list of tuples: (X training, Y training, X test, Y test)</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
    <ports>
      <input key="splits" requiresdata="False" scheme="hdf5" type="[(table, table)]" type_base="[(table, table)]" uuid="{f57d6e3f-9dd8-41fb-864b-0e9cfac45fdb}">
        <label>splits</label>
        <description>splits</description>
      </input>
      <input key="data" requiresdata="False" scheme="hdf5" type="table" type_base="table" uuid="{55c4111e-24f4-450d-9607-d725261552e0}">
        <label>data</label>
        <description>data</description>
      </input>
      <input key="data" requiresdata="False" scheme="hdf5" type="table" type_base="table" uuid="{7b70a62b-a159-4d7f-b778-88c3b1c0ed7e}">
        <label>data</label>
        <description>data</description>
      </input>
      <output key="out" requiresdata="False" scheme="hdf5" type="[(table, table, table, table)]" type_base="[(table, table, table, table)]" uuid="{df0618dc-501d-4e91-8b46-3e29d8e41157}">
        <label>out</label>
        <description>out</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.machinelearning.crossval_kfold" uuid="{1e65cdfb-14fb-49e7-8d2c-86c22d917d40}" width="50.0" x="1629.5" y="1891.5">
    <label>K-fold cross validation</label>
    <description>Gives splits for K-fold cross validation</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group", "n_splits": {"description": "Number of folds, must be atleast 2", "editor": null, "label": "Number of splits", "order": 0, "type": "integer", "value": 3}, "shuffle": {"description": "Shuffle the data before splitting", "editor": null, "label": "Shuffle", "order": 1, "type": "boolean", "value": false}}]]></parameters>
    <ports>
      <input key="X" requiresdata="False" scheme="hdf5" type="table" type_base="table" uuid="{43da8324-ca36-4bae-aa9a-e283f05fa9e1}">
        <label>X</label>
        <description>X</description>
      </input>
      <input key="Y" requiresdata="False" scheme="hdf5" type="table" type_base="table" uuid="{97188f56-79c4-41cb-927d-ffa6a67f1358}">
        <label>Y</label>
        <description>Y</description>
      </input>
      <output key="out" requiresdata="False" scheme="hdf5" type="[(table, table)]" type_base="[(table, table)]" uuid="{74a47cf7-0f72-4729-8c7f-1cccb260d282}">
        <label>out</label>
        <description>out</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.machinelearning.pipeline" port_format="1.1" uuid="{1e69677f-3bdb-40af-b27b-5a7f3406162a}" width="50.0" x="1529.5" y="1716.5">
    <label>Pipeline</label>
    <description>Applies one model on the output of another</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group", "names": {"description": "Comma separated list of model names, eg. Rescale, SVC", "editor": null, "label": "Model names: ", "order": 0, "type": "string", "value": "A, B"}, "flatten": {"description": "Flattens multiple pipeline objects into a single pipeline containing all models", "editor": null, "label": "Flatten: ", "order": 1, "type": "boolean", "value": true}}]]></parameters>
    <ports>
      <input key="models" requiresdata="False" scheme="hdf5" type="model" type_base="model" uuid="{2071b8cf-54c4-4d1c-92ae-e6edcaf98750}">
        <label>models</label>
        <description>models</description>
      </input>
      <input key="models" requiresdata="False" scheme="hdf5" type="model" type_base="model" uuid="{166250dd-febb-426f-b09d-15bbb5f97da8}">
        <label>models</label>
        <description>models</description>
      </input>
      <input key="models" requiresdata="True" scheme="hdf5" type="model" type_base="model" uuid="{d1d53094-87b1-490c-af3a-30831c417939}">
        <label>models</label>
        <description>models</description>
      </input>
      <output key="out-model" requiresdata="False" scheme="hdf5" type="model" type_base="model" uuid="{7de97ebb-2240-4841-928d-6676641d899c}">
        <label>Output model</label>
        <description>Output model</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.calculatortable" uuid="{288848c3-d493-4de9-8d9e-29753cd10082}" width="50.0" x="1354.5" y="2116.5">
    <label>Fake groups</label>
    <description>Performs user-defined python calculations</description>
    <author>Greger Cronquist &lt;greger.cronquist@combine.se&gt;, Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;, Sara Gustafzelius &lt;sara.gustafzelius@combine.se&gt;, Benedikt Ziegler &lt;benedikt.ziegler@combine.se&gt;</author>
    <copyright>(c) 2016 Combine Control Systems AB</copyright>
    <version>3.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "calc_list": {"description": "List of calculations.", "editor": null, "label": "List of calculations", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": ["${group} = np.round(table.col('sepal length (cm)').data) #ENABLED:1"], "value": [0], "value_names": []}, "same_length_res": {"description": "Gather all the results generated from an incoming data into a common output table. This requires that the results all have the same length. An error will be given if the lengths of the outgoing results differ.", "editor": null, "label": "Put results in common outputs.", "order": 1, "type": "boolean", "value": true}, "copy_input": {"description": "If enabled the incoming data will be copied to the output before running the calculations. This requires that the results will all have the same length. An exception will be raised if the lengths of the outgoing results differ.", "editor": null, "label": "Copy input", "order": 2, "type": "boolean", "value": false}, "fail_strategy": {"description": "Decide how a failed calculation should be handled", "label": "Action on calculation failure", "mode": "selected", "order": 3, "passthrough": false, "type": "list", "list": ["Exception", "Skip calculation"], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}}]]></parameters>
    <ports>
      <input key="port0" requiresdata="False" scheme="hdf5" type="table" type_base="table" uuid="{8d7cf8a3-2105-4187-b06b-522d745a1ca1}">
        <label>Input Table</label>
        <description>Input Table</description>
      </input>
      <output key="port1" requiresdata="False" scheme="hdf5" type="table" type_base="table" uuid="{90ea35ca-ca6e-4084-8a87-a93a735e41b5}">
        <label>Table with results from the calculation performed by the node.</label>
        <description>Table with results from the calculation performed by the node.</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.machinelearning.normalizer" uuid="{32e1ce6c-d595-4601-a310-dea054a591e4}" width="50.0" x="1229.5" y="1691.5">
    <label>Normalizer</label>
    <description>
Normalize samples individually to unit norm.

Each sample (i.e. each row of the data matrix) with at least one non
zero component is rescaled independently of other samples so that its
norm (l1, l2 or max) equals one.</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group", "norm": {"description": "The norm to use to normalize each non zero sample.\n", "editor": null, "label": "norm", "order": 0, "type": "string", "value": "l2"}}]]></parameters>
    <ports>
      <output key="model" requiresdata="False" scheme="hdf5" type="model" type_base="model" uuid="{69747971-b1fa-42b1-83e1-fd009fce6179}">
        <label>Model</label>
        <description>Model</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.machinelearning.maxabs_scaler" uuid="{34636ef4-471f-4bf2-8cc2-e25075e4091d}" width="50.0" x="1229.5" y="1616.5">
    <label>Max Abs Scaler</label>
    <description>
Scale each feature by its maximum absolute value.

This estimator scales and translates each feature individually such
that the maximal absolute value of each feature in the training set
will be 1.0. It does not shift/center the data, and thus does not
destroy any sparsity.
</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
    <ports>
      <output key="model" requiresdata="False" scheme="hdf5" type="model" type_base="model" uuid="{538f40e4-cac7-4945-b28f-2108d09f27d3}">
        <label>Model</label>
        <description>Model</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.machinelearning.crossval_timeseries" uuid="{380d2da0-a9f6-42de-a951-5db3cbc4a293}" width="50.0" x="1629.5" y="2091.5">
    <label>Time series K-fold based cross validation</label>
    <description>Time series cross-validator based on K-fold suitable fortime serie data. In the kth split, it returns first k folds as training set and the (k+1)th fold as test set.</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group", "n_splits": {"description": "Number of folds, must be atleast 2", "editor": null, "label": "Number of splits", "order": 0, "type": "integer", "value": 3}, "shuffle": {"description": "Shuffle the data before splitting", "editor": null, "label": "Shuffle", "order": 1, "type": "boolean", "value": false}}]]></parameters>
    <ports>
      <input key="X" requiresdata="False" scheme="hdf5" type="table" type_base="table" uuid="{37793b49-923b-455a-8272-87db5aeb407f}">
        <label>X</label>
        <description>X</description>
      </input>
      <input key="Y" requiresdata="False" scheme="hdf5" type="table" type_base="table" uuid="{1f96138f-32a1-4170-be64-ebd12c462815}">
        <label>Y</label>
        <description>Y</description>
      </input>
      <output key="out" requiresdata="False" scheme="hdf5" type="[(table, table)]" type_base="[(table, table)]" uuid="{bacbb4ce-5fc7-442c-949e-cab2104a259d}">
        <label>out</label>
        <description>out</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.machinelearning.score" uuid="{3aa37fcd-09a8-4b45-b73a-695d803e31a7}" width="50.0" x="1854.5" y="1766.5">
    <label>Score</label>
    <description>Predicts Y' from X and compares with input Y. Returns mean accuracy (sum(Y' == Y) / rows)</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
    <ports>
      <input key="in-model" requiresdata="False" scheme="hdf5" type="model" type_base="model" uuid="{e2235196-c6a0-402d-9f9f-56bba0a03ff7}">
        <label>Input model</label>
        <description>Input model</description>
      </input>
      <input key="X" requiresdata="False" scheme="hdf5" type="table" type_base="table" uuid="{229fbb1d-d274-4e7f-b2b5-40a0087ef953}">
        <label>X</label>
        <description>X</description>
      </input>
      <input key="Y" requiresdata="False" scheme="hdf5" type="table" type_base="table" uuid="{39647aeb-c7c7-4bb0-b49a-8ab1477a9942}">
        <label>Y</label>
        <description>Y</description>
      </input>
      <output key="Score" requiresdata="False" scheme="hdf5" type="table" type_base="table" uuid="{662d57e8-ce6f-418f-86ef-2fde84595447}">
        <label>Score</label>
        <description>Score</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.machinelearning.crossval_leaveonegroupout" uuid="{3b0b30a8-289d-47f6-97fb-c50edd036c5b}" width="50.0" x="1629.5" y="2291.5">
    <label>Leave one group out cross validation</label>
    <description>Gives splits for leave-one-group-out cross-validation</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
    <ports>
      <input key="X" requiresdata="False" scheme="hdf5" type="table" type_base="table" uuid="{a1e56e17-3f33-4d46-922d-57240f2e04bb}">
        <label>X</label>
        <description>X</description>
      </input>
      <input key="Y" requiresdata="False" scheme="hdf5" type="table" type_base="table" uuid="{883334f0-fc4e-43a7-aedd-f837fe16e2ae}">
        <label>Y</label>
        <description>Y</description>
      </input>
      <input key="G" requiresdata="False" scheme="hdf5" type="table" type_base="table" uuid="{c7dd324d-26e8-4acd-906a-7fe43f12a50d}">
        <label>G</label>
        <description>G</description>
      </input>
      <output key="out" requiresdata="False" scheme="hdf5" type="[(table, table)]" type_base="[(table, table)]" uuid="{e9debc84-dd0a-49ae-9def-ee4ad0331c09}">
        <label>out</label>
        <description>out</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.machinelearning.fit" port_format="1.1" uuid="{a7602c01-8070-4882-b850-ccf773f6590e}" width="50.0" x="1629.5" y="1741.5">
    <label>Fit</label>
    <description>Trains a model. Use "Create Input Port &gt; Y" for supervised training</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
    <ports>
      <input key="in-model" requiresdata="False" scheme="hdf5" type="model" type_base="model" uuid="{ef0c469b-79d3-48e8-84c7-e6c0fbb2b5bf}">
        <label>Input model</label>
        <description>Input model</description>
      </input>
      <input key="X" requiresdata="False" scheme="hdf5" type="table" type_base="table" uuid="{b614be41-fef1-4cf4-8097-4bae83fce0f2}">
        <label>X</label>
        <description>X</description>
      </input>
      <input key="Y0" requiresdata="True" scheme="hdf5" type="table" type_base="table" uuid="{77996852-d444-4979-9fe8-9f8b3089847a}">
        <label>Y</label>
        <description>Y</description>
      </input>
      <output key="out-model" requiresdata="False" scheme="hdf5" type="model" type_base="model" uuid="{ef8577cc-f39c-4ed6-ab5c-9fb038023798}">
        <label>Output model</label>
        <description>Output model</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.machinelearning.crossval_groupkfold" uuid="{ab41812e-997b-4145-a52b-9d3bff776bb6}" width="50.0" x="1629.5" y="2191.5">
    <label>Group K-fold cross validation</label>
    <description>K-fold variant with non-overlapping groups.The same group will not appear in two different folds (the number of distinct groups has to be at least equal to the number of folds).</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group", "n_splits": {"description": "Number of folds, must be atleast 2", "editor": null, "label": "Number of splits", "order": 0, "type": "integer", "value": 3}}]]></parameters>
    <ports>
      <input key="X" requiresdata="False" scheme="hdf5" type="table" type_base="table" uuid="{5736764e-e1a4-42f7-8b14-d81c79ef1082}">
        <label>X</label>
        <description>X</description>
      </input>
      <input key="Y" requiresdata="False" scheme="hdf5" type="table" type_base="table" uuid="{cf3f5651-d675-4f1c-adb7-ccb4b5e1713c}">
        <label>Y</label>
        <description>Y</description>
      </input>
      <input key="G" requiresdata="False" scheme="hdf5" type="table" type_base="table" uuid="{ae773031-bab9-4288-91a9-57dd8561e186}">
        <label>G</label>
        <description>G</description>
      </input>
      <output key="out" requiresdata="False" scheme="hdf5" type="[(table, table)]" type_base="[(table, table)]" uuid="{bdf0bec2-b9c7-4f62-9e70-a382427080ae}">
        <label>out</label>
        <description>out</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.machinelearning.logisticregression" uuid="{acc0dfc3-2aad-4c04-b7a2-f1df762b4e37}" width="50.0" x="1229.5" y="1766.5">
    <label>Logistic Regression</label>
    <description>Support vector machine (SVM) based classifier</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group", "warm_start": {"description": "When set to True, reuse the solution of the previous call to fit as\ninitialization, otherwise, just erase the previous solution.\nUseless for liblinear solver.\n\n.. versionadded:: 0.17\n   *warm_start* to support *lbfgs*, *newton-cg*, *sag* solvers.\n", "editor": null, "label": "warm_start", "order": 0, "type": "string", "value": "False"}, "C": {"description": "Inverse of regularization strength; must be a positive float.\nLike in support vector machines, smaller values specify stronger\nregularization.\n", "editor": null, "label": "C", "order": 1, "type": "string", "value": "1.0"}, "n_jobs": {"description": "Number of CPU cores used during the cross-validation loop. If given\na value of -1, all cores are used.\n", "editor": null, "label": "n_jobs", "order": 2, "type": "string", "value": "1"}, "intercept_scaling": {"description": "Useful only when the solver 'liblinear' is used\nand self.fit_intercept is set to True. In this case, x becomes\n[x, self.intercept_scaling],\ni.e. a \"synthetic\" feature with constant value equal to\nintercept_scaling is appended to the instance vector.\nThe intercept becomes ``intercept_scaling * synthetic_feature_weight``.\n\nNote! the synthetic feature weight is subject to l1/l2 regularization\nas all other features.\nTo lessen the effect of regularization on synthetic feature weight\n(and therefore on the intercept) intercept_scaling has to be increased.\n", "editor": null, "label": "intercept_scaling", "order": 3, "type": "string", "value": "1.0"}, "fit_intercept": {"description": "Specifies if a constant (a.k.a. bias or intercept) should be\nadded to the decision function.\n", "editor": null, "label": "fit_intercept", "order": 4, "type": "string", "value": "True"}, "random_state": {"description": "The seed of the pseudo random number generator to use when\nshuffling the data. Used only in solvers 'sag' and 'liblinear'.\n", "editor": null, "label": "random_state", "order": 5, "type": "string", "value": "None"}, "max_iter": {"description": "Useful only for the newton-cg, sag and lbfgs solvers.\nMaximum number of iterations taken for the solvers to converge.\n", "editor": null, "label": "max_iter", "order": 6, "type": "string", "value": "100"}, "penalty": {"description": "Used to specify the norm used in the penalization. The 'newton-cg',\n'sag' and 'lbfgs' solvers support only l2 penalties.\n", "editor": null, "label": "penalty", "order": 7, "type": "string", "value": "l2"}, "multi_class": {"description": "Multiclass option can be either 'ovr' or 'multinomial'. If the option\nchosen is 'ovr', then a binary problem is fit for each label. Else\nthe loss minimised is the multinomial loss fit across\nthe entire probability distribution. Works only for the 'newton-cg',\n'sag' and 'lbfgs' solver.\n\n.. versionadded:: 0.18\n   Stochastic Average Gradient descent solver for 'multinomial' case.\n", "editor": null, "label": "multi_class", "order": 8, "type": "string", "value": "ovr"}, "tol": {"description": "Tolerance for stopping criteria.\n", "editor": null, "label": "tol", "order": 9, "type": "string", "value": "0.0001"}, "dual": {"description": "Dual or primal formulation. Dual formulation is only implemented for\nl2 penalty with liblinear solver. Prefer dual=False when\nn_samples > n_features.\n", "editor": null, "label": "dual", "order": 10, "type": "string", "value": "False"}, "solver": {"description": "Algorithm to use in the optimization problem.\n\n- For small datasets, 'liblinear' is a good choice, whereas 'sag' is\n    faster for large ones.\n- For multiclass problems, only 'newton-cg', 'sag' and 'lbfgs' handle\n    multinomial loss; 'liblinear' is limited to one-versus-rest\n    schemes.\n- 'newton-cg', 'lbfgs' and 'sag' only handle L2 penalty.\n\nNote that 'sag' fast convergence is only guaranteed on features with\napproximately the same scale. You can preprocess the data with a\nscaler from sklearn.preprocessing.\n\n.. versionadded:: 0.17\n   Stochastic Average Gradient descent solver.\n", "editor": null, "label": "solver", "order": 11, "type": "string", "value": "liblinear"}, "class_weight": {"description": "Weights associated with classes in the form ``{class_label: weight}``.\nIf not given, all classes are supposed to have weight one.\n\nThe \"balanced\" mode uses the values of y to automatically adjust\nweights inversely proportional to class frequencies in the input data\nas ``n_samples / (n_classes * np.bincount(y))``.\n\nNote that these weights will be multiplied with sample_weight (passed\nthrough the fit method) if sample_weight is specified.\n\n.. versionadded:: 0.17\n   *class_weight='balanced'* instead of deprecated\n   *class_weight='auto'*.\n", "editor": null, "label": "class_weight", "order": 12, "type": "string", "value": "None"}}]]></parameters>
    <ports>
      <output key="model" requiresdata="False" scheme="hdf5" type="model" type_base="model" uuid="{a59b07cb-05b0-4360-b5ca-cb6844b44df9}">
        <label>Model</label>
        <description>Model</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.machinelearning.example_datasets" uuid="{e9d1984d-11dd-4d7e-a28d-d9efdb8341ea}" width="50.0" x="1254.5" y="1891.5">
    <label>Example datasets</label>
    <description>Exposes the example datasets from sklearn</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group", "dataset": {"description": "Choose from one of the default toy datasets", "label": "Dataset", "order": 0, "type": "string", "value": "Iris", "editor": {"type": "combobox", "options": ["Digits", "Boston", "Diabetes", "linnerud", "Iris"]}}, "classnames": {"description": "Attempts to use class names as Y", "editor": null, "label": "Class names", "order": 1, "type": "boolean", "value": true}}]]></parameters>
    <ports>
      <output key="X" requiresdata="False" scheme="hdf5" type="table" type_base="table" uuid="{051580a9-958f-410b-b47c-e166447b8a7e}">
        <label>X</label>
        <description>X</description>
      </output>
      <output key="Y" requiresdata="False" scheme="hdf5" type="table" type_base="table" uuid="{d08acdf1-3524-40ab-b33a-84cbe72af264}">
        <label>Y</label>
        <description>Y</description>
      </output>
    </ports>
  </node>
  <connection type="table" uuid="{026445b8-44a1-47ba-8d6f-eb03deb532b7}">
    <source node="{e9d1984d-11dd-4d7e-a28d-d9efdb8341ea}" port="{d08acdf1-3524-40ab-b33a-84cbe72af264}"/>
    <destination node="{3b0b30a8-289d-47f6-97fb-c50edd036c5b}" port="{883334f0-fc4e-43a7-aedd-f837fe16e2ae}"/>
  </connection>
  <connection type="table" uuid="{085053f8-7da3-4577-a71f-eaf7126e8a0c}">
    <source node="{e9d1984d-11dd-4d7e-a28d-d9efdb8341ea}" port="{d08acdf1-3524-40ab-b33a-84cbe72af264}"/>
    <destination node="{380d2da0-a9f6-42de-a951-5db3cbc4a293}" port="{1f96138f-32a1-4170-be64-ebd12c462815}"/>
  </connection>
  <connection type="table" uuid="{1341e92b-285d-4538-8440-ae3c4fd6e8d8}">
    <source node="{e9d1984d-11dd-4d7e-a28d-d9efdb8341ea}" port="{051580a9-958f-410b-b47c-e166447b8a7e}"/>
    <destination node="{120b9034-e3b5-44b0-9634-ef22016b05c8}" port="{b5b9193e-2600-4ff9-90fc-2b712eae1715}"/>
  </connection>
  <connection type="table" uuid="{140a107c-eafb-4f92-9ece-66a1f76a0b2f}">
    <source node="{e9d1984d-11dd-4d7e-a28d-d9efdb8341ea}" port="{051580a9-958f-410b-b47c-e166447b8a7e}"/>
    <destination node="{1d0a4dd6-2d90-420b-b23c-4bfd0244e200}" port="{55c4111e-24f4-450d-9607-d725261552e0}"/>
  </connection>
  <connection type="model" uuid="{1a0ad04b-08b4-4f25-b700-68a455c4db81}">
    <source node="{1e69677f-3bdb-40af-b27b-5a7f3406162a}" port="{7de97ebb-2240-4841-928d-6676641d899c}"/>
    <destination node="{a7602c01-8070-4882-b850-ccf773f6590e}" port="{ef0c469b-79d3-48e8-84c7-e6c0fbb2b5bf}"/>
  </connection>
  <connection type="table" uuid="{2b8daecf-fa9e-4dae-9f18-8467287b29b3}">
    <source node="{e9d1984d-11dd-4d7e-a28d-d9efdb8341ea}" port="{051580a9-958f-410b-b47c-e166447b8a7e}"/>
    <destination node="{1e65cdfb-14fb-49e7-8d2c-86c22d917d40}" port="{43da8324-ca36-4bae-aa9a-e283f05fa9e1}"/>
  </connection>
  <connection type="[(table, table)]" uuid="{3154ab50-2b20-424e-8ea3-2e551790ba03}">
    <source node="{1e65cdfb-14fb-49e7-8d2c-86c22d917d40}" port="{74a47cf7-0f72-4729-8c7f-1cccb260d282}"/>
    <destination node="{1d0a4dd6-2d90-420b-b23c-4bfd0244e200}" port="{f57d6e3f-9dd8-41fb-864b-0e9cfac45fdb}"/>
  </connection>
  <connection type="table" uuid="{38550fd8-1c5a-41bd-9d70-543c7a38ceda}">
    <source node="{e9d1984d-11dd-4d7e-a28d-d9efdb8341ea}" port="{051580a9-958f-410b-b47c-e166447b8a7e}"/>
    <destination node="{380d2da0-a9f6-42de-a951-5db3cbc4a293}" port="{37793b49-923b-455a-8272-87db5aeb407f}"/>
  </connection>
  <connection type="table" uuid="{481297cc-f7a3-4ae3-8e0a-1665a0fa1bcc}">
    <source node="{e9d1984d-11dd-4d7e-a28d-d9efdb8341ea}" port="{d08acdf1-3524-40ab-b33a-84cbe72af264}"/>
    <destination node="{3aa37fcd-09a8-4b45-b73a-695d803e31a7}" port="{39647aeb-c7c7-4bb0-b49a-8ab1477a9942}"/>
  </connection>
  <connection type="table" uuid="{4d2922b2-fdfe-4e1a-a22f-17d01b1a3655}">
    <source node="{288848c3-d493-4de9-8d9e-29753cd10082}" port="{90ea35ca-ca6e-4084-8a87-a93a735e41b5}"/>
    <destination node="{ab41812e-997b-4145-a52b-9d3bff776bb6}" port="{ae773031-bab9-4288-91a9-57dd8561e186}"/>
  </connection>
  <connection type="table" uuid="{79dea06b-e661-4793-a80c-e0ff678001bf}">
    <source node="{e9d1984d-11dd-4d7e-a28d-d9efdb8341ea}" port="{d08acdf1-3524-40ab-b33a-84cbe72af264}"/>
    <destination node="{120b9034-e3b5-44b0-9634-ef22016b05c8}" port="{5b3f3367-21a7-4f32-a4c3-1362623247a5}"/>
  </connection>
  <connection type="model" uuid="{7f616e72-a9c9-40bf-8b89-f17a0fa037e2}">
    <source node="{acc0dfc3-2aad-4c04-b7a2-f1df762b4e37}" port="{a59b07cb-05b0-4360-b5ca-cb6844b44df9}"/>
    <destination node="{1e69677f-3bdb-40af-b27b-5a7f3406162a}" port="{d1d53094-87b1-490c-af3a-30831c417939}"/>
  </connection>
  <connection type="table" uuid="{82bc555a-ddf2-43b9-bd12-0b409c696816}">
    <source node="{e9d1984d-11dd-4d7e-a28d-d9efdb8341ea}" port="{d08acdf1-3524-40ab-b33a-84cbe72af264}"/>
    <destination node="{ab41812e-997b-4145-a52b-9d3bff776bb6}" port="{cf3f5651-d675-4f1c-adb7-ccb4b5e1713c}"/>
  </connection>
  <connection type="table" uuid="{91504d1a-20ce-492c-9dd6-ed6afc93be4e}">
    <source node="{e9d1984d-11dd-4d7e-a28d-d9efdb8341ea}" port="{051580a9-958f-410b-b47c-e166447b8a7e}"/>
    <destination node="{ab41812e-997b-4145-a52b-9d3bff776bb6}" port="{5736764e-e1a4-42f7-8b14-d81c79ef1082}"/>
  </connection>
  <connection type="model" uuid="{92142935-2913-4210-94b3-cc00f9531b10}">
    <source node="{34636ef4-471f-4bf2-8cc2-e25075e4091d}" port="{538f40e4-cac7-4945-b28f-2108d09f27d3}"/>
    <destination node="{1e69677f-3bdb-40af-b27b-5a7f3406162a}" port="{2071b8cf-54c4-4d1c-92ae-e6edcaf98750}"/>
  </connection>
  <connection type="model" uuid="{a3c7b788-0653-45de-80e1-72b92afb8c2a}">
    <source node="{32e1ce6c-d595-4601-a310-dea054a591e4}" port="{69747971-b1fa-42b1-83e1-fd009fce6179}"/>
    <destination node="{1e69677f-3bdb-40af-b27b-5a7f3406162a}" port="{166250dd-febb-426f-b09d-15bbb5f97da8}"/>
  </connection>
  <connection type="model" uuid="{aa1a8517-f072-4334-8f70-47ebdc6ee493}">
    <source node="{a7602c01-8070-4882-b850-ccf773f6590e}" port="{ef8577cc-f39c-4ed6-ab5c-9fb038023798}"/>
    <destination node="{3aa37fcd-09a8-4b45-b73a-695d803e31a7}" port="{e2235196-c6a0-402d-9f9f-56bba0a03ff7}"/>
  </connection>
  <connection type="table" uuid="{af068512-f6d8-4921-a253-fe7fe89436c3}">
    <source node="{288848c3-d493-4de9-8d9e-29753cd10082}" port="{90ea35ca-ca6e-4084-8a87-a93a735e41b5}"/>
    <destination node="{3b0b30a8-289d-47f6-97fb-c50edd036c5b}" port="{c7dd324d-26e8-4acd-906a-7fe43f12a50d}"/>
  </connection>
  <connection type="table" uuid="{b969186c-88f5-4924-9fd1-6c9dba18db25}">
    <source node="{e9d1984d-11dd-4d7e-a28d-d9efdb8341ea}" port="{051580a9-958f-410b-b47c-e166447b8a7e}"/>
    <destination node="{3aa37fcd-09a8-4b45-b73a-695d803e31a7}" port="{229fbb1d-d274-4e7f-b2b5-40a0087ef953}"/>
  </connection>
  <connection type="table" uuid="{bdf34975-7ea8-428a-bddb-34a08a95dbf7}">
    <source node="{e9d1984d-11dd-4d7e-a28d-d9efdb8341ea}" port="{051580a9-958f-410b-b47c-e166447b8a7e}"/>
    <destination node="{288848c3-d493-4de9-8d9e-29753cd10082}" port="{8d7cf8a3-2105-4187-b06b-522d745a1ca1}"/>
  </connection>
  <connection type="table" uuid="{c1dd7407-f810-47cb-b5c4-d23e03f474bd}">
    <source node="{e9d1984d-11dd-4d7e-a28d-d9efdb8341ea}" port="{d08acdf1-3524-40ab-b33a-84cbe72af264}"/>
    <destination node="{1d0a4dd6-2d90-420b-b23c-4bfd0244e200}" port="{7b70a62b-a159-4d7f-b778-88c3b1c0ed7e}"/>
  </connection>
  <connection type="table" uuid="{c4cf5922-d3d7-4eeb-8c0e-959f78dc5dd5}">
    <source node="{e9d1984d-11dd-4d7e-a28d-d9efdb8341ea}" port="{d08acdf1-3524-40ab-b33a-84cbe72af264}"/>
    <destination node="{a7602c01-8070-4882-b850-ccf773f6590e}" port="{77996852-d444-4979-9fe8-9f8b3089847a}"/>
  </connection>
  <connection type="table" uuid="{d368e4a2-4600-4ca2-a023-899a2a767ec0}">
    <source node="{e9d1984d-11dd-4d7e-a28d-d9efdb8341ea}" port="{051580a9-958f-410b-b47c-e166447b8a7e}"/>
    <destination node="{3b0b30a8-289d-47f6-97fb-c50edd036c5b}" port="{a1e56e17-3f33-4d46-922d-57240f2e04bb}"/>
  </connection>
  <connection type="table" uuid="{e9d53973-8c5f-4825-925c-2b3aef7b4c39}">
    <source node="{e9d1984d-11dd-4d7e-a28d-d9efdb8341ea}" port="{d08acdf1-3524-40ab-b33a-84cbe72af264}"/>
    <destination node="{1e65cdfb-14fb-49e7-8d2c-86c22d917d40}" port="{97188f56-79c4-41cb-927d-ffa6a67f1358}"/>
  </connection>
  <connection type="table" uuid="{ffb82a48-28d5-40ba-9b6e-796387c7a43b}">
    <source node="{e9d1984d-11dd-4d7e-a28d-d9efdb8341ea}" port="{051580a9-958f-410b-b47c-e166447b8a7e}"/>
    <destination node="{a7602c01-8070-4882-b850-ccf773f6590e}" port="{b614be41-fef1-4cf4-8097-4bae83fce0f2}"/>
  </connection>
</flow>
