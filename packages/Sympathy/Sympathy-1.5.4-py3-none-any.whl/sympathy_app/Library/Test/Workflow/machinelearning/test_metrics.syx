<?xml version='1.0' encoding='ASCII'?>
<flow xmlns="http://www.sysess.org/sympathyfordata/workflow/1.0" cls="Flow" height="50.0" id="" is_locked="False" uuid="{c76514e8-649b-4761-b0c2-1497ff394b30}" width="50.0" x="0.0" y="0.0">
  <label></label>
  <description></description>
  <author></author>
  <copyright></copyright>
  <version></version>
  <source></source>
  <min_version></min_version>
  <aggregation type="json"><![CDATA[null]]></aggregation>
  <libraries type="json"><![CDATA[[]]]></libraries>
  <pythonpaths type="json"><![CDATA[[]]]></pythonpaths>
  <overrides type="json"><![CDATA[{}]]></overrides>
  <parameters type="json"><![CDATA[{}]]></parameters>
  <ports/>
  <node height="50.0" id="org.sysess.sympathy.data.table.selecttablecolumns" uuid="{1ccc2d5a-a495-405d-bd36-c60a0c41991e}" width="50.0" x="2325.0" y="2050.0">
    <label>Select columns in Table</label>
    <description>Select columns from input to propagate to output.</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;, Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(c) 2013, 2017 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "columns": {"description": "Select columns.", "label": "Select columns", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": ["setosa", "versicolor", "virginica"], "value": [0], "value_names": ["setosa"], "editor": {"filter": true, "mode": true, "selection": "multi", "type": "listview"}}}]]></parameters>
    <ports>
      <input key="" requiresdata="False" scheme="hdf5" type="table" type_base="table" uuid="{71c5c664-981e-45b7-8283-1f9e4b0fcd3c}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="" requiresdata="False" scheme="hdf5" type="table" type_base="table" uuid="{20ecb24f-86c1-4364-aa65-2137137b4c00}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.machinelearning.roc_prob" uuid="{422b7cef-3947-46c3-811e-622ad8db9e60}" width="50.0" x="2500.0" y="2125.0">
    <label>ROC from probabilities</label>
    <description>Computes Receiver operating characteristics (ROC) based on calculated Y-probabilities and from true Y.</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group", "drop_intermediate": {"description": "Whether to drop some suboptimal thresholds which would not appear\non a plotted ROC curve. This is useful in order to create lighter\nROC curves.\n\n.. versionadded:: 0.17\n   parameter *drop_intermediate*.\n", "editor": null, "label": "drop_intermediate", "order": 0, "type": "string", "value": "True"}, "header as label": {"description": "Use header of Y-prob as the target label", "editor": null, "label": "header as label", "order": 1, "type": "string", "value": "True"}, "pos_label": {"description": "Label considered as positive and others are considered negative.\n", "editor": null, "label": "pos_label", "order": 2, "type": "string", "value": "None"}}]]></parameters>
    <ports>
      <input key="Y-prob" requiresdata="False" scheme="hdf5" type="table" type_base="table" uuid="{7f2357f6-3387-4ab3-8738-a926c9afc231}">
        <label>Y-prob</label>
        <description>Y-prob</description>
      </input>
      <input key="Y-true" requiresdata="False" scheme="hdf5" type="table" type_base="table" uuid="{84fda6a2-44ba-424a-bf96-85b67a7f4c25}">
        <label>Y-true</label>
        <description>Y-true</description>
      </input>
      <output key="roc" requiresdata="False" scheme="hdf5" type="table" type_base="table" uuid="{ada1e281-1eec-47bb-9185-4559eb728e9d}">
        <label>roc</label>
        <description>roc</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.machinelearning.logisticregression" uuid="{4e45a2e1-bdee-49b2-9db6-15adc4684c82}" width="50.0" x="1700.0" y="1925.0">
    <label>Logistic Regression</label>
    <description>Support vector machine (SVM) based classifier</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group", "warm_start": {"description": "When set to True, reuse the solution of the previous call to fit as\ninitialization, otherwise, just erase the previous solution.\nUseless for liblinear solver.\n\n.. versionadded:: 0.17\n   *warm_start* to support *lbfgs*, *newton-cg*, *sag* solvers.\n", "editor": null, "label": "warm_start", "order": 0, "type": "string", "value": "False"}, "C": {"description": "Inverse of regularization strength; must be a positive float.\nLike in support vector machines, smaller values specify stronger\nregularization.\n", "editor": null, "label": "C", "order": 1, "type": "string", "value": "1.0"}, "n_jobs": {"description": "Number of CPU cores used during the cross-validation loop. If given\na value of -1, all cores are used.\n", "editor": null, "label": "n_jobs", "order": 2, "type": "string", "value": "1"}, "intercept_scaling": {"description": "Useful only when the solver 'liblinear' is used\nand self.fit_intercept is set to True. In this case, x becomes\n[x, self.intercept_scaling],\ni.e. a \"synthetic\" feature with constant value equal to\nintercept_scaling is appended to the instance vector.\nThe intercept becomes ``intercept_scaling * synthetic_feature_weight``.\n\nNote! the synthetic feature weight is subject to l1/l2 regularization\nas all other features.\nTo lessen the effect of regularization on synthetic feature weight\n(and therefore on the intercept) intercept_scaling has to be increased.\n", "editor": null, "label": "intercept_scaling", "order": 3, "type": "string", "value": "1.0"}, "fit_intercept": {"description": "Specifies if a constant (a.k.a. bias or intercept) should be\nadded to the decision function.\n", "editor": null, "label": "fit_intercept", "order": 4, "type": "string", "value": "True"}, "random_state": {"description": "The seed of the pseudo random number generator to use when\nshuffling the data. Used only in solvers 'sag' and 'liblinear'.\n", "editor": null, "label": "random_state", "order": 5, "type": "string", "value": "None"}, "max_iter": {"description": "Useful only for the newton-cg, sag and lbfgs solvers.\nMaximum number of iterations taken for the solvers to converge.\n", "editor": null, "label": "max_iter", "order": 6, "type": "string", "value": "100"}, "penalty": {"description": "Used to specify the norm used in the penalization. The 'newton-cg',\n'sag' and 'lbfgs' solvers support only l2 penalties.\n", "editor": null, "label": "penalty", "order": 7, "type": "string", "value": "l2"}, "multi_class": {"description": "Multiclass option can be either 'ovr' or 'multinomial'. If the option\nchosen is 'ovr', then a binary problem is fit for each label. Else\nthe loss minimised is the multinomial loss fit across\nthe entire probability distribution. Works only for the 'newton-cg',\n'sag' and 'lbfgs' solver.\n\n.. versionadded:: 0.18\n   Stochastic Average Gradient descent solver for 'multinomial' case.\n", "editor": null, "label": "multi_class", "order": 8, "type": "string", "value": "ovr"}, "tol": {"description": "Tolerance for stopping criteria.\n", "editor": null, "label": "tol", "order": 9, "type": "string", "value": "0.0001"}, "dual": {"description": "Dual or primal formulation. Dual formulation is only implemented for\nl2 penalty with liblinear solver. Prefer dual=False when\nn_samples > n_features.\n", "editor": null, "label": "dual", "order": 10, "type": "string", "value": "False"}, "solver": {"description": "Algorithm to use in the optimization problem.\n\n- For small datasets, 'liblinear' is a good choice, whereas 'sag' is\n    faster for large ones.\n- For multiclass problems, only 'newton-cg', 'sag' and 'lbfgs' handle\n    multinomial loss; 'liblinear' is limited to one-versus-rest\n    schemes.\n- 'newton-cg', 'lbfgs' and 'sag' only handle L2 penalty.\n\nNote that 'sag' fast convergence is only guaranteed on features with\napproximately the same scale. You can preprocess the data with a\nscaler from sklearn.preprocessing.\n\n.. versionadded:: 0.17\n   Stochastic Average Gradient descent solver.\n", "editor": null, "label": "solver", "order": 11, "type": "string", "value": "liblinear"}, "class_weight": {"description": "Weights associated with classes in the form ``{class_label: weight}``.\nIf not given, all classes are supposed to have weight one.\n\nThe \"balanced\" mode uses the values of y to automatically adjust\nweights inversely proportional to class frequencies in the input data\nas ``n_samples / (n_classes * np.bincount(y))``.\n\nNote that these weights will be multiplied with sample_weight (passed\nthrough the fit method) if sample_weight is specified.\n\n.. versionadded:: 0.17\n   *class_weight='balanced'* instead of deprecated\n   *class_weight='auto'*.\n", "editor": null, "label": "class_weight", "order": 12, "type": "string", "value": "None"}}]]></parameters>
    <ports>
      <output key="model" requiresdata="False" scheme="hdf5" type="model" type_base="model" uuid="{f721f26d-fe38-4dc0-a1d7-3535f3f556cf}">
        <label>Model</label>
        <description>Model</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.machinelearning.fit" port_format="1.1" uuid="{58a05e77-4fde-46ff-b25f-f1fd1ee04e40}" width="50.0" x="2000.0" y="2125.0">
    <label>Fit</label>
    <description>Trains a model. Use "Create Input Port &gt; Y" for supervised training</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
    <ports>
      <input key="in-model" requiresdata="False" scheme="hdf5" type="model" type_base="model" uuid="{12032f93-ae0b-482a-8ca5-ad148b53e984}">
        <label>Input model</label>
        <description>Input model</description>
      </input>
      <input key="X" requiresdata="False" scheme="hdf5" type="table" type_base="table" uuid="{00b5a162-8d36-42c3-a884-dc86fe945e57}">
        <label>X</label>
        <description>X</description>
      </input>
      <input key="Y0" requiresdata="True" scheme="hdf5" type="table" type_base="table" uuid="{e6ed8e8b-7928-47c5-b249-de76ff41d322}">
        <label>Y</label>
        <description>Y</description>
      </input>
      <output key="out-model" requiresdata="False" scheme="hdf5" type="model" type_base="model" uuid="{3c5160d6-8b58-4d9d-ba52-a8bb02b2af32}">
        <label>Output model</label>
        <description>Output model</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.machinelearning.predict_proba" uuid="{7676b73c-b38b-4f3c-88fd-b8e7a85a00ee}" width="50.0" x="2175.0" y="2050.0">
    <label>Predict probabilities</label>
    <description>Uses a model to predict Y given X and returns the estimatedprobabilities for each class in Y</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group", "names method": {"description": "Method used to generate output names", "label": "Output names", "order": 0, "type": "string", "value": "From classes", "editor": {"type": "combobox", "options": ["From classes", "By index", "From model Y names"]}}}]]></parameters>
    <ports>
      <input key="in-model" requiresdata="False" scheme="hdf5" type="model" type_base="model" uuid="{ddad332f-fc9e-4114-8d2b-d2dbebaa9998}">
        <label>Input model</label>
        <description>Input model</description>
      </input>
      <input key="X" requiresdata="False" scheme="hdf5" type="table" type_base="table" uuid="{5b0a3116-9e3a-4c9b-aab0-bff9db1cb911}">
        <label>X</label>
        <description>X</description>
      </input>
      <output key="Y" requiresdata="False" scheme="hdf5" type="table" type_base="table" uuid="{dc202d9b-8db1-4a4c-8a9c-7200a4bdabc2}">
        <label>Y</label>
        <description>Y</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.machinelearning.confusion" uuid="{7d2302f1-d456-4912-8e4f-b28ff2703b64}" width="50.0" x="2375.0" y="2250.0">
    <label>Confusion matrix</label>
    <description>Computes the confusion matrix given predictions and true Y-values.</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group", "include heading": {"description": "Adds a columns with used class names", "editor": null, "label": "include heading", "order": 0, "type": "string", "value": "True"}, "labels": {"description": "List of labels to index the matrix. This may be used to reorder\nor select a subset of labels.\nIf none is given, those that appear at least once\nin ``y_true`` or ``y_pred`` are used in sorted order.\n", "editor": null, "label": "labels", "order": 1, "type": "string", "value": ""}}]]></parameters>
    <ports>
      <input key="Y-pred" requiresdata="False" scheme="hdf5" type="table" type_base="table" uuid="{e91837ae-55db-4f53-bb5a-7ab4941bd84b}">
        <label>Y-pred</label>
        <description>Y-pred</description>
      </input>
      <input key="Y-true" requiresdata="False" scheme="hdf5" type="table" type_base="table" uuid="{d01cdac4-24f1-423c-accf-82ac25b18ef1}">
        <label>Y-true</label>
        <description>Y-true</description>
      </input>
      <output key="confusion-matrix" requiresdata="False" scheme="hdf5" type="table" type_base="table" uuid="{907a379c-b2b5-4db7-8256-6f1cfa1cb019}">
        <label>confusion-matrix</label>
        <description>confusion-matrix</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.machinelearning.example_datasets" uuid="{bb3e386e-3d00-414a-8142-b137c2813945}" width="50.0" x="1700.0" y="2125.0">
    <label>Example datasets</label>
    <description>Exposes the example datasets from sklearn</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group", "dataset": {"description": "Choose from one of the default toy datasets", "label": "Dataset", "order": 0, "type": "string", "value": "Iris", "editor": {"type": "combobox", "options": ["Digits", "Boston", "Diabetes", "linnerud", "Iris"]}}, "classnames": {"description": "Attempts to use class names as Y", "editor": null, "label": "Class names", "order": 1, "type": "boolean", "value": true}}]]></parameters>
    <ports>
      <output key="X" requiresdata="False" scheme="hdf5" type="table" type_base="table" uuid="{46514031-a2df-4782-98b9-de7fe1ea56ef}">
        <label>X</label>
        <description>X</description>
      </output>
      <output key="Y" requiresdata="False" scheme="hdf5" type="table" type_base="table" uuid="{84bdd7b5-61ec-47c2-8737-53884970491b}">
        <label>Y</label>
        <description>Y</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.machinelearning.predict" uuid="{f4cb749e-99e5-452d-9e33-9373d90d71e3}" width="50.0" x="2175.0" y="2175.0">
    <label>Predict</label>
    <description>Uses a model to predict Y given X</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
    <ports>
      <input key="in-model" requiresdata="False" scheme="hdf5" type="model" type_base="model" uuid="{1b19da58-cbc8-4a23-97ac-21b0d3210b66}">
        <label>Input model</label>
        <description>Input model</description>
      </input>
      <input key="X" requiresdata="False" scheme="hdf5" type="table" type_base="table" uuid="{c0334170-3706-4752-8ec6-ede0dbfe14c4}">
        <label>X</label>
        <description>X</description>
      </input>
      <output key="Y" requiresdata="False" scheme="hdf5" type="table" type_base="table" uuid="{09fd38ea-ab65-4f61-9b70-bb17afd53609}">
        <label>Y</label>
        <description>Y</description>
      </output>
    </ports>
  </node>
  <connection type="table" uuid="{1820bd76-fea5-429c-a316-e750a54796c4}">
    <source node="{7676b73c-b38b-4f3c-88fd-b8e7a85a00ee}" port="{dc202d9b-8db1-4a4c-8a9c-7200a4bdabc2}"/>
    <destination node="{1ccc2d5a-a495-405d-bd36-c60a0c41991e}" port="{71c5c664-981e-45b7-8283-1f9e4b0fcd3c}"/>
  </connection>
  <connection type="table" uuid="{2aa38d78-a75e-4def-bb5a-09d871e50936}">
    <source node="{bb3e386e-3d00-414a-8142-b137c2813945}" port="{84bdd7b5-61ec-47c2-8737-53884970491b}"/>
    <destination node="{58a05e77-4fde-46ff-b25f-f1fd1ee04e40}" port="{e6ed8e8b-7928-47c5-b249-de76ff41d322}"/>
  </connection>
  <connection type="model" uuid="{2c586e72-3ca0-47ea-b608-cd4a86bd3c40}">
    <source node="{4e45a2e1-bdee-49b2-9db6-15adc4684c82}" port="{f721f26d-fe38-4dc0-a1d7-3535f3f556cf}"/>
    <destination node="{58a05e77-4fde-46ff-b25f-f1fd1ee04e40}" port="{12032f93-ae0b-482a-8ca5-ad148b53e984}"/>
  </connection>
  <connection type="table" uuid="{5c3c0788-450d-43fd-b0d3-22c333ce47a6}">
    <source node="{f4cb749e-99e5-452d-9e33-9373d90d71e3}" port="{09fd38ea-ab65-4f61-9b70-bb17afd53609}"/>
    <destination node="{7d2302f1-d456-4912-8e4f-b28ff2703b64}" port="{e91837ae-55db-4f53-bb5a-7ab4941bd84b}"/>
  </connection>
  <connection type="model" uuid="{63d108ff-2a6c-4f71-8ad6-db24dac0857a}">
    <source node="{58a05e77-4fde-46ff-b25f-f1fd1ee04e40}" port="{3c5160d6-8b58-4d9d-ba52-a8bb02b2af32}"/>
    <destination node="{f4cb749e-99e5-452d-9e33-9373d90d71e3}" port="{1b19da58-cbc8-4a23-97ac-21b0d3210b66}"/>
  </connection>
  <connection type="table" uuid="{898af97c-f544-40d8-b3b3-394bc3ddb4d0}">
    <source node="{bb3e386e-3d00-414a-8142-b137c2813945}" port="{46514031-a2df-4782-98b9-de7fe1ea56ef}"/>
    <destination node="{58a05e77-4fde-46ff-b25f-f1fd1ee04e40}" port="{00b5a162-8d36-42c3-a884-dc86fe945e57}"/>
  </connection>
  <connection type="table" uuid="{9e755755-65f7-475f-9ff6-705b24e4a90d}">
    <source node="{bb3e386e-3d00-414a-8142-b137c2813945}" port="{84bdd7b5-61ec-47c2-8737-53884970491b}"/>
    <destination node="{422b7cef-3947-46c3-811e-622ad8db9e60}" port="{84fda6a2-44ba-424a-bf96-85b67a7f4c25}"/>
  </connection>
  <connection type="table" uuid="{afcbdd9e-c2e9-44b0-a07f-4f80e41458ca}">
    <source node="{1ccc2d5a-a495-405d-bd36-c60a0c41991e}" port="{20ecb24f-86c1-4364-aa65-2137137b4c00}"/>
    <destination node="{422b7cef-3947-46c3-811e-622ad8db9e60}" port="{7f2357f6-3387-4ab3-8738-a926c9afc231}"/>
  </connection>
  <connection type="table" uuid="{b9733aaa-fa72-49cf-89a1-2147c64dac04}">
    <source node="{bb3e386e-3d00-414a-8142-b137c2813945}" port="{46514031-a2df-4782-98b9-de7fe1ea56ef}"/>
    <destination node="{f4cb749e-99e5-452d-9e33-9373d90d71e3}" port="{c0334170-3706-4752-8ec6-ede0dbfe14c4}"/>
  </connection>
  <connection type="model" uuid="{c0e510f4-15b3-4c93-9395-61852a73afa5}">
    <source node="{58a05e77-4fde-46ff-b25f-f1fd1ee04e40}" port="{3c5160d6-8b58-4d9d-ba52-a8bb02b2af32}"/>
    <destination node="{7676b73c-b38b-4f3c-88fd-b8e7a85a00ee}" port="{ddad332f-fc9e-4114-8d2b-d2dbebaa9998}"/>
  </connection>
  <connection type="table" uuid="{da16683e-aeff-4a9f-95dd-0b8f2b86fb78}">
    <source node="{bb3e386e-3d00-414a-8142-b137c2813945}" port="{46514031-a2df-4782-98b9-de7fe1ea56ef}"/>
    <destination node="{7676b73c-b38b-4f3c-88fd-b8e7a85a00ee}" port="{5b0a3116-9e3a-4c9b-aab0-bff9db1cb911}"/>
  </connection>
  <connection type="table" uuid="{fbcc59dc-3ad0-4381-b2cf-11a102971278}">
    <source node="{bb3e386e-3d00-414a-8142-b137c2813945}" port="{84bdd7b5-61ec-47c2-8737-53884970491b}"/>
    <destination node="{7d2302f1-d456-4912-8e4f-b28ff2703b64}" port="{d01cdac4-24f1-423c-accf-82ac25b18ef1}"/>
  </connection>
</flow>
