<?xml version='1.0' encoding='US-ASCII'?>
<flow xmlns="http://www.sysess.org/sympathyfordata/workflow/1.0" cls="Flow" height="50.0" uuid="{72e31a0e-480a-4c3d-aca6-4e83319b8ae3}" width="50.0" x="0.0" y="0.0" id="">
  <label>node_fx</label>
  <description></description>
  <author>Unknown</author>
  <copyright></copyright>
  <version>1.0</version>
  <min_version></min_version>
  <icon/>
  <aggregation type="json">null</aggregation>
  <libraries type="json">[]</libraries>
  <pythonpaths type="json">[]</pythonpaths>
  <parameters type="json">{}</parameters>
  <ports/>
  <node id="org.sysess.sympathy.data.fx" port_format="1.1" uuid="{2638a278-03b1-43e6-88e2-48128492d8be}" x="1925.0" y="2125.0">
    <label>F(x) Generic Print</label>
    <description>Select and apply functions to item.</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "copy_input": {"description": "If enabled the incoming data will be copied to the output before running the nodes.", "editor": null, "label": "Copy input", "order": 0, "type": "boolean", "value": true}, "clean_output": {"description": "If disabled the incoming data will be copied to the output before running the nodes.", "editor": null, "label": "Clean output", "order": 0, "type": "boolean", "value": true}, "selected_functions": {"description": "Choose one or many of the listed functions to apply to the content of the incoming item.", "label": "Select functions", "order": 1, "passthrough": false, "type": "list", "list": ["GenericPrintCalculation", "SingleSpamCalculation"], "value": [0], "value_names": ["GenericPrintCalculation"], "editor": {"buttons": true, "filter": true, "passthrough": true, "selection": "multi", "type": "listview"}}}</parameters>
    <ports>
      <input key="port1" scheme="text" type="datasource" type_base="datasource" uuid="{59e7016e-941a-4d23-adfd-25eb71cd121f}">
        <label>Path to Python file with scripted functions.</label>
        <description>Path to Python file with scripted functions.</description>
      </input>
      <input key="port2" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{6b0f682e-a802-4822-8fee-700e5cd651e1}">
        <label>Item with data to apply functions on</label>
        <description>Item with data to apply functions on</description>
      </input>
      <output key="port3" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{826dacf4-628e-4f73-b833-facd8b29f41e}">
        <label>Item with the results from the applied functions</label>
        <description>Item with the results from the applied functions</description>
      </output>
      <output key="__sy_out__" scheme="hdf5" type="text" type_base="text" uuid="{89b1df8f-e981-4d41-a4cb-a26866d2da5b}">
        <label>Output Text</label>
        <description>Output Text</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.generic.fxlist" port_format="1.1" uuid="{4342f920-d87a-4eb2-b184-b2d53ce7a273}" x="1925.0" y="2275.0">
    <label>F(x) List Single Spam</label>
    <description>Select and apply functions to List.</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "copy_input": {"description": "If enabled the incoming data will be copied to the output before running the nodes.", "editor": null, "label": "Copy input", "order": 0, "type": "boolean", "value": true}, "clean_output": {"description": "If disabled the incoming data will be copied to the output before running the nodes.", "editor": null, "label": "Clean output", "order": 0, "type": "boolean", "value": true}, "selected_functions": {"description": "Choose one or many of the listed functions to apply to the content of the incoming item.", "label": "Select functions", "order": 1, "passthrough": false, "type": "list", "list": ["GenericPrintCalculation", "SingleSpamCalculation"], "value": [1], "value_names": ["SingleSpamCalculation"], "editor": {"buttons": true, "filter": true, "passthrough": true, "selection": "multi", "type": "listview"}}, "same_length_res": {"description": "Use this checkbox if you want to gather all the results generated from an incoming item into a common output. This requires that the results will all have the same length. An exception will be raised if the lengths of the outgoing results differ.", "editor": null, "label": "Put results in common outputs", "order": 2, "type": "boolean", "value": true}}</parameters>
    <ports>
      <input key="port1" scheme="text" type="datasource" type_base="datasource" uuid="{8e2ab3ab-d93b-4edd-b827-1adc7b5ce05e}">
        <label>Path to Python file with scripted functions.</label>
        <description>Path to Python file with scripted functions.</description>
      </input>
      <input key="port2" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{cb66d752-61dc-473c-ba7e-1eb40ac93235}">
        <label>List with data to apply functions on</label>
        <description>List with data to apply functions on</description>
      </input>
      <output key="port3" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{cfa8e264-1486-4806-9d76-d0d3a8f9926f}">
        <label>List with function(s) applied</label>
        <description>List with function(s) applied</description>
      </output>
      <output key="__sy_out__" scheme="hdf5" type="text" type_base="text" uuid="{a6419d52-cd00-4968-a01b-c2a5bde21f32}">
        <label>Output Text</label>
        <description>Output Text</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.getitemlist" uuid="{605e2249-aa79-49a5-b218-f530e2b05061}" x="1800.0" y="2125.0">
    <label>Get Item List</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "index": {"description": "Choose item index in list.", "label": "Index", "order": 0, "passthrough": false, "type": "list", "list": ["0"], "value": [0], "value_names": [], "editor": {"type": "combobox"}}}</parameters>
    <ports>
      <input key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{ebcbdf79-09f6-4215-8300-d68a3a3c4d26}">
        <label>Input List</label>
        <description>Input List</description>
      </input>
      <output key="item" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{b2bf503d-b786-49b7-8dc0-f3fb269d5618}">
        <label>Output selected Item from List</label>
        <description>Output selected Item from List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.renametablecolumns" uuid="{8287da88-83e1-4a72-a454-99f3691be2f5}" x="1675.0" y="2125.0">
    <label>Rename columns in Tables</label>
    <description>Rename the Table columns by using regular expressions.</description>
    <author>Greger Cronquist &lt;greger.cronquist@combine.se&gt;</author>
    <copyright>(c) 2013 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "src_expr": {"description": "Specify the regular expression which will be replaced", "editor": null, "label": "Search expression", "order": 0, "type": "string", "value": "^(0)$"}, "dst_expr": {"description": "Specify the regular expression for replacement", "editor": null, "label": "Replacement expression", "order": 1, "type": "string", "value": "spam"}}</parameters>
    <ports>
      <input key="Input" scheme="hdf5" type="[table]" type_base="[table]" uuid="{9babc628-5dbf-4f72-8f80-0260b03da38e}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="Output" scheme="hdf5" type="[table]" type_base="[table]" uuid="{02507082-fae5-471f-a71c-3b1f34cc02ca}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.fx" port_format="1.1" uuid="{8fe27400-a16a-4077-92d2-e937c30b8cf3}" x="1925.0" y="2200.0">
    <label>F(x) Single Spam</label>
    <description>Select and apply functions to item.</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "copy_input": {"description": "If enabled the incoming data will be copied to the output before running the nodes.", "editor": null, "label": "Copy input", "order": 0, "type": "boolean", "value": true}, "clean_output": {"description": "If disabled the incoming data will be copied to the output before running the nodes.", "editor": null, "label": "Clean output", "order": 0, "type": "boolean", "value": true}, "selected_functions": {"description": "Choose one or many of the listed functions to apply to the content of the incoming item.", "label": "Select functions", "order": 1, "passthrough": false, "type": "list", "list": ["SingleSpamCalculation", "GenericPrintCalculation"], "value": [0], "value_names": ["SingleSpamCalculation"], "editor": {"buttons": true, "filter": true, "passthrough": true, "selection": "multi", "type": "listview"}}}</parameters>
    <ports>
      <input key="port1" scheme="text" type="datasource" type_base="datasource" uuid="{c5fec3c2-7b86-4388-b571-fbf9604fcf6d}">
        <label>Path to Python file with scripted functions.</label>
        <description>Path to Python file with scripted functions.</description>
      </input>
      <input key="port2" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{e87c66e9-8286-439e-b26b-8e28278f8b00}">
        <label>Item with data to apply functions on</label>
        <description>Item with data to apply functions on</description>
      </input>
      <output key="port3" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{325f9917-bf86-4595-adeb-5cdc8296c59a}">
        <label>Item with the results from the applied functions</label>
        <description>Item with the results from the applied functions</description>
      </output>
      <output key="__sy_out__" scheme="hdf5" type="text" type_base="text" uuid="{b1b2d2ec-9a84-4293-9e70-5b429b591957}">
        <label>Output Text</label>
        <description>Output Text</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.datasources.filedatasource" uuid="{9d579c6c-186d-4a42-9ece-bb8b54439053}" x="1550.0" y="2350.0">
    <label>Datasource</label>
    <description>Select a data source.</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.1</version>
    <parameters type="json">{"type": "group", "use_relative_path": {"description": "Use the relative path to the file.", "editor": null, "label": "Use relative path", "order": 0, "type": "boolean", "value": true}, "filename": {"description": "A filename including path if needed", "label": "Filename", "order": 1, "type": "string", "value": "fx_functions.py", "editor": {"type": "filename", "filter": ["Any files (*)"]}}, "db_driver": {"description": "Database driver to use.", "label": "Database driver", "order": 2, "passthrough": false, "type": "list", "list": ["SQL Server"], "value": [0], "value_names": [], "editor": {"type": "combobox"}}, "db_servername": {"description": "A valid name to a database server.", "editor": null, "label": "Server name", "order": 3, "type": "string", "value": ""}, "db_databasename": {"description": "The name of the database.", "editor": null, "label": "Database name", "order": 4, "type": "string", "value": ""}, "db_user": {"description": "A valid database user.", "editor": null, "label": "User", "order": 5, "type": "string", "value": ""}, "db_password": {"description": "A valid password for the selected user.", "editor": null, "label": "Password", "order": 6, "type": "string", "value": ""}, "db_connection_string": {"description": "A connection string that will override other settings.", "editor": null, "label": "Connection string", "order": 7, "type": "string", "value": ""}, "datasource_type": {"description": "Type of datasource.", "editor": null, "label": "Datasource type", "order": 8, "passthrough": false, "type": "list", "list": ["File", "Database"], "value": [0], "value_names": []}}</parameters>
    <ports>
      <output key="port1" scheme="text" type="datasource" type_base="datasource" uuid="{176f2c10-d6b2-4c8d-80b8-6cf75b2b9eaf}">
        <label>Datasource with path to file</label>
        <description>Datasource with path to file</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.generic.fxlist" port_format="1.1" uuid="{c30c457b-7ddd-4da4-baa1-c65a1631df3f}" x="1925.0" y="2350.0">
    <label>F(x) List Pass Through</label>
    <description>Select and apply functions to List.</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "copy_input": {"description": "If enabled the incoming data will be copied to the output before running the nodes.", "editor": null, "label": "Copy input", "order": 0, "type": "boolean", "value": true}, "clean_output": {"description": "If disabled the incoming data will be copied to the output before running the nodes.", "editor": null, "label": "Clean output", "order": 0, "type": "boolean", "value": true}, "selected_functions": {"description": "Choose one or many of the listed functions to apply to the content of the incoming item.", "label": "Select functions", "mode": "passthrough", "order": 1, "type": "list", "list": ["GenericPrintCalculation", "SingleSpamCalculation"], "value": [], "value_names": [], "editor": {"buttons": true, "edit": false, "filter": true, "mode": true, "selection": "multi", "type": "listview"}}, "same_length_res": {"description": "Use this checkbox if you want to gather all the results generated from an incoming item into a common output. This requires that the results will all have the same length. An exception will be raised if the lengths of the outgoing results differ.", "editor": null, "label": "Put results in common outputs", "order": 2, "type": "boolean", "value": true}}</parameters>
    <ports>
      <input key="port1" scheme="text" type="datasource" type_base="datasource" uuid="{df152055-104a-4f53-99d2-a6db3e686228}">
        <label>Path to Python file with scripted functions.</label>
        <description>Path to Python file with scripted functions.</description>
      </input>
      <input key="port2" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{c19d8395-3ec0-4c2b-a4b9-edbe57191203}">
        <label>List with data to apply functions on</label>
        <description>List with data to apply functions on</description>
      </input>
      <output key="port3" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{86cf64ae-53ac-4374-8fa9-5969d5d174cb}">
        <label>List with function(s) applied</label>
        <description>List with function(s) applied</description>
      </output>
      <output key="__sy_both__" scheme="hdf5" type="text" type_base="text" uuid="{b9f2e45c-a9aa-41bd-95b5-7f432cd7807e}">
        <label>Output and Warning Text</label>
        <description>Output and Warning Text</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.random.randomtables" uuid="{faa1a7c5-6b18-45b6-8678-b5b864d01e6a}" x="1550.0" y="2125.0">
    <label>Random Tables</label>
    <description>Random Tables generator.</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "column_entries": {"description": "The number of column entries to be generated.", "label": "Column entries", "order": 0, "type": "integer", "value": 2, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}, "column_length": {"description": "The length of columns to be generated.", "label": "Column length", "order": 1, "type": "integer", "value": 2, "editor": {"max": 100000000, "min": 0, "step": 1, "type": "spinbox"}}, "length": {"description": "The length of table list to be generated.", "label": "Table list length", "order": 2, "type": "integer", "value": 2, "editor": {"max": 10000, "min": 0, "step": 1, "type": "spinbox"}}}</parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="[table]" type_base="[table]" uuid="{6da95b73-d0ea-4da5-8299-f75ca810aadd}">
        <label>Tables with random numbers. The specifications of the Tables are declared in the configuration.</label>
        <description>Tables with random numbers. The specifications of the Tables are declared in the configuration.</description>
      </output>
    </ports>
  </node>
  <connection type="datasource" uuid="{3b425dc6-8b2a-49f3-9a43-a5e2ad749448}">
    <source node="{9d579c6c-186d-4a42-9ece-bb8b54439053}" port="{176f2c10-d6b2-4c8d-80b8-6cf75b2b9eaf}"/>
    <destination node="{c30c457b-7ddd-4da4-baa1-c65a1631df3f}" port="{df152055-104a-4f53-99d2-a6db3e686228}"/>
  </connection>
  <connection type="[table]" uuid="{4d62af82-6cc6-45d5-8bed-27a17c15b0ac}">
    <source node="{faa1a7c5-6b18-45b6-8678-b5b864d01e6a}" port="{6da95b73-d0ea-4da5-8299-f75ca810aadd}"/>
    <destination node="{8287da88-83e1-4a72-a454-99f3691be2f5}" port="{9babc628-5dbf-4f72-8f80-0260b03da38e}"/>
  </connection>
  <connection type="[table]" uuid="{87bef2c5-310a-4069-bd80-ab445acd560d}">
    <source node="{8287da88-83e1-4a72-a454-99f3691be2f5}" port="{02507082-fae5-471f-a71c-3b1f34cc02ca}"/>
    <destination node="{c30c457b-7ddd-4da4-baa1-c65a1631df3f}" port="{c19d8395-3ec0-4c2b-a4b9-edbe57191203}"/>
  </connection>
  <connection type="[table]" uuid="{9589c98d-9d23-4eb2-ae84-a02e75f98629}">
    <source node="{8287da88-83e1-4a72-a454-99f3691be2f5}" port="{02507082-fae5-471f-a71c-3b1f34cc02ca}"/>
    <destination node="{605e2249-aa79-49a5-b218-f530e2b05061}" port="{ebcbdf79-09f6-4215-8300-d68a3a3c4d26}"/>
  </connection>
  <connection type="datasource" uuid="{b93e528d-83f8-4821-a910-605c22d0f1d8}">
    <source node="{9d579c6c-186d-4a42-9ece-bb8b54439053}" port="{176f2c10-d6b2-4c8d-80b8-6cf75b2b9eaf}"/>
    <destination node="{8fe27400-a16a-4077-92d2-e937c30b8cf3}" port="{c5fec3c2-7b86-4388-b571-fbf9604fcf6d}"/>
  </connection>
  <connection type="datasource" uuid="{c083aa1f-a429-45bb-9215-e2ec915abaac}">
    <source node="{9d579c6c-186d-4a42-9ece-bb8b54439053}" port="{176f2c10-d6b2-4c8d-80b8-6cf75b2b9eaf}"/>
    <destination node="{4342f920-d87a-4eb2-b184-b2d53ce7a273}" port="{8e2ab3ab-d93b-4edd-b827-1adc7b5ce05e}"/>
  </connection>
  <connection type="[table]" uuid="{cd36a274-6799-414c-affb-3d83178d83f3}">
    <source node="{8287da88-83e1-4a72-a454-99f3691be2f5}" port="{02507082-fae5-471f-a71c-3b1f34cc02ca}"/>
    <destination node="{4342f920-d87a-4eb2-b184-b2d53ce7a273}" port="{cb66d752-61dc-473c-ba7e-1eb40ac93235}"/>
  </connection>
  <connection type="table" uuid="{dd25ab2c-036f-4cce-9d80-f4c71bafa7b8}">
    <source node="{605e2249-aa79-49a5-b218-f530e2b05061}" port="{b2bf503d-b786-49b7-8dc0-f3fb269d5618}"/>
    <destination node="{8fe27400-a16a-4077-92d2-e937c30b8cf3}" port="{e87c66e9-8286-439e-b26b-8e28278f8b00}"/>
  </connection>
  <connection type="table" uuid="{e0b64eb0-bf83-45c3-a193-41fd37f73905}">
    <source node="{605e2249-aa79-49a5-b218-f530e2b05061}" port="{b2bf503d-b786-49b7-8dc0-f3fb269d5618}"/>
    <destination node="{2638a278-03b1-43e6-88e2-48128492d8be}" port="{6b0f682e-a802-4822-8fee-700e5cd651e1}"/>
  </connection>
  <connection type="datasource" uuid="{e92035e0-824c-4b76-b693-7f3830d4f8ba}">
    <source node="{9d579c6c-186d-4a42-9ece-bb8b54439053}" port="{176f2c10-d6b2-4c8d-80b8-6cf75b2b9eaf}"/>
    <destination node="{2638a278-03b1-43e6-88e2-48128492d8be}" port="{59e7016e-941a-4d23-adfd-25eb71cd121f}"/>
  </connection>
</flow>
