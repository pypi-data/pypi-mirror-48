<?xml version='1.0' encoding='US-ASCII'?>
<flow xmlns="http://www.sysess.org/sympathyfordata/workflow/1.0" cls="Flow" height="50.0" uuid="{4ae9288a-6ef6-41a3-8d1a-6f0f19c973f4}" width="50.0" x="0.0" y="0.0" id="">
  <label></label>
  <description></description>
  <author></author>
  <copyright></copyright>
  <version></version>
  <min_version></min_version>
  <icon/>
  <aggregation type="json">null</aggregation>
  <libraries type="json">[]</libraries>
  <pythonpaths type="json">[]</pythonpaths>
  <parameters type="json">{}</parameters>
  <ports/>
  <node id="org.sysess.sympathy.list.itemtolist" uuid="{08f8cd18-0c1d-43fc-b83e-d961615d9342}" x="1575.0" y="1600.0">
    <label>Item to List</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="item" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{4b07f310-73ca-42a7-8ae8-40a6f5fdd57c}">
        <label>Input Item</label>
        <description>Input Item</description>
      </input>
      <output key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{f7b5dc74-0b2e-4389-9f12-88662f246733}">
        <label>Item as List</label>
        <description>Item as List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.visualize.plottable" uuid="{09285c2b-ff52-4d3a-af92-d050ca980a43}" x="1425.0" y="1600.0">
    <label>Plot Table</label>
    <description>Plot Table</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2014 Combine Control Systems AB</copyright>
    <version>0.6</version>
    <parameters type="json">{"type": "group", "plots model": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "{\n    \"Plots\": [\n        {\n            \"Show annotation\": false, \n            \"Statistics\": [\n                \"Std\", \n                \"Mean\", \n                \"Min\", \n                \"Max\"\n            ], \n            \"Title\": \"Title\", \n            \"Statistics_signals\": [\n                \"New signal 0\"\n            ], \n            \"Axes\": [\n                {\n                    \"Scale\": \"linear\", \n                    \"Limits\": [\n                        \"\", \n                        \"\"\n                    ], \n                    \"Ticks\": [\n                        \"\", \n                        \"\"\n                    ], \n                    \"Label\": \"X\", \n                    \"Grid\": \"nothing\", \n                    \"Id\": \"26ae2a9d-5d30-44ce-a361-3283b9acbf2e\"\n                }, \n                {\n                    \"Scale\": \"linear\", \n                    \"Limits\": [\n                        \"\", \n                        \"\"\n                    ], \n                    \"Ticks\": [\n                        \"\", \n                        \"\"\n                    ], \n                    \"Label\": \"Y\", \n                    \"Grid\": \"nothing\", \n                    \"Id\": \"bfdbab9e-cbc3-4819-a511-61dfbd32c392\"\n                }\n            ], \n            \"Limit low\": {}, \n            \"Show statistics\": false, \n            \"Signals\": [\n                {\n                    \"Marker\": {\n                        \"Edge color\": \"\", \n                        \"Edge width\": \"\", \n                        \"Style\": \"nothing\", \n                        \"Face color\": \"\", \n                        \"Size\": \"\"\n                    }, \n                    \"Line\": {\n                        \"Color\": \"\", \n                        \"Width\": \"\", \n                        \"Style\": \"solid\"\n                    }, \n                    \"Axis\": [\n                        \"X\", \n                        \"Y\"\n                    ], \n                    \"Data\": [\n                        \"index\", \n                        \"cosines1\"\n                    ], \n                    \"Label\": \"New signal 0\"\n                }\n            ], \n            \"Show selectors\": false, \n            \"Limit high\": {}, \n            \"Limits low\": {}, \n            \"Limits index factor\": [\n                null, \n                null\n            ], \n            \"Show legend\": true, \n            \"Plot type\": \"Plot\", \n            \"Limits high\": {}\n        }\n    ]\n}"}}</parameters>
    <ports>
      <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{819f1f4f-e233-4be8-936c-061928c1efbe}">
        <label>Input Table</label>
        <description>Input Table</description>
      </input>
      <output key="output" scheme="hdf5" type="table" type_base="table" uuid="{4b31a190-6fa4-4bee-b236-020ddfec020c}">
        <label>Output Table with "plots model" attribute</label>
        <description>Output Table with "plots model" attribute</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.generate.signaltable" uuid="{2bf39197-81e7-4ea6-84e4-406dec171efd}" x="1161.0" y="1751.0">
    <label>Generate Signal Table
Cosine</label>
    <description></description>
    <author>Benedikt Ziegler &lt;benedikt.ziegler@combine.se&gt;</author>
    <copyright>(C) 2016 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "table_params": {"label": "Table", "order": 0, "type": "page", "column_entries": {"description": "The number of column entries to be generated.", "label": "Column entries", "order": 0, "type": "integer", "value": 3, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}, "column_length": {"description": "The length of columns to be generated.", "label": "Column length", "order": 1, "type": "integer", "value": 1000, "editor": {"max": 100000000, "min": 0, "step": 1, "type": "spinbox"}}}, "signal_params": {"label": "Signal", "order": 1, "type": "page", "signal_type": {"description": "The signal to be generated.", "label": "Signal type", "order": 0, "passthrough": false, "type": "list", "list": ["cosines", "sinus", "tangent"], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}, "amplitude": {"description": "The amplitude of the signal to be generated.", "editor": null, "label": "Amplitude", "order": 1, "type": "float", "value": 1.0}, "frequency": {"description": "The frequency of the signal to be generated.", "editor": null, "label": "Frequency", "order": 2, "type": "float", "value": 0.01}, "period": {"description": "The period of the signal to be generated.", "editor": null, "label": "Period", "order": 3, "type": "float", "value": 100.0}, "use_period": {"description": "Use Period [Checked] or Frequency [Unchecked] to generate the signal.", "editor": null, "label": "Period or Frequency", "order": 4, "type": "boolean", "value": true}, "phase_offset": {"description": "The phase offset of the signal to be generated.", "editor": null, "label": "Phase offset", "order": 5, "type": "float", "value": 0.0}, "add_noise": {"description": "If random noise should be added to the signals.", "editor": null, "label": "Add random noise", "order": 6, "type": "boolean", "value": false}, "noise_amplitude": {"description": "The amplitude of the noise.", "label": "Amplitude of noise", "order": 7, "type": "float", "value": 0.01, "editor": {"decimals": 2, "step": 0.05, "type": "spinbox"}}, "index_column": {"description": "Add an index column to the beginning of the table.", "editor": null, "label": "First column as index", "order": 8, "type": "boolean", "value": true}}}</parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="table" type_base="table" uuid="{0b762602-fe21-48d8-aab8-a2da62c88edb}">
        <label>Signal Table</label>
        <description>Signal Table</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.visualize.scatter3dnode" uuid="{93cb83c3-9710-45a0-852c-49da1c1083b3}" x="1425.0" y="1750.0">
    <label>Scatter 3D Table</label>
    <description>A three dimensional plot</description>
    <author>Helena Olen &lt;helena.olen@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "tb_names": {"description": "Combo of all timebasis", "label": "Time basis", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": [], "value": [], "value_names": [], "editor": {"display": null, "edit": false, "include_empty": false, "type": "combobox", "options": []}}, "x_axis": {"description": "X axis selection for plot", "label": "X axis", "mode": "selected", "order": 1, "passthrough": false, "type": "list", "list": ["index", "cosines1", "cosines2"], "value": [0], "value_names": ["index"], "editor": {"display": null, "edit": false, "include_empty": false, "type": "combobox", "options": []}}, "y_axis": {"description": "Y axis selection for plot", "label": "Y axis", "mode": "selected", "order": 2, "passthrough": false, "type": "list", "list": ["index", "cosines1", "cosines2"], "value": [1], "value_names": ["cosines1"], "editor": {"display": null, "edit": false, "include_empty": false, "type": "combobox", "options": []}}, "z_axis": {"description": "Z axis selection for plot", "label": "Z axis", "mode": "selected", "order": 3, "passthrough": false, "type": "list", "list": ["index", "cosines1", "cosines2"], "value": [2], "value_names": ["cosines2"], "editor": {"display": null, "edit": false, "include_empty": false, "type": "combobox", "options": []}}, "line_style": {"description": "Selectable line styles", "label": "Line style", "mode": "selected", "order": 4, "passthrough": false, "type": "list", "list": ["o", "^", "*"], "value": [2], "value_names": ["*"], "editor": {"display": null, "edit": false, "include_empty": false, "type": "combobox", "options": []}}, "plot_func": {"description": "Selectable plot types", "label": "Plot type", "mode": "selected", "order": 5, "passthrough": false, "type": "list", "list": ["scatter", "surf", "wireframe", "plot", "contour", "heatmap"], "value": [2], "value_names": ["wireframe"], "editor": {"display": null, "edit": false, "include_empty": false, "type": "combobox", "options": []}}, "filename_extension": {"description": "Filename extension", "label": "File extension", "mode": "selected", "order": 6, "passthrough": false, "type": "list", "list": [".svg", ".pdf", ".eps", ".png"], "value": [0], "value_names": [".svg"], "editor": {"display": null, "edit": false, "include_empty": false, "type": "combobox", "options": []}}, "directory": {"description": "Select the directory where to export the files.", "label": "Output directory", "type": "string", "value": ".", "editor": {"type": "dirname"}}, "filename": {"description": "Filename without extension.", "editor": null, "label": "Filename", "type": "string", "value": "test"}}</parameters>
    <ports>
      <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{752e71d5-90c0-49e5-afe3-6dfe535ea732}">
        <label>Input Table</label>
        <description>Input Table</description>
      </input>
      <output key="port2" scheme="text" type="datasource" type_base="datasource" uuid="{2f65a600-a88d-4535-a618-fee3bd485e14}">
        <label>Output file</label>
        <description>Output file</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.export.exporttables" uuid="{e208a4e0-2e9b-4587-a54e-7ba5370d7bde}" x="1700.0" y="1600.0">
    <label>Export Tables</label>
    <description>Export Tables</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(c) 2013 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "active_exporter": {"description": "Select data format exporter. Each data format has its own exporter with its own special configuration, see exporter information. The selection of exporter do also suggest filename extension.", "editor": null, "label": "Exporter", "order": 0, "type": "string", "value": "CSV"}, "custom_exporter_data": {"label": "", "order": 1, "type": "group", "CSV": {"label": "", "type": "group", "encoding": {"description": "Character encoding determines how different characters are represented when written to disc, sent over a network, etc.", "label": "Character encoding", "passthrough": false, "type": "list", "list": ["Western (ASCII)", "Western (ISO 8859-1)", "Western (ISO 8859-15)", "Western (Windows 1252)", "UTF-8", "UTF-8 with signature byte"], "value": [4], "value_names": [], "editor": {"type": "combobox", "options": []}}, "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "csv"}, "header": {"description": "Export column names", "editor": null, "label": "Export header", "type": "boolean", "value": true}, "table_names": {"description": "Use table names as filenames", "editor": null, "label": "Use table names as filenames", "type": "boolean", "value": false}}, "HDF5": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "sydata"}, "table_names": {"description": "Use table names as filenames", "editor": null, "label": "Use table names as filenames", "type": "boolean", "value": false}}, "MAT": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "mat"}, "header": {"description": "Export column names", "editor": null, "label": "Export header", "type": "boolean", "value": true}, "table_names": {"description": "Use table names as filenames", "editor": null, "label": "Use table names as filenames", "type": "boolean", "value": false}}, "SQL": {"label": "", "type": "group", "odbc": {"description": "ODBC method to use.", "label": "ODBC method", "order": 0, "passthrough": false, "type": "list", "list": ["default", "pyodbc", "ceODBC"], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}, "connection_string": {"description": "String used by pyodbc to make a connection.", "editor": null, "label": "Connection string", "type": "string", "value": ""}, "db_method": {"description": "Select which Database connection method that you want to use.", "label": "Database connection method", "type": "string", "value": "ODBC", "editor": {"type": "combobox", "options": ["ODBC", "SQLAlchemy"]}}, "db_sqlalchemy_engine_url": {"description": "SQLAlchemy engine URL for connecting to the database", "editor": null, "label": "SQLAlchemy engine URL", "type": "string", "value": "mssql+pyodbc:///"}, "drop_table": {"description": "Drop table before adding data.", "editor": null, "label": "Drop table", "type": "boolean", "value": false}, "table_name": {"description": "The table name used when exporting.", "editor": null, "label": "Table name", "type": "string", "value": ""}, "use_nvarchar_size": {"description": "Use nvarchar(size) instead of nvarchar(MAX).", "editor": null, "label": "Use nvarchar(size)", "type": "boolean", "value": false}}, "SQLite": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "db"}}, "XLS": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "xls"}, "header": {"description": "Export column names", "editor": null, "label": "Export header", "type": "boolean", "value": true}}, "XLSX": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "xlsx"}, "header": {"description": "Export column names", "editor": null, "label": "Export header", "type": "boolean", "value": true}, "table_names": {"description": "Use table names as filenames", "editor": null, "label": "Use table names as filenames", "type": "boolean", "value": false}, "to_plot": {"description": "Select if incoming Tables with plot data should be embedded in the output file. If no plots are present, the option is disabled.", "editor": null, "label": "Embed plot in output file(s)", "type": "boolean", "value": false}, "to_sheets": {"description": "Select if incoming Tables are going to to be exported to sheets in a single file or to a single sheet inmultiple files.", "editor": null, "label": "Export data to sheets", "type": "boolean", "value": false}}}, "directory": {"description": "Select the directory where to export the files.", "label": "Output directory", "order": 2, "type": "string", "value": ".", "editor": {"type": "dirname"}}, "filename": {"description": "Filename without extension.", "editor": null, "label": "Filename", "order": 3, "type": "string", "value": "test"}, "plot": {"description": "If there is a plot attribute in the input tables(s), create a separate file with the plot.", "label": "Output separate plot file with the following extension:", "order": 4, "passthrough": false, "type": "list", "list": ["-", "eps", "pdf", "svg", "png"], "value": [3], "value_names": ["svg"], "editor": {"type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="port0" scheme="hdf5" type="[table]" type_base="[table]" uuid="{8115723e-288c-43b7-ac15-f4abbb76ceb3}">
        <label>Tables to be exported</label>
        <description>Tables to be exported</description>
      </input>
      <output key="port0" scheme="text" type="[datasource]" type_base="[datasource]" uuid="{f3c0869a-d9c7-4e7f-bec6-ac21d4ff6e02}">
        <label>Datasources of exported files</label>
        <description>Datasources of exported files</description>
      </output>
    </ports>
  </node>
  <connection type="table" uuid="{55eb7393-37c8-4e64-99bc-dc3220c92313}">
    <source node="{09285c2b-ff52-4d3a-af92-d050ca980a43}" port="{4b31a190-6fa4-4bee-b236-020ddfec020c}"/>
    <destination node="{08f8cd18-0c1d-43fc-b83e-d961615d9342}" port="{4b07f310-73ca-42a7-8ae8-40a6f5fdd57c}"/>
  </connection>
  <connection type="[table]" uuid="{7cb0d8a1-28fb-40ae-9c80-0058e2f9e1f1}">
    <source node="{08f8cd18-0c1d-43fc-b83e-d961615d9342}" port="{f7b5dc74-0b2e-4389-9f12-88662f246733}"/>
    <destination node="{e208a4e0-2e9b-4587-a54e-7ba5370d7bde}" port="{8115723e-288c-43b7-ac15-f4abbb76ceb3}"/>
  </connection>
  <connection type="table" uuid="{e2fbaee0-4867-4737-a254-7d3c20babbcc}">
    <source node="{2bf39197-81e7-4ea6-84e4-406dec171efd}" port="{0b762602-fe21-48d8-aab8-a2da62c88edb}"/>
    <destination node="{09285c2b-ff52-4d3a-af92-d050ca980a43}" port="{819f1f4f-e233-4be8-936c-061928c1efbe}"/>
  </connection>
  <connection type="table" uuid="{fed631c1-aa9b-43ea-97ba-357f73aa55cc}">
    <source node="{2bf39197-81e7-4ea6-84e4-406dec171efd}" port="{0b762602-fe21-48d8-aab8-a2da62c88edb}"/>
    <destination node="{93cb83c3-9710-45a0-852c-49da1c1083b3}" port="{752e71d5-90c0-49e5-afe3-6dfe535ea732}"/>
  </connection>
  <text color="Beige" height="100.0" uuid="{89473e68-fcbc-4f7b-8d68-c5d7ad89b4e4}" width="150.0" x="1375.0" y="1475.0">Plot Table is an older way of creating plots. The Figure nodes are recommended but this node is isefule for examining data.</text>
  <text color="Beige" height="150.0" uuid="{9e107053-1f54-40ea-b420-50942ec54731}" width="225.0" x="1625.0" y="1425.0">Exporting a plot is done by selecting a file type in the opton for 'Output separate plot file with the following extension:'

The plot can be embedded in XLSX-files too, using the 'Embed plot in output file(s) option.</text>
  <text color="Beige" height="50.0" uuid="{a4b023e3-7a87-48e4-8a2f-d4711969842b}" width="300.0" x="1175.0" y="1850.0">
- Node example: *org.sysess.sympathy.visualize.plottable*
- Node example: *org.sysess.sympathy.visualize.scatter3dnode*</text>
</flow>
