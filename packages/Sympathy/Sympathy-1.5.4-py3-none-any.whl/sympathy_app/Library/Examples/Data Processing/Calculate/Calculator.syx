<?xml version='1.0' encoding='US-ASCII'?>
<flow xmlns="http://www.sysess.org/sympathyfordata/workflow/1.0" cls="Flow" height="50.0" uuid="{4ae9288a-6ef6-41a3-8d1a-6f0f19c973f4}" width="50.0" x="0.0" y="0.0" id="">
  <label></label>
  <description></description>
  <author></author>
  <copyright></copyright>
  <version></version>
  <min_version></min_version>
  <icon/>
  <aggregation type="json">null</aggregation>
  <libraries type="json">[]</libraries>
  <pythonpaths type="json">[]</pythonpaths>
  <parameters type="json">{}</parameters>
  <ports/>
  <node id="org.sysess.sympathy.create.createtable" uuid="{12d04530-5b61-4113-ae88-e9fc232aad39}" x="1725.0" y="2000.0">
    <label>Manually Create Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>(c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "json_table": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "[[\"data1\", \"f\", [0.8, 1.0]], [\"data2\", \"f\", [1.5, 0.1]]]"}}</parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="table" type_base="table" uuid="{501d8bb0-961c-46d2-9597-f93b8d4c0f0b}">
        <label>Manually created table</label>
        <description>Manually created table</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.create.createtable" uuid="{2b32df43-fe6a-4d66-a381-5de4daf6c42e}" x="1725.0" y="2100.0">
    <label>Manually Create Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>(c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "json_table": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "[[\"data1\", \"f\", [0.8, 1.0]], [\"data2\", \"f\", [1.5, 0.1]]]"}}</parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="table" type_base="table" uuid="{934bddab-b025-4f5c-891f-4421371b4583}">
        <label>Manually created table</label>
        <description>Manually created table</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.calculatortable" uuid="{3407b7a4-2156-43b4-b208-ad68d0eb3649}" x="2050.0" y="2000.0">
    <label>Calculator Table</label>
    <description>Performs user-defined python calculations</description>
    <author>Greger Cronquist &lt;greger.cronquist@combine.se&gt;, Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;, Sara Gustafzelius &lt;sara.gustafzelius@combine.se&gt;, Benedikt Ziegler &lt;benedikt.ziegler@combine.se&gt;</author>
    <copyright>(c) 2016 Combine Control Systems AB</copyright>
    <version>3.0</version>
    <parameters type="json">{"type": "group", "calc_list": {"description": "List of calculations.", "editor": null, "label": "List of calculations", "order": 0, "passthrough": false, "type": "list", "list": ["${new} = ${data1} * ${data2} #ENABLED:1"], "value": [0], "value_names": []}, "same_length_res": {"description": "Gather all the results generated from an incoming Table into a common output table. This requires that the results all have the same length. An error will be given if the lengths of the outgoing results differ.", "editor": null, "label": "Put results in common outputs.", "order": 1, "type": "boolean", "value": true}, "copy_input": {"description": "If enabled the incoming data will be copied to the output before running the calculations. This requires that the results will all have the same length. An exception will be raised if the lengths of the outgoing results differ.", "editor": null, "label": "Copy input", "order": 2, "type": "boolean", "value": false}, "fail_strategy": {"description": "Decide how a failed calculation should be handled", "label": "Action on calculation failure", "order": 3, "passthrough": false, "type": "list", "list": ["Exception", "Skip calculation"], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="port0" scheme="hdf5" type="table" type_base="table" uuid="{10db41c5-8263-4017-b318-5014d5ec650b}">
        <label>Input Table</label>
        <description>Input Table</description>
      </input>
      <output key="port1" scheme="hdf5" type="table" type_base="table" uuid="{06082bf1-ded6-422b-89c7-523ac54eab4e}">
        <label>Table with results from the calculations.</label>
        <description>Table with results from the calculations.</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.tuple.ziptuple2" uuid="{43d4cc1f-c084-41fd-9970-fe8a6e90cde0}" x="1875.0" y="2300.0">
    <label>Zip Tuple</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="input" scheme="hdf5" type="[adaf]" type_base="[&lt;a&gt;]" uuid="{0f53ff0b-48b3-4f3c-88b6-f89d660d5f56}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <input key="input" scheme="hdf5" type="[adaf]" type_base="[&lt;b&gt;]" uuid="{7e347fd7-921b-4cfd-95fd-c45a129236b5}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="output" scheme="hdf5" type="[(adaf, adaf)]" type_base="[(&lt;a&gt;, &lt;b&gt;)]" uuid="{02cb01f7-3f57-41c5-93f7-7340e7a1c569}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.random.randomadafs" uuid="{60fd13e6-703c-47a1-9d41-db39d104186b}" x="1725.0" y="2250.0">
    <label>Random ADAFs</label>
    <description>Random ADAFs generator.</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "meta_entries": {"description": "The number of meta entries to be generated.", "label": "Meta entries", "order": 0, "type": "integer", "value": 1, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}, "meta_attributes": {"description": "The number of meta attributes to be generated.", "label": "Meta attributes", "order": 1, "type": "integer", "value": 1, "editor": {"max": 10000, "min": 0, "step": 1, "type": "spinbox"}}, "res_entries": {"description": "The number of res entries to be generated.", "label": "Res entries", "order": 2, "type": "integer", "value": 1, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}, "res_attributes": {"description": "The number of res attributes to be generated.", "label": "Res attributes", "order": 3, "type": "integer", "value": 1, "editor": {"max": 10000, "min": 0, "step": 1, "type": "spinbox"}}, "systems": {"description": "The number of systems to be generated.", "label": "Systems", "order": 4, "type": "integer", "value": 1, "editor": {"max": 100, "min": 0, "step": 1, "type": "spinbox"}}, "rasters": {"description": "The number of rasters to be generated.", "label": "Rasters per system", "order": 5, "type": "integer", "value": 1, "editor": {"max": 100, "min": 0, "step": 1, "type": "spinbox"}}, "signal_entries": {"description": "The number of signal entries to be generated.", "label": "Signals entries per raster", "order": 6, "type": "integer", "value": 2, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}, "signal_attributes": {"description": "The number of signal attributes to be generated.", "label": "Signal attributes", "order": 7, "type": "integer", "value": 1, "editor": {"max": 100, "min": 0, "step": 1, "type": "spinbox"}}, "signal_length": {"description": "The length of signals to be generated.", "label": "Signal length", "order": 8, "type": "integer", "value": 5, "editor": {"max": 100000000, "min": 0, "step": 1, "type": "spinbox"}}, "length": {"description": "The length of adaf list to be generated.", "label": "ADAF list length", "order": 9, "type": "integer", "value": 2, "editor": {"max": 10000, "min": 0, "step": 1, "type": "spinbox"}}}</parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="[adaf]" type_base="[adaf]" uuid="{61bb5b50-53ae-4e52-9ca6-517e16626cb8}">
        <label>ADAFs with random numbers. The specifications of the ADAFs are declared in the configuration.</label>
        <description>ADAFs with random numbers. The specifications of the ADAFs are declared in the configuration.</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.calculatorgeneric" uuid="{7ac26a77-4959-4b9f-8e66-7641b367e54f}" x="2050.0" y="2100.0">
    <label>Calculator</label>
    <description>Performs user-defined python calculations</description>
    <author>Greger Cronquist &lt;greger.cronquist@combine.se&gt;, Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;, Sara Gustafzelius &lt;sara.gustafzelius@combine.se&gt;, Benedikt Ziegler &lt;benedikt.ziegler@combine.se&gt;</author>
    <copyright>(c) 2016 Combine Control Systems AB</copyright>
    <version>3.0</version>
    <parameters type="json">{"type": "group", "calc_list": {"description": "List of calculations.", "editor": null, "label": "List of calculations", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": ["New Column 0 = arg[0].col('data1').data + arg[1].col('data2').data #ENABLED:1"], "value": [0], "value_names": []}, "same_length_res": {"description": "Gather all the results generated from an incoming data into a common output table. This requires that the results all have the same length. An error will be given if the lengths of the outgoing results differ.", "editor": null, "label": "Put results in common outputs.", "order": 1, "type": "boolean", "value": true}, "copy_input": {"description": "If enabled the incoming data will be copied to the output before running the calculations. This requires that the results will all have the same length. An exception will be raised if the lengths of the outgoing results differ.", "editor": null, "label": "Copy input", "order": 2, "type": "boolean", "value": false}, "fail_strategy": {"description": "Decide how a failed calculation should be handled", "label": "Action on calculation failure", "mode": "selected", "order": 3, "passthrough": false, "type": "list", "list": ["Exception", "Skip calculation"], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="port0" scheme="hdf5" type="(table, table)" type_base="&lt;a&gt;" uuid="{eb8bd1ef-a455-4d13-b760-db25b159dbe6}">
        <label>Generic Input</label>
        <description>Generic Input</description>
      </input>
      <output key="port1" scheme="hdf5" type="table" type_base="table" uuid="{e51e1d41-d4e2-4c19-8074-cbb7ae7e09a9}">
        <label>Table with results from the calculations.</label>
        <description>Table with results from the calculations.</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.calculatorgenericlist" uuid="{9c52ad2c-cdf6-41f5-a279-974cac897e9e}" x="2050.0" y="2300.0">
    <label>Calculator List</label>
    <description>Performs user-defined python calculations</description>
    <author>Greger Cronquist &lt;greger.cronquist@combine.se&gt;, Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;, Sara Gustafzelius &lt;sara.gustafzelius@combine.se&gt;, Benedikt Ziegler &lt;benedikt.ziegler@combine.se&gt;</author>
    <copyright>(c) 2016 Combine Control Systems AB</copyright>
    <version>3.0</version>
    <parameters type="json">{"type": "group", "calc_list": {"description": "List of calculations.", "editor": null, "label": "List of calculations", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": ["time = arg[0].sys['system0']['raster0']['signal0'].t #ENABLED:1", "0 = arg[0].sys['system0']['raster0']['signal0'].y + arg[1].sys['system0']['raster0']['signal0'].y #ENABLED:1", "1 = arg[0].sys['system0']['raster0']['signal1'].y + arg[1].sys['system0']['raster0']['signal1'].y #ENABLED:1"], "value": [0], "value_names": []}, "same_length_res": {"description": "Gather all the results generated from an incoming data into a common output table. This requires that the results all have the same length. An error will be given if the lengths of the outgoing results differ.", "editor": null, "label": "Put results in common outputs.", "order": 1, "type": "boolean", "value": true}, "copy_input": {"description": "If enabled the incoming data will be copied to the output before running the calculations. This requires that the results will all have the same length. An exception will be raised if the lengths of the outgoing results differ.", "editor": null, "label": "Copy input", "order": 2, "type": "boolean", "value": false}, "fail_strategy": {"description": "Decide how a failed calculation should be handled", "label": "Action on calculation failure", "mode": "selected", "order": 3, "passthrough": false, "type": "list", "list": ["Exception", "Skip calculation"], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="port0" scheme="hdf5" type="[(adaf, adaf)]" type_base="[&lt;a&gt;]" uuid="{ea9dfb81-8f04-4db4-a39d-55b1ac436a59}">
        <label>Generic Input</label>
        <description>Generic Input</description>
      </input>
      <output key="port1" scheme="hdf5" type="[table]" type_base="[table]" uuid="{f456a9af-3cae-4ad4-9c1e-261ea937c15f}">
        <label>Tables with results from the calculations.</label>
        <description>Tables with results from the calculations.</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.tuple.tuple2" uuid="{9fddb9f3-06f3-403e-bc86-011de6308ace}" x="1900.0" y="2100.0">
    <label>Tuple</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="input" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{6384ea1e-977f-4e24-9d03-4b699c4f13e2}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <input key="input" scheme="hdf5" type="table" type_base="&lt;b&gt;" uuid="{eb4ad80e-b8b3-4163-8f61-d6562c5985a7}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="output" scheme="hdf5" type="(table, table)" type_base="(&lt;a&gt;, &lt;b&gt;)" uuid="{9ddcdfa5-c775-47e9-9ab9-7e4fecb3b3ef}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.random.randomadafs" uuid="{a3d2fff7-77e5-4a77-80dc-ee4bef9dfd86}" x="1725.0" y="2350.0">
    <label>Random ADAFs</label>
    <description>Random ADAFs generator.</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "meta_entries": {"description": "The number of meta entries to be generated.", "label": "Meta entries", "order": 0, "type": "integer", "value": 1, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}, "meta_attributes": {"description": "The number of meta attributes to be generated.", "label": "Meta attributes", "order": 1, "type": "integer", "value": 1, "editor": {"max": 10000, "min": 0, "step": 1, "type": "spinbox"}}, "res_entries": {"description": "The number of res entries to be generated.", "label": "Res entries", "order": 2, "type": "integer", "value": 1, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}, "res_attributes": {"description": "The number of res attributes to be generated.", "label": "Res attributes", "order": 3, "type": "integer", "value": 1, "editor": {"max": 10000, "min": 0, "step": 1, "type": "spinbox"}}, "systems": {"description": "The number of systems to be generated.", "label": "Systems", "order": 4, "type": "integer", "value": 1, "editor": {"max": 100, "min": 0, "step": 1, "type": "spinbox"}}, "rasters": {"description": "The number of rasters to be generated.", "label": "Rasters per system", "order": 5, "type": "integer", "value": 1, "editor": {"max": 100, "min": 0, "step": 1, "type": "spinbox"}}, "signal_entries": {"description": "The number of signal entries to be generated.", "label": "Signals entries per raster", "order": 6, "type": "integer", "value": 2, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}, "signal_attributes": {"description": "The number of signal attributes to be generated.", "label": "Signal attributes", "order": 7, "type": "integer", "value": 1, "editor": {"max": 100, "min": 0, "step": 1, "type": "spinbox"}}, "signal_length": {"description": "The length of signals to be generated.", "label": "Signal length", "order": 8, "type": "integer", "value": 5, "editor": {"max": 100000000, "min": 0, "step": 1, "type": "spinbox"}}, "length": {"description": "The length of adaf list to be generated.", "label": "ADAF list length", "order": 9, "type": "integer", "value": 2, "editor": {"max": 10000, "min": 0, "step": 1, "type": "spinbox"}}}</parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="[adaf]" type_base="[adaf]" uuid="{772cd5f1-daba-4d6f-af40-8dd3fd5eb1c0}">
        <label>ADAFs with random numbers. The specifications of the ADAFs are declared in the configuration.</label>
        <description>ADAFs with random numbers. The specifications of the ADAFs are declared in the configuration.</description>
      </output>
    </ports>
  </node>
  <connection type="[(adaf, adaf)]" uuid="{05202ecf-0cf3-45b7-a7b2-a9eecbfe603f}">
    <source node="{43d4cc1f-c084-41fd-9970-fe8a6e90cde0}" port="{02cb01f7-3f57-41c5-93f7-7340e7a1c569}"/>
    <destination node="{9c52ad2c-cdf6-41f5-a279-974cac897e9e}" port="{ea9dfb81-8f04-4db4-a39d-55b1ac436a59}"/>
  </connection>
  <connection type="table" uuid="{1cf7a4f7-079d-4dbf-8f69-69b1e33a37c5}">
    <source node="{12d04530-5b61-4113-ae88-e9fc232aad39}" port="{501d8bb0-961c-46d2-9597-f93b8d4c0f0b}"/>
    <destination node="{3407b7a4-2156-43b4-b208-ad68d0eb3649}" port="{10db41c5-8263-4017-b318-5014d5ec650b}"/>
  </connection>
  <connection type="[adaf]" uuid="{2802a0fa-f9ec-4cd6-84ee-98a83e0079e2}">
    <source node="{a3d2fff7-77e5-4a77-80dc-ee4bef9dfd86}" port="{772cd5f1-daba-4d6f-af40-8dd3fd5eb1c0}"/>
    <destination node="{43d4cc1f-c084-41fd-9970-fe8a6e90cde0}" port="{7e347fd7-921b-4cfd-95fd-c45a129236b5}"/>
  </connection>
  <connection type="table" uuid="{28962eb9-1e54-4228-a19a-b5d4a71e99df}">
    <source node="{12d04530-5b61-4113-ae88-e9fc232aad39}" port="{501d8bb0-961c-46d2-9597-f93b8d4c0f0b}"/>
    <destination node="{9fddb9f3-06f3-403e-bc86-011de6308ace}" port="{6384ea1e-977f-4e24-9d03-4b699c4f13e2}"/>
  </connection>
  <connection type="table" uuid="{423e3761-57ae-4c8e-9a84-ffb3a2a3f221}">
    <source node="{2b32df43-fe6a-4d66-a381-5de4daf6c42e}" port="{934bddab-b025-4f5c-891f-4421371b4583}"/>
    <destination node="{9fddb9f3-06f3-403e-bc86-011de6308ace}" port="{eb4ad80e-b8b3-4163-8f61-d6562c5985a7}"/>
  </connection>
  <connection type="[adaf]" uuid="{7996a240-e58e-46c3-bb9e-fddbb434c5c0}">
    <source node="{60fd13e6-703c-47a1-9d41-db39d104186b}" port="{61bb5b50-53ae-4e52-9ca6-517e16626cb8}"/>
    <destination node="{43d4cc1f-c084-41fd-9970-fe8a6e90cde0}" port="{0f53ff0b-48b3-4f3c-88b6-f89d660d5f56}"/>
  </connection>
  <connection type="(table, table)" uuid="{7b6ead96-f6aa-4010-a783-e9bfcfb937d8}">
    <source node="{9fddb9f3-06f3-403e-bc86-011de6308ace}" port="{9ddcdfa5-c775-47e9-9ab9-7e4fecb3b3ef}"/>
    <destination node="{7ac26a77-4959-4b9f-8e66-7641b367e54f}" port="{eb8bd1ef-a455-4d13-b760-db25b159dbe6}"/>
  </connection>
  <text color="Beige" height="75.0" uuid="{e6e1eaf4-6ea5-4d34-b452-ea0f474f899c}" width="375.0" x="1725.0" y="2450.0">
- Node example: *org.sysess.sympathy.data.table.calculatorgeneric*
- Node example: *org.sysess.sympathy.data.table.calculatorgenericlist*
- Node example: *org.sysess.sympathy.data.table.calculatortable*</text>
</flow>
