<?xml version='1.0' encoding='US-ASCII'?>
<flow xmlns="http://www.sysess.org/sympathyfordata/workflow/1.0" cls="Flow" height="50.0" uuid="{4ae9288a-6ef6-41a3-8d1a-6f0f19c973f4}" width="50.0" x="0.0" y="0.0" id="">
  <label></label>
  <description></description>
  <author></author>
  <copyright></copyright>
  <version></version>
  <min_version></min_version>
  <icon/>
  <aggregation type="json">null</aggregation>
  <libraries type="json">[]</libraries>
  <pythonpaths type="json">[]</pythonpaths>
  <parameters type="json">{}</parameters>
  <ports/>
  <flow cls="Lambda" height="50.0" uuid="{080a0060-02bf-45a7-8c14-e198105855a4}" width="50.0" x="1600.0" y="1625.0" id="">
    <label>Delete file</label>
    <description></description>
    <author></author>
    <copyright></copyright>
    <version></version>
    <min_version></min_version>
    <icon/>
    <aggregation type="json">null</aggregation>
    <libraries type="json">[]</libraries>
    <pythonpaths type="json">[]</pythonpaths>
    <parameters type="json">{}</parameters>
    <ports>
      <input index="0" key="Port" optional="False" parent="False" scheme="hdf5" type="datasource" uuid="{6799be5a-8efb-48c6-8e07-92502c8b8bf9}" x="1900.0" y="2000.0">
        <label>Port</label>
        <description>Port</description>
      </input>
      <output index="0" key="Port" optional="False" parent="False" scheme="text" type="datasource" uuid="{56ccc25a-ded6-4481-be5c-b1905a601aa1}" x="2100.0" y="2000.0">
        <label>Port</label>
        <description>Port</description>
      </output>
    </ports>
    <basic_ports>
      <output key="Function" scheme="hdf5" type="datasource -&gt; datasource" type_base="&lt;a&gt;" uuid="{1693de71-0215-4b9b-9cc2-63bc174cb8f0}">
        <label>Lambda function</label>
        <description>Lambda function</description>
      </output>
    </basic_ports>
    <node id="org.sysess.sympathy.files.deletefile" uuid="{b521141e-e127-4b29-82af-231173ec89f8}" x="2000.0" y="2000.0">
      <label>Delete file</label>
      <description>Delete a file</description>
      <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;Andreas T&#229;gerud&lt;andreas.tagerud@combine.se&gt;</author>
      <copyright>(C) 2016-2017 Combine Control Systems AB</copyright>
      <version>1.0</version>
      <parameters type="json">{"type": "group"}</parameters>
      <ports>
        <input key="port1" scheme="hdf5" type="datasource" type_base="datasource" uuid="{5610cb79-a899-4e98-88cb-32247ffb449a}">
          <label>File to delete</label>
          <description>File to delete</description>
        </input>
        <output key="port1" scheme="text" type="datasource" type_base="datasource" uuid="{9a8c1245-00e6-4ded-8001-3c07989e5e92}">
          <label>Path to deleted file</label>
          <description>Path to deleted file</description>
        </output>
      </ports>
    </node>
    <connection type="datasource" uuid="{0d6095e8-9b8a-442a-9731-b625d94ccaa7}">
      <source node="{080a0060-02bf-45a7-8c14-e198105855a4}" port="{6799be5a-8efb-48c6-8e07-92502c8b8bf9}"/>
      <destination node="{b521141e-e127-4b29-82af-231173ec89f8}" port="{5610cb79-a899-4e98-88cb-32247ffb449a}"/>
    </connection>
    <connection type="datasource" uuid="{37755740-0541-4f6a-8600-b2cfbc7e6c3d}">
      <source node="{b521141e-e127-4b29-82af-231173ec89f8}" port="{9a8c1245-00e6-4ded-8001-3c07989e5e92}"/>
      <destination node="{080a0060-02bf-45a7-8c14-e198105855a4}" port="{56ccc25a-ded6-4481-be5c-b1905a601aa1}"/>
    </connection>
  </flow>
  <flow cls="Lambda" height="50.0" uuid="{2244efce-f6c6-4392-9b5b-11016ea35133}" width="50.0" x="1775.0" y="2325.0" id="">
    <label>Change column names</label>
    <description></description>
    <author></author>
    <copyright></copyright>
    <version></version>
    <min_version></min_version>
    <icon/>
    <aggregation type="json">null</aggregation>
    <libraries type="json">[]</libraries>
    <pythonpaths type="json">[]</pythonpaths>
    <parameters type="json">{}</parameters>
    <ports>
      <input index="0" key="Port" optional="False" parent="False" scheme="hdf5" type="(table, table)" uuid="{6a318d2a-1add-42db-8c21-6cb80194be66}" x="1725.0" y="2000.0">
        <label>Port</label>
        <description>Port</description>
      </input>
      <output index="0" key="Port" optional="False" parent="False" scheme="hdf5" type="table" uuid="{30794a6c-0e54-43c2-a3ba-606dc3e6fcbd}" x="2450.0" y="2000.0">
        <label>Port</label>
        <description>Port</description>
      </output>
    </ports>
    <basic_ports>
      <output key="Function" scheme="hdf5" type="(table, table) -&gt; table" type_base="&lt;a&gt;" uuid="{bce30916-5ace-4eeb-87c2-179618b272af}">
        <label>Lambda function</label>
        <description>Lambda function</description>
      </output>
    </basic_ports>
    <node id="org.sysess.sympathy.list.itemtolist" uuid="{63cc33c2-465c-473f-a8fe-48e37dc3be73}" x="2025.0" y="2050.0">
      <label>Item to List</label>
      <description></description>
      <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
      <copyright>(C) 2015 Combine Control Systems AB</copyright>
      <version>1.0</version>
      <parameters type="json">{"type": "group"}</parameters>
      <ports>
        <input key="item" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{0b3924e5-80d8-4834-9fbe-c4cba1180a9a}">
          <label>Input Item</label>
          <description>Input Item</description>
        </input>
        <output key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{9547a37d-2691-4470-a6b0-440e84424cc0}">
          <label>Item as List</label>
          <description>Item as List</description>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.data.table.renametablecolumnstable" uuid="{6708a52b-e929-4602-a63b-411b06ec5f03}" x="2175.0" y="2000.0">
      <label>Rename columns in Tables with Table</label>
      <description></description>
      <author>Greger Cronquist &lt;greger.cronquist@combine.se&gt;</author>
      <copyright>(c) 2013 Combine Control Systems AB</copyright>
      <version>1.0</version>
      <parameters type="json">{"type": "group", "source": {"description": "Name of column containing old names", "label": "Keyword column", "order": 0, "passthrough": false, "type": "list", "list": ["new_names", "old_names"], "value": [1], "value_names": ["old_names"], "editor": {"options": null, "type": "combobox"}}, "destination": {"description": "Name of column containing new names", "label": "Replacement column", "order": 1, "passthrough": false, "type": "list", "list": ["new_names", "old_names"], "value": [0], "value_names": [], "editor": {"options": null, "type": "combobox"}}}</parameters>
      <ports>
        <input key="dictionary" scheme="hdf5" type="table" type_base="table" uuid="{9336fe9a-b228-44e2-92ae-b0f5371af195}">
          <label>Dictionary</label>
          <description>Dictionary</description>
        </input>
        <input key="tables" scheme="hdf5" type="[table]" type_base="[table]" uuid="{994151d7-1282-451d-ab05-d16ddc0d2f64}">
          <label>Input Tables</label>
          <description>Input Tables</description>
        </input>
        <output key="tables" scheme="hdf5" type="[table]" type_base="[table]" uuid="{f9aac532-52eb-47c6-8621-d5a419b638ba}">
          <label>Tables with renamed columns</label>
          <description>Tables with renamed columns</description>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.list.getitemlist" uuid="{bdcb1067-90d2-4dfa-a6c9-5d98bd0f2999}" x="2325.0" y="2000.0">
      <label>Get Item List</label>
      <description></description>
      <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
      <copyright>(C) 2015 Combine Control Systems AB</copyright>
      <version>1.0</version>
      <parameters type="json">{"type": "group", "index": {"description": "Choose item index in list.", "label": "Index", "order": 0, "passthrough": false, "type": "list", "list": ["0"], "value": [0], "value_names": [], "editor": {"options": null, "type": "combobox"}}}</parameters>
      <ports>
        <input key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{4529a76d-1836-49da-8f0b-113f8d837fc5}">
          <label>Input List</label>
          <description>Input List</description>
        </input>
        <output key="item" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{437d3586-c250-4901-ae2d-da8f5c2bae13}">
          <label>Output selected Item from List</label>
          <description>Output selected Item from List</description>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.tuple.untuple2" uuid="{e38b5976-c475-48f0-83bb-bfb7e9853f6e}" x="1875.0" y="2000.0">
      <label>Untuple2</label>
      <description></description>
      <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
      <copyright>(C) 2017 Combine Control Systems AB</copyright>
      <version>1.0</version>
      <parameters type="json">{"type": "group"}</parameters>
      <ports>
        <input key="input" scheme="hdf5" type="(table, table)" type_base="(&lt;a&gt;, &lt;b&gt;)" uuid="{9b0d6c1f-e3cd-4228-8d13-e3dde5ea54fd}">
          <label>Input</label>
          <description>Input</description>
        </input>
        <output key="output" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{2b0c857d-d76f-487f-b049-df76d741c764}">
          <label>Output</label>
          <description>Output</description>
        </output>
        <output key="output" scheme="hdf5" type="table" type_base="&lt;b&gt;" uuid="{45101307-d023-42b0-b7ce-d4f9922cb1b7}">
          <label>Output</label>
          <description>Output</description>
        </output>
      </ports>
    </node>
    <connection type="table" uuid="{04576340-c8ff-47de-8876-7fada159888e}">
      <source node="{e38b5976-c475-48f0-83bb-bfb7e9853f6e}" port="{45101307-d023-42b0-b7ce-d4f9922cb1b7}"/>
      <destination node="{63cc33c2-465c-473f-a8fe-48e37dc3be73}" port="{0b3924e5-80d8-4834-9fbe-c4cba1180a9a}"/>
    </connection>
    <connection type="table" uuid="{26d401e7-26d3-4d1b-b0e7-1fe9fdd0996f}">
      <source node="{e38b5976-c475-48f0-83bb-bfb7e9853f6e}" port="{2b0c857d-d76f-487f-b049-df76d741c764}"/>
      <destination node="{6708a52b-e929-4602-a63b-411b06ec5f03}" port="{9336fe9a-b228-44e2-92ae-b0f5371af195}"/>
    </connection>
    <connection type="table" uuid="{58d39a70-b892-4718-8873-534e01f68f9b}">
      <source node="{bdcb1067-90d2-4dfa-a6c9-5d98bd0f2999}" port="{437d3586-c250-4901-ae2d-da8f5c2bae13}"/>
      <destination node="{2244efce-f6c6-4392-9b5b-11016ea35133}" port="{30794a6c-0e54-43c2-a3ba-606dc3e6fcbd}"/>
    </connection>
    <connection type="[table]" uuid="{65755114-bb94-4622-a9bb-cc22ec7a8782}">
      <source node="{6708a52b-e929-4602-a63b-411b06ec5f03}" port="{f9aac532-52eb-47c6-8621-d5a419b638ba}"/>
      <destination node="{bdcb1067-90d2-4dfa-a6c9-5d98bd0f2999}" port="{4529a76d-1836-49da-8f0b-113f8d837fc5}"/>
    </connection>
    <connection type="[table]" uuid="{9204d60f-42e0-49f8-a0a5-18569e252129}">
      <source node="{63cc33c2-465c-473f-a8fe-48e37dc3be73}" port="{9547a37d-2691-4470-a6b0-440e84424cc0}"/>
      <destination node="{6708a52b-e929-4602-a63b-411b06ec5f03}" port="{994151d7-1282-451d-ab05-d16ddc0d2f64}"/>
    </connection>
    <connection type="(table, table)" uuid="{9f7ec75f-bfe8-4be0-b227-39617169cfc9}">
      <source node="{2244efce-f6c6-4392-9b5b-11016ea35133}" port="{6a318d2a-1add-42db-8c21-6cb80194be66}"/>
      <destination node="{e38b5976-c475-48f0-83bb-bfb7e9853f6e}" port="{9b0d6c1f-e3cd-4228-8d13-e3dde5ea54fd}"/>
    </connection>
  </flow>
  <node id="org.sysess.sympathy.tuple.ziptuple2" uuid="{022e249e-0db0-4e9c-967a-2508268bde09}" x="1775.0" y="2425.0">
    <label>Zip Tuple2</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{2e0a7af5-1d88-45e8-93b5-a5fff8af1ba2}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{784095a4-ffd4-4d27-83ab-a0061adbad98}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="output" scheme="hdf5" type="[(table, table)]" type_base="[(&lt;a&gt;, &lt;b&gt;)]" uuid="{17d4869c-615a-4b04-b0d0-63ca21967ca2}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.getitemlist" uuid="{0436c7fd-f550-45da-acfc-315f7e6a3fed}" x="1603.7778356" y="1946.61034269">
    <label>Get Item List</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "index": {"description": "Choose item index in list.", "label": "Index", "order": 0, "passthrough": false, "type": "list", "list": ["0", "1", "2", "3", "4"], "value": [2], "value_names": ["2"], "editor": {"type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="list" scheme="text" type="[datasource]" type_base="[&lt;a&gt;]" uuid="{1113efde-6aea-4d10-a706-57e61f0b771d}">
        <label>Input List</label>
        <description>Input List</description>
      </input>
      <output key="item" scheme="hdf5" type="datasource" type_base="&lt;a&gt;" uuid="{180a4360-7e76-407b-ba39-be6024134760}">
        <label>Output selected Item from List</label>
        <description>Output selected Item from List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.random.randomtables" uuid="{09dda053-546b-4985-b804-7a2d49f3911e}" x="1275.0" y="1775.0">
    <label>Random Tables</label>
    <description>Random Tables generator.</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "column_entries": {"description": "The number of columns in the generated table.", "label": "Columns:", "order": 0, "type": "integer", "value": 5, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}, "column_length": {"description": "The number of rows in the generated table.", "label": "Rows:", "order": 1, "type": "integer", "value": 5, "editor": {"max": 100000000, "min": 0, "step": 1, "type": "spinbox"}}, "mask_values": {"description": "If checked each value has a 50% chance to be masked.", "editor": null, "label": "Randomly mask values", "order": 2, "type": "boolean", "value": false}, "length": {"description": "The number of tables to be generated.", "label": "List length", "order": 3, "type": "integer", "value": 5, "editor": {"max": 10000, "min": 0, "step": 1, "type": "spinbox"}}}</parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="[table]" type_base="[table]" uuid="{a734b542-8a5a-4642-91ab-d650058c417d}">
        <label>Tables with random numbers. The specifications of the Tables are declared in the configuration.</label>
        <description>Tables with random numbers. The specifications of the Tables are declared in the configuration.</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.generate.signaltables" uuid="{23f4cfc3-4af5-4be7-8a0b-1ca449a0b183}" x="1300.0" y="2350.0">
    <label>Generate Signal Tables</label>
    <description></description>
    <author>Benedikt Ziegler &lt;benedikt.ziegler@combine.se&gt;</author>
    <copyright>(C) 2016 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "table_params": {"label": "Table", "order": 0, "type": "page", "column_entries": {"description": "The number of column entries to be generated.", "label": "Column entries", "order": 0, "type": "integer", "value": 3, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}, "column_length": {"description": "The length of columns to be generated.", "label": "Column length", "order": 1, "type": "integer", "value": 100, "editor": {"max": 100000000, "min": 0, "step": 1, "type": "spinbox"}}, "length": {"description": "The length of table list to be generated.", "label": "Table list length", "order": 2, "type": "integer", "value": 3, "editor": {"max": 10000, "min": 0, "step": 1, "type": "spinbox"}}}, "signal_params": {"label": "Signal", "order": 1, "type": "page", "signal_type": {"description": "The signal to be generated.", "label": "Signal type", "order": 0, "passthrough": false, "type": "list", "list": ["sinus", "tangent", "cosines"], "value": [0], "value_names": [], "editor": {"options": null, "type": "combobox"}}, "amplitude": {"description": "The amplitude of the signal to be generated.", "editor": null, "label": "Amplitude", "order": 1, "type": "float", "value": 1.0}, "frequency": {"description": "The frequency of the signal to be generated.", "editor": null, "label": "Frequency", "order": 2, "type": "float", "value": 0.01}, "period": {"description": "The period of the signal to be generated.", "editor": null, "label": "Period", "order": 3, "type": "float", "value": 100.0}, "use_period": {"description": "Use Period [Checked] or Frequency [Unchecked] to generate the signal.", "editor": null, "label": "Period or Frequency", "order": 4, "type": "boolean", "value": true}, "phase_offset": {"description": "The phase offset of the signal to be generated.", "editor": null, "label": "Phase offset", "order": 5, "type": "float", "value": 0.0}, "add_noise": {"description": "If random noise should be added to the signals.", "editor": null, "label": "Add random noise", "order": 6, "type": "boolean", "value": false}, "noise_amplitude": {"description": "The amplitude of the noise.", "label": "Amplitude of noise", "order": 7, "type": "float", "value": 0.01, "editor": {"decimals": 2, "step": 0.05, "type": "spinbox"}}, "index_column": {"description": "Add an index column to the beginning of the table.", "editor": null, "label": "First column as index", "order": 8, "type": "boolean", "value": true}}}</parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="[table]" type_base="[table]" uuid="{f8c94bde-3e33-4b64-a70f-a4a65ee070e7}">
        <label>Signal Tables</label>
        <description>Signal Tables</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.getitemlist" uuid="{3698f03d-1f98-4ddc-abfd-a50e26c9deb5}" x="1600.0" y="1875.0">
    <label>Get Item List</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "index": {"description": "Choose item index in list.", "label": "Index", "order": 0, "passthrough": false, "type": "list", "list": ["0", "1", "2", "3", "4"], "value": [1], "value_names": ["1"], "editor": {"type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="list" scheme="text" type="[datasource]" type_base="[&lt;a&gt;]" uuid="{888ae26c-bab9-4d01-9ee2-33e80bfce5d4}">
        <label>Input List</label>
        <description>Input List</description>
      </input>
      <output key="item" scheme="hdf5" type="datasource" type_base="&lt;a&gt;" uuid="{36664435-9d3e-41bd-930a-d658dad444dd}">
        <label>Output selected Item from List</label>
        <description>Output selected Item from List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.builtin.map" uuid="{3bc30233-0d5e-42a6-8120-07eb1a89e4a5}" x="1825.0" y="1700.0">
    <label>Map</label>
    <description>Map Lambda function over each element in argument list</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015-2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "fail_strategy": {"description": "Decide how failure to process an item should be handled.", "label": "Action on exception", "order": 0, "passthrough": false, "type": "list", "list": ["Error", "Create Empty Item", "Skip Item"], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="Function" scheme="hdf5" type="datasource -&gt; datasource" type_base="&lt;a&gt; -&gt; &lt;b&gt;" uuid="{af0fbb97-62f6-4d9a-8d43-90de835112f6}">
        <label>Lambda Function to Map</label>
        <description>Lambda Function to Map</description>
      </input>
      <input key="List" scheme="hdf5" type="[datasource]" type_base="[&lt;a&gt;]" uuid="{b3474f72-3435-4c57-b16d-ceda7f97d162}">
        <label>Argument List</label>
        <description>Argument List</description>
      </input>
      <output key="List" scheme="hdf5" type="[datasource]" type_base="[&lt;b&gt;]" uuid="{30502b42-5a66-4389-b5ab-8d056824241f}">
        <label>Output List</label>
        <description>Output List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.slice.slicelist" uuid="{3f688b24-21f2-4025-bd74-6a6688ecf52f}" x="1600.0" y="1725.0">
    <label>Slice List</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "slice": {"description": "Use standard Python syntax to define pattern for slice operation, [start:stop:step]", "editor": null, "label": "Slice", "order": 0, "type": "string", "value": "[3:]"}, "limit": {"description": "Specify the maximum number of rows in the preview table", "editor": null, "label": "Limit preview to", "order": 1, "type": "integer", "value": 100}}</parameters>
    <ports>
      <input key="list" scheme="text" type="[datasource]" type_base="[&lt;a&gt;]" uuid="{61cd3112-9330-40f8-a473-ee7c5a4d48f5}">
        <label>Input List</label>
        <description>Input List</description>
      </input>
      <output key="list" scheme="hdf5" type="[datasource]" type_base="[&lt;a&gt;]" uuid="{2b53c001-fbb5-455d-9361-505a416f04d3}">
        <label>Sliced output List</label>
        <description>Sliced output List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.builtin.map" uuid="{401ea5c5-618a-4a45-a51d-25390371f976}" x="1950.0" y="2425.0">
    <label>Map</label>
    <description>Map Lambda function over each element in argument list</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015-2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "fail_strategy": {"description": "", "label": "Action on import failure", "order": 0, "passthrough": false, "type": "list", "list": ["Error", "Create Empty Item", "Skip Item"], "value": [0], "value_names": [], "editor": {"options": null, "type": "combobox"}}}</parameters>
    <ports>
      <input key="Function" scheme="hdf5" type="(table, table) -&gt; table" type_base="&lt;a&gt; -&gt; &lt;b&gt;" uuid="{64a114dd-62d5-4bc5-a803-f91cdc0b7192}">
        <label>Lambda Function to Map</label>
        <description>Lambda Function to Map</description>
      </input>
      <input key="List" scheme="hdf5" type="[(table, table)]" type_base="[&lt;a&gt;]" uuid="{f46c313f-cb17-40f5-bc4a-f11d3247b14f}">
        <label>Argument List</label>
        <description>Argument List</description>
      </input>
      <output key="List" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{ea7252d7-dc87-4bd8-90c0-b0b397c24bf1}">
        <label>Output List</label>
        <description>Output List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.getitemlist" uuid="{6bd89758-bf7b-437b-8ae1-30f478fcef7a}" x="1600.0" y="1800.0">
    <label>Get Item List</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "index": {"description": "Choose item index in list.", "label": "Index", "order": 0, "passthrough": false, "type": "list", "list": ["0"], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="list" scheme="text" type="[datasource]" type_base="[&lt;a&gt;]" uuid="{3b78db38-32b1-4203-974c-bbb0e6467e55}">
        <label>Input List</label>
        <description>Input List</description>
      </input>
      <output key="item" scheme="hdf5" type="datasource" type_base="&lt;a&gt;" uuid="{0c9fb18a-55f8-4d07-810f-663ff7bd2fa8}">
        <label>Output selected Item from List</label>
        <description>Output selected Item from List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.getitemlist" uuid="{75a10eff-dd54-44de-ab0d-f6d451c390ee}" x="1600.0" y="2150.0">
    <label>Get Item List</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "index": {"description": "Choose item index in list.", "label": "Index", "order": 0, "passthrough": false, "type": "list", "list": ["0"], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="list" scheme="hdf5" type="[datasource -&gt; datasource]" type_base="[&lt;a&gt;]" uuid="{258335ea-9d2e-4c58-a4bd-06a0879a3e7a}">
        <label>Input List</label>
        <description>Input List</description>
      </input>
      <output key="item" scheme="hdf5" type="datasource -&gt; datasource" type_base="&lt;a&gt;" uuid="{fb48755c-a648-4e6f-95d7-cf4baaa07be1}">
        <label>Output selected Item from List</label>
        <description>Output selected Item from List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.getitemlist" uuid="{7bc62738-7a62-4bbe-aa7d-d2b17e1bf4da}" x="1600.0" y="2050.0">
    <label>Get Item List</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "index": {"description": "Choose item index in list.", "label": "Index", "order": 0, "passthrough": false, "type": "list", "list": ["0"], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="list" scheme="hdf5" type="[datasource -&gt; datasource]" type_base="[&lt;a&gt;]" uuid="{53b4c322-484e-4f51-818d-e219bcdb3542}">
        <label>Input List</label>
        <description>Input List</description>
      </input>
      <output key="item" scheme="hdf5" type="datasource -&gt; datasource" type_base="&lt;a&gt;" uuid="{b7b754fc-501c-4e9b-b7e1-144b10ef4199}">
        <label>Output selected Item from List</label>
        <description>Output selected Item from List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.builtin.extractflowslambdas" uuid="{7cc75ef4-8087-4a75-97f1-e39664abd208}" x="1425.0" y="2050.0">
    <label>Extract Flows as Lambdas</label>
    <description>Extract top level Flows as Lambda functions matching datatype in flows</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "datatype": {"description": "Non-generic datatype to match against lambda functions  in input", "editor": null, "label": "Datatype", "order": 0, "type": "string", "value": "datasource -&gt; datasource"}}</parameters>
    <ports>
      <input key="Filenames" scheme="text" type="[datasource]" type_base="[datasource]" uuid="{fd4407f3-bf79-47da-b606-5d2c7722e63e}">
        <label>Flow filenames</label>
        <description>Flow filenames</description>
      </input>
      <output key="Functions" scheme="hdf5" type="[datasource -&gt; datasource]" type_base="[datasource -&gt; datasource]" uuid="{bdff472a-0686-4cd1-8761-e46f757c1182}">
        <label>Lambda functions</label>
        <description>Lambda functions</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.builtin.extractlambdas" uuid="{81c863a8-7dcc-40e3-ad29-f6b22fb5cb96}" x="1425.0" y="2150.0">
    <label>Extract Lambdas</label>
    <description>Extract Lambda functions matching datatype in workflows</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015-2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "datatype": {"description": "Non-generic datatype to match against lambda functions  in input", "editor": null, "label": "Datatype", "order": 0, "type": "string", "value": "datasource -&gt; datasource"}}</parameters>
    <ports>
      <input key="Filenames" scheme="text" type="[datasource]" type_base="[datasource]" uuid="{a77704aa-20d2-40e5-92d3-bcdd5dcaf196}">
        <label>Flow filenames containing Lambdas</label>
        <description>Flow filenames containing Lambdas</description>
      </input>
      <output key="Functions" scheme="hdf5" type="[datasource -&gt; datasource]" type_base="[datasource -&gt; datasource]" uuid="{fedf3581-a439-4f50-bb5e-2bd7dfa9c6cc}">
        <label>Lambda functions</label>
        <description>Lambda functions</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.calculator" uuid="{8595bfe0-b5c8-4aa5-b8f6-5961ae81a955}" x="1600.0" y="2325.0">
    <label>Calculator Tables</label>
    <description>Performs user-defined python calculations</description>
    <author>Greger Cronquist &lt;greger.cronquist@combine.se&gt;, Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;, Sara Gustafzelius &lt;sara.gustafzelius@combine.se&gt;, Benedikt Ziegler &lt;benedikt.ziegler@combine.se&gt;</author>
    <copyright>(c) 2016 Combine Control Systems AB</copyright>
    <version>3.0</version>
    <parameters type="json">{"type": "group", "calc_list": {"description": "List of calculations.", "editor": null, "label": "List of calculations", "order": 0, "passthrough": false, "type": "list", "list": ["${new_names} = np.array(['{}_{}'.format(table.get_name(), col_name) for col_name in table.column_names() if col_name != 'Time']) #ENABLED:1", "${old_names} = np.array([col_name for col_name in table.column_names() if col_name != 'Time']) #ENABLED:1"], "value": [0], "value_names": []}, "same_length_res": {"description": "Gather all the results generated from an incoming Table into a common output table. This requires that the results all have the same length. An error will be given if the lengths of the outgoing results differ.", "editor": null, "label": "Put results in common outputs.", "order": 1, "type": "boolean", "value": true}, "copy_input": {"description": "If enabled the incoming data will be copied to the output before running the calculations.", "editor": null, "label": "Copy input", "order": 2, "type": "boolean", "value": false}, "fail_strategy": {"description": "", "label": "Action on import failure", "order": 3, "passthrough": false, "type": "list", "list": ["Exception", "Skip calculation"], "value": [0], "value_names": [], "editor": {"options": null, "type": "combobox"}}}</parameters>
    <ports>
      <input key="port0" scheme="hdf5" type="[table]" type_base="[table]" uuid="{60d59731-103f-4a7e-bf3b-2191d373bd67}">
        <label>Input Tables</label>
        <description>Input Tables</description>
      </input>
      <output key="port1" scheme="hdf5" type="[table]" type_base="[table]" uuid="{49a4643a-771c-4c0e-82a2-a750e9544001}">
        <label>Tables with results from the calculations.</label>
        <description>Tables with results from the calculations.</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.settablesnametable" uuid="{88b9e5bd-359f-4ca8-af22-9e9090ee1f22}" x="1450.0" y="2475.0">
    <label>Set Tables Name with Table</label>
    <description>Set the name of a list of Tables</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(c) 2013 Sysem Engineering Society</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "names": {"description": "Select the columns with Table names", "label": "Select name column", "order": 0, "passthrough": false, "type": "list", "list": ["index"], "value": [0], "value_names": ["index"], "editor": {"filter": true, "selection": "single", "type": "listview"}}}</parameters>
    <ports>
      <input key="input" scheme="hdf5" type="[table]" type_base="[table]" uuid="{b2d45bbc-9a00-4809-9d5f-cbac775d08fc}">
        <label>Input Tables</label>
        <description>Input Tables</description>
      </input>
      <input key="names" scheme="hdf5" type="table" type_base="table" uuid="{6eea955a-8e1b-4c19-8501-7600b5db0668}">
        <label>A Table containing a column with names</label>
        <description>A Table containing a column with names</description>
      </input>
      <output key="output" scheme="hdf5" type="[table]" type_base="[table]" uuid="{8a933b19-926a-4c48-8e6b-5c02f8553d6d}">
        <label>The list of Tables with the name attribute changed according to node configuration. All Tables will get the same name.</label>
        <description>The list of Tables with the name attribute changed according to node configuration. All Tables will get the same name.</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.builtin.apply" uuid="{9480de9b-fe40-44da-a97a-84afe906a981}" x="1825.0" y="1800.0">
    <label>Apply</label>
    <description>Apply Lambda function to Argument</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015-2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="Function" scheme="hdf5" type="datasource -&gt; datasource" type_base="&lt;a&gt; -&gt; &lt;b&gt;" uuid="{6cea0ddf-cbb3-49d9-b3b5-525e13f5215e}">
        <label>Lambda Function to Apply</label>
        <description>Lambda Function to Apply</description>
      </input>
      <input key="Argument" scheme="hdf5" type="datasource" type_base="&lt;a&gt;" uuid="{d8831c8d-edb7-4fb7-a1cd-69927bedad6e}">
        <label>Argument</label>
        <description>Argument</description>
      </input>
      <output key="Output" scheme="hdf5" type="datasource" type_base="&lt;b&gt;" uuid="{e74a2b48-e4bd-4bce-8b05-187d226a438f}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.export.exporttables" uuid="{a35540df-ef85-42f2-8f2d-6cd6c13d0ba8}" x="1425.0" y="1775.0">
    <label>Export Tables</label>
    <description>Export Tables</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(c) 2013 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "active_exporter": {"description": "Select data format exporter. Each data format has its own exporter with its own special configuration, see exporter information. The selection of exporter do also suggest filename extension.", "editor": null, "label": "Exporter", "order": 0, "type": "string", "value": "CSV"}, "custom_exporter_data": {"label": "", "order": 1, "type": "group", "CSV": {"label": "", "type": "group", "encoding": {"description": "Character encoding determines how different characters are represented when written to disc, sent over a network, etc.", "label": "Character encoding", "passthrough": false, "type": "list", "list": ["Western (ASCII)", "Western (ISO 8859-1)", "Western (ISO 8859-15)", "Western (Windows 1252)", "UTF-8", "UTF-8 with signature byte"], "value": [4], "value_names": [], "editor": {"type": "combobox", "options": []}}, "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "csv"}, "header": {"description": "Export column names", "editor": null, "label": "Export header", "type": "boolean", "value": true}, "table_names": {"description": "Use table names as filenames", "editor": null, "label": "Use table names as filenames", "type": "boolean", "value": false}}, "HDF5": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "sydata"}, "table_names": {"description": "Use table names as filenames", "editor": null, "label": "Use table names as filenames", "type": "boolean", "value": false}}, "MAT": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "mat"}, "header": {"description": "Export column names", "editor": null, "label": "Export header", "type": "boolean", "value": true}, "table_names": {"description": "Use table names as filenames", "editor": null, "label": "Use table names as filenames", "type": "boolean", "value": false}}, "SQL": {"label": "", "type": "group", "odbc": {"description": "ODBC method to use.", "label": "ODBC method", "order": 0, "passthrough": false, "type": "list", "list": ["default", "pyodbc", "ceODBC"], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}, "connection_string": {"description": "String used by pyodbc to make a connection.", "editor": null, "label": "Connection string", "type": "string", "value": ""}, "db_method": {"description": "Select which Database connection method that you want to use.", "label": "Database connection method", "type": "string", "value": "ODBC", "editor": {"type": "combobox", "options": ["ODBC", "SQLAlchemy"]}}, "db_sqlalchemy_engine_url": {"description": "SQLAlchemy engine URL for connecting to the database", "editor": null, "label": "SQLAlchemy engine URL", "type": "string", "value": "mssql+pyodbc:///"}, "drop_table": {"description": "Drop table before adding data.", "editor": null, "label": "Drop table", "type": "boolean", "value": false}, "table_name": {"description": "The table name used when exporting.", "editor": null, "label": "Table name", "type": "string", "value": ""}, "use_nvarchar_size": {"description": "Use nvarchar(size) instead of nvarchar(MAX).", "editor": null, "label": "Use nvarchar(size)", "type": "boolean", "value": false}}, "SQLite": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "db"}}, "XLS": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "xls"}, "header": {"description": "Export column names", "editor": null, "label": "Export header", "type": "boolean", "value": true}}, "XLSX": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "xlsx"}, "header": {"description": "Export column names", "editor": null, "label": "Export header", "type": "boolean", "value": true}, "table_names": {"description": "Use table names as filenames", "editor": null, "label": "Use table names as filenames", "type": "boolean", "value": false}, "to_plot": {"description": "Select if incoming Tables with plot data should be embedded in the output file. If no plots are present, the option is disabled.", "editor": null, "label": "Embed plot in output file(s)", "type": "boolean", "value": false}, "to_sheets": {"description": "Select if incoming Tables are going to to be exported to sheets in a single file or to a single sheet inmultiple files.", "editor": null, "label": "Export data to sheets", "type": "boolean", "value": false}}}, "directory": {"description": "Select the directory where to export the files.", "label": "Output directory", "order": 2, "type": "string", "value": ".", "editor": {"type": "dirname"}}, "filename": {"description": "Filename without extension.", "editor": null, "label": "Filename", "order": 3, "type": "string", "value": "test"}, "plot": {"description": "If there is a plot attribute in the input tables(s), create a separate file with the plot.", "label": "Output separate plot file with the following extension:", "order": 4, "passthrough": false, "type": "list", "list": ["-", "eps", "pdf", "svg", "png"], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="port0" scheme="hdf5" type="[table]" type_base="[table]" uuid="{7933e043-fc07-4d69-8626-46c4eb047cff}">
        <label>Tables to be exported</label>
        <description>Tables to be exported</description>
      </input>
      <output key="port0" scheme="text" type="[datasource]" type_base="[datasource]" uuid="{9bf062d9-2a2f-4bd6-a36d-4139d65b1199}">
        <label>Datasources of exported files</label>
        <description>Datasources of exported files</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.builtin.apply" uuid="{a5012be0-a634-4589-9bd0-fe08f19d23b7}" x="1825.0" y="2050.0">
    <label>Apply</label>
    <description>Apply Lambda function to Argument</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015-2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="Function" scheme="hdf5" type="datasource -&gt; datasource" type_base="&lt;a&gt; -&gt; &lt;b&gt;" uuid="{0253ba2c-3cc0-4886-9eeb-74940a430821}">
        <label>Lambda Function to Apply</label>
        <description>Lambda Function to Apply</description>
      </input>
      <input key="Argument" scheme="hdf5" type="datasource" type_base="&lt;a&gt;" uuid="{f656ef99-bfca-44d4-9a7b-8315d4134b9d}">
        <label>Argument</label>
        <description>Argument</description>
      </input>
      <output key="Output" scheme="hdf5" type="datasource" type_base="&lt;b&gt;" uuid="{49b7f46e-f52b-4e11-8f59-fd57500826f3}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.create.createtable" uuid="{cd2050a7-99e6-4000-b9f8-1e1af64b75df}" x="1300.0" y="2475.0">
    <label>Manually Create Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>(c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "json_table": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "[[\"index\", \"U\", [\"1\", \"2\", \"3\"]]]"}}</parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="table" type_base="table" uuid="{2ea8ae2f-edfd-4b26-b006-1ded82ef334b}">
        <label>Manually created table</label>
        <description>Manually created table</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.builtin.apply" uuid="{d7f45129-0510-450d-a171-600ed12a0a7a}" x="1825.0" y="2150.0">
    <label>Apply</label>
    <description>Apply Lambda function to Argument</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015-2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="Function" scheme="hdf5" type="datasource -&gt; datasource" type_base="&lt;a&gt; -&gt; &lt;b&gt;" uuid="{a4e30aac-a3c0-46b4-a898-3861267d201e}">
        <label>Lambda Function to Apply</label>
        <description>Lambda Function to Apply</description>
      </input>
      <input key="Argument" scheme="hdf5" type="datasource" type_base="&lt;a&gt;" uuid="{aafe5b98-d11d-45b4-9672-3422e43edba8}">
        <label>Argument</label>
        <description>Argument</description>
      </input>
      <output key="Output" scheme="hdf5" type="datasource" type_base="&lt;b&gt;" uuid="{14322d3d-766b-4a50-9bd4-2c039a0b9a38}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.datasources.filedatasourcemultiple" uuid="{eee4576e-5635-464f-b69e-51563221944e}" x="1300.0" y="2150.0">
    <label>Datasources</label>
    <description>Select data sources.</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.1</version>
    <parameters type="json">{"type": "group", "recursive": {"description": "Turn on/off recursive folder search for filenames satisfying the specified pattern beneath selected directory in the directory tree", "editor": null, "label": "Recursive", "order": 0, "type": "boolean", "value": false}, "directory": {"description": "Specify dictionary in dictionary tree where to search for files with the specified pattern or select by using the button with the three buttons", "label": "Directory", "order": 1, "type": "string", "value": "Linked flows", "editor": {"type": "dirname"}}, "search_pattern": {"description": "A wildcard/regexp pattern to match files.", "editor": null, "label": "Search pattern", "order": 2, "type": "string", "value": "lambdas.syx"}}</parameters>
    <ports>
      <output key="port1" scheme="text" type="[datasource]" type_base="[datasource]" uuid="{f82faf1d-2e8a-4c29-870d-8c20e3e83c1e}">
        <label>Datasources with paths files</label>
        <description>Datasources with paths files</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.datasources.filedatasourcemultiple" uuid="{f87a7190-ebb0-4c2c-b9f9-24412027e6f3}" x="1300.0" y="2050.0">
    <label>Datasources</label>
    <description>Select data sources.</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.1</version>
    <parameters type="json">{"type": "group", "recursive": {"description": "Turn on/off recursive folder search for filenames satisfying the specified pattern beneath selected directory in the directory tree", "editor": null, "label": "Recursive", "order": 0, "type": "boolean", "value": false}, "directory": {"description": "Specify dictionary in dictionary tree where to search for files with the specified pattern or select by using the button with the three buttons", "label": "Directory", "order": 1, "type": "string", "value": "Linked flows", "editor": {"type": "dirname"}}, "search_pattern": {"description": "A wildcard/regexp pattern to match files.", "editor": null, "label": "Search pattern", "order": 2, "type": "string", "value": "lambda.syx"}}</parameters>
    <ports>
      <output key="port1" scheme="text" type="[datasource]" type_base="[datasource]" uuid="{2d4493c1-1c86-4a14-985d-f27fe3c10d82}">
        <label>Datasources with paths files</label>
        <description>Datasources with paths files</description>
      </output>
    </ports>
  </node>
  <connection type="[table]" uuid="{05025c7c-2153-4fa4-883a-c92be4f28563}">
    <source node="{09dda053-546b-4985-b804-7a2d49f3911e}" port="{a734b542-8a5a-4642-91ab-d650058c417d}"/>
    <destination node="{a35540df-ef85-42f2-8f2d-6cd6c13d0ba8}" port="{7933e043-fc07-4d69-8626-46c4eb047cff}"/>
  </connection>
  <connection type="table" uuid="{053a7f5a-b4bf-4f6c-b6bb-19f3f9c1560a}">
    <source node="{cd2050a7-99e6-4000-b9f8-1e1af64b75df}" port="{2ea8ae2f-edfd-4b26-b006-1ded82ef334b}"/>
    <destination node="{88b9e5bd-359f-4ca8-af22-9e9090ee1f22}" port="{6eea955a-8e1b-4c19-8501-7600b5db0668}"/>
  </connection>
  <connection type="[datasource -&gt; datasource]" uuid="{0a75fb7d-0a0e-474a-809a-0cc4918a7149}">
    <source node="{81c863a8-7dcc-40e3-ad29-f6b22fb5cb96}" port="{fedf3581-a439-4f50-bb5e-2bd7dfa9c6cc}"/>
    <destination node="{75a10eff-dd54-44de-ab0d-f6d451c390ee}" port="{258335ea-9d2e-4c58-a4bd-06a0879a3e7a}"/>
  </connection>
  <connection type="datasource" uuid="{0c2acea6-a8c8-462e-a466-3ec5827f0ed2}">
    <source node="{0436c7fd-f550-45da-acfc-315f7e6a3fed}" port="{180a4360-7e76-407b-ba39-be6024134760}"/>
    <destination node="{d7f45129-0510-450d-a171-600ed12a0a7a}" port="{aafe5b98-d11d-45b4-9672-3422e43edba8}"/>
  </connection>
  <connection type="[table]" uuid="{14d56305-f248-4c3a-8c8c-4064fdb46630}">
    <source node="{8595bfe0-b5c8-4aa5-b8f6-5961ae81a955}" port="{49a4643a-771c-4c0e-82a2-a750e9544001}"/>
    <destination node="{022e249e-0db0-4e9c-967a-2508268bde09}" port="{2e0a7af5-1d88-45e8-93b5-a5fff8af1ba2}"/>
  </connection>
  <connection type="datasource -&gt; datasource" uuid="{1db5a59a-22dc-4d44-b977-da1166011f0f}">
    <source node="{080a0060-02bf-45a7-8c14-e198105855a4}" port="{1693de71-0215-4b9b-9cc2-63bc174cb8f0}"/>
    <destination node="{3bc30233-0d5e-42a6-8120-07eb1a89e4a5}" port="{af0fbb97-62f6-4d9a-8d43-90de835112f6}"/>
  </connection>
  <connection type="datasource -&gt; datasource" uuid="{23c84a02-cb28-4bf6-a0cd-2a7770a493ee}">
    <source node="{7bc62738-7a62-4bbe-aa7d-d2b17e1bf4da}" port="{b7b754fc-501c-4e9b-b7e1-144b10ef4199}"/>
    <destination node="{a5012be0-a634-4589-9bd0-fe08f19d23b7}" port="{0253ba2c-3cc0-4886-9eeb-74940a430821}"/>
  </connection>
  <connection type="datasource -&gt; datasource" uuid="{4bb7fc88-8aed-4587-b00c-93310b47d0f2}">
    <source node="{080a0060-02bf-45a7-8c14-e198105855a4}" port="{1693de71-0215-4b9b-9cc2-63bc174cb8f0}"/>
    <destination node="{9480de9b-fe40-44da-a97a-84afe906a981}" port="{6cea0ddf-cbb3-49d9-b3b5-525e13f5215e}"/>
  </connection>
  <connection type="datasource" uuid="{5630c722-0e9c-4d87-b9ed-9a203bc62a19}">
    <source node="{6bd89758-bf7b-437b-8ae1-30f478fcef7a}" port="{0c9fb18a-55f8-4d07-810f-663ff7bd2fa8}"/>
    <destination node="{9480de9b-fe40-44da-a97a-84afe906a981}" port="{d8831c8d-edb7-4fb7-a1cd-69927bedad6e}"/>
  </connection>
  <connection type="[table]" uuid="{5b46c79a-3fdd-4904-9ac5-cefe4ece1d3d}">
    <source node="{23f4cfc3-4af5-4be7-8a0b-1ca449a0b183}" port="{f8c94bde-3e33-4b64-a70f-a4a65ee070e7}"/>
    <destination node="{022e249e-0db0-4e9c-967a-2508268bde09}" port="{784095a4-ffd4-4d27-83ab-a0061adbad98}"/>
  </connection>
  <connection type="[(table, table)]" uuid="{6339d95d-d768-435d-bdcd-aadb1f229bc5}">
    <source node="{022e249e-0db0-4e9c-967a-2508268bde09}" port="{17d4869c-615a-4b04-b0d0-63ca21967ca2}"/>
    <destination node="{401ea5c5-618a-4a45-a51d-25390371f976}" port="{f46c313f-cb17-40f5-bc4a-f11d3247b14f}"/>
  </connection>
  <connection type="[table]" uuid="{6c28e131-d604-450c-8b61-8fafc1188ff6}">
    <source node="{23f4cfc3-4af5-4be7-8a0b-1ca449a0b183}" port="{f8c94bde-3e33-4b64-a70f-a4a65ee070e7}"/>
    <destination node="{88b9e5bd-359f-4ca8-af22-9e9090ee1f22}" port="{b2d45bbc-9a00-4809-9d5f-cbac775d08fc}"/>
  </connection>
  <connection type="datasource" uuid="{74aef96c-07d0-4700-8246-3fc0bd14a5c5}">
    <source node="{3698f03d-1f98-4ddc-abfd-a50e26c9deb5}" port="{36664435-9d3e-41bd-930a-d658dad444dd}"/>
    <destination node="{a5012be0-a634-4589-9bd0-fe08f19d23b7}" port="{f656ef99-bfca-44d4-9a7b-8315d4134b9d}"/>
  </connection>
  <connection type="[datasource]" uuid="{8cadbb04-7bea-4267-97a5-9fef5ee729e8}">
    <source node="{eee4576e-5635-464f-b69e-51563221944e}" port="{f82faf1d-2e8a-4c29-870d-8c20e3e83c1e}"/>
    <destination node="{81c863a8-7dcc-40e3-ad29-f6b22fb5cb96}" port="{a77704aa-20d2-40e5-92d3-bcdd5dcaf196}"/>
  </connection>
  <connection type="[datasource]" uuid="{8f27eaba-0002-4241-8e51-495e601a18e5}">
    <source node="{f87a7190-ebb0-4c2c-b9f9-24412027e6f3}" port="{2d4493c1-1c86-4a14-985d-f27fe3c10d82}"/>
    <destination node="{7cc75ef4-8087-4a75-97f1-e39664abd208}" port="{fd4407f3-bf79-47da-b606-5d2c7722e63e}"/>
  </connection>
  <connection type="[datasource]" uuid="{b9d82d9f-0c72-4b05-be16-2610b988ed23}">
    <source node="{a35540df-ef85-42f2-8f2d-6cd6c13d0ba8}" port="{9bf062d9-2a2f-4bd6-a36d-4139d65b1199}"/>
    <destination node="{0436c7fd-f550-45da-acfc-315f7e6a3fed}" port="{1113efde-6aea-4d10-a706-57e61f0b771d}"/>
  </connection>
  <connection type="[datasource]" uuid="{c5110621-d2ed-4324-ab9e-46e51e98120c}">
    <source node="{a35540df-ef85-42f2-8f2d-6cd6c13d0ba8}" port="{9bf062d9-2a2f-4bd6-a36d-4139d65b1199}"/>
    <destination node="{6bd89758-bf7b-437b-8ae1-30f478fcef7a}" port="{3b78db38-32b1-4203-974c-bbb0e6467e55}"/>
  </connection>
  <connection type="datasource -&gt; datasource" uuid="{c8694ebe-d585-4f98-927b-4c4f08c460a6}">
    <source node="{75a10eff-dd54-44de-ab0d-f6d451c390ee}" port="{fb48755c-a648-4e6f-95d7-cf4baaa07be1}"/>
    <destination node="{d7f45129-0510-450d-a171-600ed12a0a7a}" port="{a4e30aac-a3c0-46b4-a898-3861267d201e}"/>
  </connection>
  <connection type="[datasource -&gt; datasource]" uuid="{df281127-e403-45ce-8391-6f75b6271ee9}">
    <source node="{7cc75ef4-8087-4a75-97f1-e39664abd208}" port="{bdff472a-0686-4cd1-8761-e46f757c1182}"/>
    <destination node="{7bc62738-7a62-4bbe-aa7d-d2b17e1bf4da}" port="{53b4c322-484e-4f51-818d-e219bcdb3542}"/>
  </connection>
  <connection type="[datasource]" uuid="{e1b5b00d-84c5-4ffe-8b68-fe5d7b97efe7}">
    <source node="{a35540df-ef85-42f2-8f2d-6cd6c13d0ba8}" port="{9bf062d9-2a2f-4bd6-a36d-4139d65b1199}"/>
    <destination node="{3698f03d-1f98-4ddc-abfd-a50e26c9deb5}" port="{888ae26c-bab9-4d01-9ee2-33e80bfce5d4}"/>
  </connection>
  <connection type="[table]" uuid="{e7a43ddb-1efd-4a08-93eb-eede0fdded2a}">
    <source node="{88b9e5bd-359f-4ca8-af22-9e9090ee1f22}" port="{8a933b19-926a-4c48-8e6b-5c02f8553d6d}"/>
    <destination node="{8595bfe0-b5c8-4aa5-b8f6-5961ae81a955}" port="{60d59731-103f-4a7e-bf3b-2191d373bd67}"/>
  </connection>
  <connection type="[datasource]" uuid="{e9687c30-ee24-4fcd-89e8-e55ee6b022b7}">
    <source node="{3f688b24-21f2-4025-bd74-6a6688ecf52f}" port="{2b53c001-fbb5-455d-9361-505a416f04d3}"/>
    <destination node="{3bc30233-0d5e-42a6-8120-07eb1a89e4a5}" port="{b3474f72-3435-4c57-b16d-ceda7f97d162}"/>
  </connection>
  <connection type="(table, table) -&gt; table" uuid="{eba1aa97-b304-4907-8d85-68c802c2c764}">
    <source node="{2244efce-f6c6-4392-9b5b-11016ea35133}" port="{bce30916-5ace-4eeb-87c2-179618b272af}"/>
    <destination node="{401ea5c5-618a-4a45-a51d-25390371f976}" port="{64a114dd-62d5-4bc5-a803-f91cdc0b7192}"/>
  </connection>
  <connection type="[datasource]" uuid="{ec0a02bb-17b0-457c-b545-728dd43e107a}">
    <source node="{a35540df-ef85-42f2-8f2d-6cd6c13d0ba8}" port="{9bf062d9-2a2f-4bd6-a36d-4139d65b1199}"/>
    <destination node="{3f688b24-21f2-4025-bd74-6a6688ecf52f}" port="{61cd3112-9330-40f8-a473-ee7c5a4d48f5}"/>
  </connection>
  <text color="Beige" height="75.0" uuid="{6252c292-c03d-486d-a9cb-0f3c479799c3}" width="175.0" x="1325.0" y="1650.0">Create a lambda by right cliking in the flow, and selecting 'Create Lambda'.</text>
  <text color="Beige" height="75.0" uuid="{63a8c8af-0106-4064-833a-00fc92a14235}" width="200.0" x="1925.0" y="1700.0">A lambda is like a subflow which can be mapped to elements in a list.</text>
  <text color="Beige" height="75.0" uuid="{871060c3-7c20-4354-825f-8dddbe50cc9b}" width="200.0" x="1925.0" y="1800.0">And in the same way mapped to a single element.</text>
  <text color="Beige" height="50.0" uuid="{b82e45cb-87fb-44b1-b8b1-137deb355cb3}" width="250.0" x="1000.0" y="2400.0">Change column names using lambda</text>
  <text color="Beige" height="75.0" uuid="{dfb4fa0a-5e58-4bfa-89b1-77a630988f09}" width="175.0" x="1075.0" y="1775.0">Create some files which we can play around with.</text>
  <text color="Beige" height="50.0" uuid="{e9576b36-f32c-4e1c-9238-85ecdd310059}" width="325.0" x="1900.0" y="2150.0">Lambdas inside flows can be extracted and used.</text>
  <text color="Beige" height="50.0" uuid="{fcc473b9-e887-4a43-aa3b-1b44c75b140b}" width="250.0" x="1900.0" y="2050.0">External flows can be used as lambdas.</text>
  <text color="Beige" height="75.0" uuid="{b4b11844-20bd-4616-8c0c-6924bc3891ad}" width="325.0" x="1300.0" y="2575.0">
- Node example: *org.sysess.builtin.apply*
- Node example: *org.sysess.builtin.extractflowslambdas*
- Node example: *org.sysess.builtin.extractlambdas*
- Node example: *org.sysess.builtin.map*</text>
</flow>
