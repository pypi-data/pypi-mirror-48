<?xml version='1.0' encoding='US-ASCII'?>
<flow xmlns="http://www.sysess.org/sympathyfordata/workflow/1.0" cls="Flow" height="50.0" uuid="{3cc81a33-6ad0-4c1d-aadb-a8dfd7c944df}" width="50.0" x="0.0" y="0.0" id="">
  <label></label>
  <description></description>
  <author></author>
  <copyright></copyright>
  <version></version>
  <min_version></min_version>
  <icon/>
  <aggregation type="json">null</aggregation>
  <libraries type="json">[]</libraries>
  <pythonpaths type="json">[]</pythonpaths>
  <parameters type="json">{}</parameters>
  <ports/>
  <flow cls="Flow" height="50.0" uuid="{b88322dd-2a0f-45c1-b332-63f9493e980a}" width="50.0" x="2400.0" y="1850.0" id="">
    <label>Delete created files</label>
    <description></description>
    <author></author>
    <copyright></copyright>
    <version></version>
    <min_version></min_version>
    <icon/>
    <aggregation type="json">null</aggregation>
    <libraries type="json">[]</libraries>
    <pythonpaths type="json">[]</pythonpaths>
    <parameters type="json">{}</parameters>
    <ports>
      <input index="0" key="Port" optional="False" parent="True" scheme="text" type="[datasource]" uuid="{28c1306c-9be3-420a-942d-4b0ee7a1ac5d}" x="2350.0" y="1650.0">
        <label>Port</label>
        <description>Port</description>
      </input>
      <input index="1" key="Port" optional="False" parent="True" scheme="text" type="[datasource]" uuid="{4d5e83ea-b190-47cf-ad9e-70bac02ac64a}" x="2350.0" y="1750.0">
        <label>Port</label>
        <description>Port</description>
      </input>
      <input index="2" key="Port" optional="False" parent="True" scheme="text" type="[datasource]" uuid="{f2468644-aca3-4614-8e79-9f5dc9897887}" x="2350.0" y="1850.0">
        <label>Port</label>
        <description>Port</description>
      </input>
      <input index="3" key="Port" optional="False" parent="True" scheme="hdf5" type="[adaf]" uuid="{9d905145-f011-415a-9a2b-c2d63d5c2778}" x="2350.0" y="1550.0">
        <label>Port</label>
        <description>Port</description>
      </input>
      <input index="4" key="Port" optional="False" parent="True" scheme="text" type="[datasource]" uuid="{a5bc198e-3567-4615-bfba-defbe3c8939a}" x="2350.0" y="1950.0">
        <label>Port</label>
        <description>Port</description>
      </input>
      <input index="5" key="Port" optional="False" parent="True" scheme="text" type="[datasource]" uuid="{7b5f145a-5477-4607-9c52-5733eafb003a}" x="2350.0" y="2050.0">
        <label>Port</label>
        <description>Port</description>
      </input>
      <input index="6" key="Port" optional="False" parent="True" scheme="text" type="[datasource]" uuid="{9cb960ce-1940-4e2d-96e4-7959945bda1b}" x="2350.0" y="2150.0">
        <label>Port</label>
        <description>Port</description>
      </input>
    </ports>
    <flow cls="Lambda" height="50.0" uuid="{61abe59c-f853-4daa-9812-ff5ec5c1261c}" width="50.0" x="2850.0" y="1750.0" id="">
      <label>New Lambda 0</label>
      <description></description>
      <author></author>
      <copyright></copyright>
      <version></version>
      <min_version></min_version>
      <icon/>
      <aggregation type="json">null</aggregation>
      <libraries type="json">[]</libraries>
      <pythonpaths type="json">[]</pythonpaths>
      <parameters type="json">{}</parameters>
      <ports>
        <input index="0" key="Port" optional="False" parent="False" scheme="hdf5" type="datasource" uuid="{b8c949bb-85b8-4dd8-80e4-0d6723056416}" x="1900.0" y="2000.0">
          <label>Port</label>
          <description>Port</description>
        </input>
        <output index="0" key="Port" optional="False" parent="False" scheme="text" type="datasource" uuid="{4e498752-cd2a-4177-a868-7b7d96e3550d}" x="2100.0" y="2000.0">
          <label>Port</label>
          <description>Port</description>
        </output>
      </ports>
      <basic_ports>
        <output key="Function" scheme="hdf5" type="datasource -&gt; datasource" type_base="&lt;a&gt;" uuid="{83b06a72-287c-49c3-b3ef-51ae1d75604e}">
          <label>Lambda function</label>
          <description>Lambda function</description>
        </output>
      </basic_ports>
      <node id="org.sysess.sympathy.files.deletefile" uuid="{bbe9d5b6-d34e-495d-8dbb-31299d3c0943}" x="2000.0" y="2000.0">
        <label>Delete file</label>
        <description>Delete a file</description>
        <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;Andreas T&#229;gerud&lt;andreas.tagerud@combine.se&gt;</author>
        <copyright>(C) 2016-2017 Combine Control Systems AB</copyright>
        <version>1.0</version>
        <parameters type="json">{"type": "group"}</parameters>
        <ports>
          <input key="port1" scheme="hdf5" type="datasource" type_base="datasource" uuid="{ab5695af-719a-44dd-96dd-6b52946fdceb}">
            <label>File to delete</label>
            <description>File to delete</description>
          </input>
          <output key="port1" scheme="text" type="datasource" type_base="datasource" uuid="{5ef8e468-60a1-4c86-bea2-f595fa8c3333}">
            <label>Path to deleted file</label>
            <description>Path to deleted file</description>
          </output>
        </ports>
      </node>
      <connection type="datasource" uuid="{c53d53a7-7871-4052-be87-6bf6610aea42}">
        <source node="{61abe59c-f853-4daa-9812-ff5ec5c1261c}" port="{b8c949bb-85b8-4dd8-80e4-0d6723056416}"/>
        <destination node="{bbe9d5b6-d34e-495d-8dbb-31299d3c0943}" port="{ab5695af-719a-44dd-96dd-6b52946fdceb}"/>
      </connection>
      <connection type="datasource" uuid="{ecfac096-7921-4bb1-a8b8-07b2223664fd}">
        <source node="{bbe9d5b6-d34e-495d-8dbb-31299d3c0943}" port="{5ef8e468-60a1-4c86-bea2-f595fa8c3333}"/>
        <destination node="{61abe59c-f853-4daa-9812-ff5ec5c1261c}" port="{4e498752-cd2a-4177-a868-7b7d96e3550d}"/>
      </connection>
    </flow>
    <node id="org.sysess.builtin.map" uuid="{19f5c30d-5895-496d-89ea-6024d73abbf6}" x="3025.0" y="1850.0">
      <label>Map</label>
      <description>Map Lambda function over each element in argument list</description>
      <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
      <copyright>(C) 2015-2016 Combine Control Systems AB</copyright>
      <version>1.0</version>
      <parameters type="json">{"type": "group", "fail_strategy": {"description": "", "label": "Action on import failure", "order": 0, "passthrough": false, "type": "list", "list": ["Error", "Create Empty Item", "Skip Item"], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}}</parameters>
      <ports>
        <input key="Function" scheme="hdf5" type="datasource -&gt; datasource" type_base="&lt;a&gt; -&gt; &lt;b&gt;" uuid="{b568a770-0149-4a53-812e-99de9aa8e953}">
          <label>Lambda Function to Map</label>
          <description>Lambda Function to Map</description>
        </input>
        <input key="List" scheme="hdf5" type="[datasource]" type_base="[&lt;a&gt;]" uuid="{16b20d1f-5348-48d1-a280-65079f302a79}">
          <label>Argument List</label>
          <description>Argument List</description>
        </input>
        <output key="List" scheme="hdf5" type="[datasource]" type_base="[&lt;b&gt;]" uuid="{9ce12d89-6a2a-44b6-a1aa-82ebf03d56e5}">
          <label>Output List</label>
          <description>Output List</description>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.tuple.untuple2" uuid="{b9e1469d-38cc-4d36-920f-16e4b6c36db0}" x="2850.0" y="1850.0">
      <label>Untuple2</label>
      <description></description>
      <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
      <copyright>(C) 2017 Combine Control Systems AB</copyright>
      <version>1.0</version>
      <parameters type="json">{"type": "group"}</parameters>
      <ports>
        <input key="input" scheme="hdf5" type="([adaf], [datasource])" type_base="(&lt;a&gt;, &lt;b&gt;)" uuid="{4bd66564-f754-4d73-81b3-b07ca8341a81}">
          <label>Input</label>
          <description>Input</description>
        </input>
        <output key="output" scheme="hdf5" type="[adaf]" type_base="&lt;a&gt;" uuid="{f3eccfd5-f9f7-42a0-8a96-dca368507f91}">
          <label>Output</label>
          <description>Output</description>
        </output>
        <output key="output" scheme="hdf5" type="[datasource]" type_base="&lt;b&gt;" uuid="{2aec5abc-44f8-4a8d-a0b4-77ed4111b289}">
          <label>Output</label>
          <description>Output</description>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.tuple.tuple2" uuid="{c5248268-9622-4243-b7d7-a1c60de8ae3a}" x="2700.0" y="1850.0">
      <label>Tuple2</label>
      <description></description>
      <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
      <copyright>(C) 2017 Combine Control Systems AB</copyright>
      <version>1.0</version>
      <parameters type="json">{"type": "group"}</parameters>
      <ports>
        <input key="input" scheme="hdf5" type="[adaf]" type_base="&lt;a&gt;" uuid="{6dea006c-6728-47d2-a9e9-5be0acf4c5c9}">
          <label>Input</label>
          <description>Input</description>
        </input>
        <input key="input" scheme="hdf5" type="[datasource]" type_base="&lt;b&gt;" uuid="{89772bda-293b-41b3-888b-22b52d47b38c}">
          <label>Input</label>
          <description>Input</description>
        </input>
        <output key="output" scheme="hdf5" type="([adaf], [datasource])" type_base="(&lt;a&gt;, &lt;b&gt;)" uuid="{6e056836-8269-46d4-9307-7f19b56cc34f}">
          <label>Output</label>
          <description>Output</description>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.list.extendlist" port_format="1.1" uuid="{f310994b-ea27-4121-b103-4b41f464894b}" x="2550.0" y="1850.0">
      <label>Extend List</label>
      <description>Extend a list</description>
      <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
      <copyright>(C) 2017 Combine Control Systems AB</copyright>
      <version>1.0</version>
      <parameters type="json">{"type": "group"}</parameters>
      <ports>
        <input key="input" scheme="text" type="[datasource]" type_base="[&lt;a&gt;]" uuid="{8193a0fe-aa2a-466f-beca-eda7adcfe2c0}">
          <label>List that will be added</label>
          <description>List that will be added</description>
        </input>
        <input key="input" scheme="text" type="[datasource]" type_base="[&lt;a&gt;]" uuid="{cd3da161-4486-4bf0-ae06-30086d9a3542}">
          <label>List that will be added</label>
          <description>List that will be added</description>
        </input>
        <input key="input" scheme="text" type="[datasource]" type_base="[&lt;a&gt;]" uuid="{18d60240-fe82-46ef-8f95-f4fbc9a94089}">
          <label>List that will be added</label>
          <description>List that will be added</description>
        </input>
        <input key="input" scheme="text" type="[datasource]" type_base="[&lt;a&gt;]" uuid="{99206e6b-05d1-4208-a32f-60cc4ffb23a1}">
          <label>List that will be added</label>
          <description>List that will be added</description>
        </input>
        <input key="input" scheme="text" type="[datasource]" type_base="[&lt;a&gt;]" uuid="{0b9c9a2c-1f04-4aeb-908d-b3d0b4ef3451}">
          <label>List that will be added</label>
          <description>List that will be added</description>
        </input>
        <input key="input" scheme="text" type="[datasource]" type_base="[&lt;a&gt;]" uuid="{f7047075-875f-4d25-8c96-17b5ca22e678}">
          <label>List that will be added</label>
          <description>List that will be added</description>
        </input>
        <output key="output" scheme="hdf5" type="[datasource]" type_base="[&lt;a&gt;]" uuid="{22f44f76-d1ea-4025-8425-f34ffddbf6cb}">
          <label>The extended List</label>
          <description>The extended List</description>
        </output>
      </ports>
    </node>
    <connection type="[datasource]" uuid="{37549ed5-5f60-4829-b5b8-6a649ca8de01}">
      <source node="{b88322dd-2a0f-45c1-b332-63f9493e980a}" port="{7b5f145a-5477-4607-9c52-5733eafb003a}"/>
      <destination node="{f310994b-ea27-4121-b103-4b41f464894b}" port="{0b9c9a2c-1f04-4aeb-908d-b3d0b4ef3451}"/>
    </connection>
    <connection type="[datasource]" uuid="{3b536c87-c9d9-4250-b853-9461dc6b2394}">
      <source node="{b9e1469d-38cc-4d36-920f-16e4b6c36db0}" port="{2aec5abc-44f8-4a8d-a0b4-77ed4111b289}"/>
      <destination node="{19f5c30d-5895-496d-89ea-6024d73abbf6}" port="{16b20d1f-5348-48d1-a280-65079f302a79}"/>
    </connection>
    <connection type="[datasource]" uuid="{3f9b9da1-1c1c-42da-8fff-caa712c13de4}">
      <source node="{b88322dd-2a0f-45c1-b332-63f9493e980a}" port="{28c1306c-9be3-420a-942d-4b0ee7a1ac5d}"/>
      <destination node="{f310994b-ea27-4121-b103-4b41f464894b}" port="{8193a0fe-aa2a-466f-beca-eda7adcfe2c0}"/>
    </connection>
    <connection type="[datasource]" uuid="{5e0ca415-da80-42f6-9fd5-cb5a0230b667}">
      <source node="{b88322dd-2a0f-45c1-b332-63f9493e980a}" port="{9cb960ce-1940-4e2d-96e4-7959945bda1b}"/>
      <destination node="{f310994b-ea27-4121-b103-4b41f464894b}" port="{f7047075-875f-4d25-8c96-17b5ca22e678}"/>
    </connection>
    <connection type="[datasource]" uuid="{72550af1-221a-4c2d-99db-148e166b22fe}">
      <source node="{b88322dd-2a0f-45c1-b332-63f9493e980a}" port="{a5bc198e-3567-4615-bfba-defbe3c8939a}"/>
      <destination node="{f310994b-ea27-4121-b103-4b41f464894b}" port="{99206e6b-05d1-4208-a32f-60cc4ffb23a1}"/>
    </connection>
    <connection type="[adaf]" uuid="{9f4c30b2-575a-43b7-9486-bfc1b2375fe3}">
      <source node="{b88322dd-2a0f-45c1-b332-63f9493e980a}" port="{9d905145-f011-415a-9a2b-c2d63d5c2778}"/>
      <destination node="{c5248268-9622-4243-b7d7-a1c60de8ae3a}" port="{6dea006c-6728-47d2-a9e9-5be0acf4c5c9}"/>
    </connection>
    <connection type="([adaf], [datasource])" uuid="{af390eb8-2e1a-4363-ad61-5e0eede11a9f}">
      <source node="{c5248268-9622-4243-b7d7-a1c60de8ae3a}" port="{6e056836-8269-46d4-9307-7f19b56cc34f}"/>
      <destination node="{b9e1469d-38cc-4d36-920f-16e4b6c36db0}" port="{4bd66564-f754-4d73-81b3-b07ca8341a81}"/>
    </connection>
    <connection type="datasource -&gt; datasource" uuid="{d513a224-157f-4eea-ac76-6fa63206b602}">
      <source node="{61abe59c-f853-4daa-9812-ff5ec5c1261c}" port="{83b06a72-287c-49c3-b3ef-51ae1d75604e}"/>
      <destination node="{19f5c30d-5895-496d-89ea-6024d73abbf6}" port="{b568a770-0149-4a53-812e-99de9aa8e953}"/>
    </connection>
    <connection type="[datasource]" uuid="{e117bee9-a865-4608-bc57-7e1c8b7a3826}">
      <source node="{b88322dd-2a0f-45c1-b332-63f9493e980a}" port="{4d5e83ea-b190-47cf-ad9e-70bac02ac64a}"/>
      <destination node="{f310994b-ea27-4121-b103-4b41f464894b}" port="{cd3da161-4486-4bf0-ae06-30086d9a3542}"/>
    </connection>
    <connection type="[datasource]" uuid="{ef9b591f-a5b8-4883-b2b4-61c16811a448}">
      <source node="{f310994b-ea27-4121-b103-4b41f464894b}" port="{22f44f76-d1ea-4025-8425-f34ffddbf6cb}"/>
      <destination node="{c5248268-9622-4243-b7d7-a1c60de8ae3a}" port="{89772bda-293b-41b3-888b-22b52d47b38c}"/>
    </connection>
    <connection type="[datasource]" uuid="{faf7461a-51b9-43e1-aa0b-9f181916534a}">
      <source node="{b88322dd-2a0f-45c1-b332-63f9493e980a}" port="{f2468644-aca3-4614-8e79-9f5dc9897887}"/>
      <destination node="{f310994b-ea27-4121-b103-4b41f464894b}" port="{18d60240-fe82-46ef-8f95-f4fbc9a94089}"/>
    </connection>
  </flow>
  <node id="org.sysess.sympathy.export.exportdatasources" uuid="{01656836-592e-4642-ac61-596e27ecf10b}" x="1875.0" y="1750.0">
    <label>Export Datasources</label>
    <description>Compress/decompress Datasources</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2013, 2017, Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "active_exporter": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "ZIP"}, "custom_exporter_data": {"label": "", "order": 1, "type": "group", "GZIP": {"label": "", "type": "group"}, "ZIP": {"label": "", "type": "group"}}, "directory": {"description": "Select the directory where to export the files.", "label": "Output directory", "order": 2, "type": "string", "value": ".", "editor": {"type": "dirname"}}, "filename": {"description": "Filename without extension.", "editor": null, "label": "Filename", "order": 3, "type": "string", "value": ""}}</parameters>
    <ports>
      <input key="port0" scheme="text" type="[datasource]" type_base="[datasource]" uuid="{6fc3b8bc-8418-4de3-a4a4-9bcb535038a8}">
        <label>Datasources to be exported</label>
        <description>Datasources to be exported</description>
      </input>
      <output key="port0" scheme="text" type="[datasource]" type_base="[datasource]" uuid="{866a0a7c-7ce3-4a17-9aa1-7b91084c6c93}">
        <label>Datasources of exported files</label>
        <description>Datasources of exported files</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.export.exportfigures" uuid="{1705a438-6dd8-4aa1-afc6-a34550d34a9e}" x="2100.0" y="1950.0">
    <label>Export Figures</label>
    <description>Export Figures to image files.</description>
    <author>Benedikt Ziegler &lt;benedikt.ziegler@combine.se&gt;</author>
    <copyright>(c) 2016 Combine Control Systems AB</copyright>
    <version>0.2</version>
    <parameters type="json">{"type": "group", "active_exporter": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "Image"}, "custom_exporter_data": {"label": "", "order": 1, "type": "group", "Image": {"label": "", "type": "group", "dpi": {"description": "The dots-per-inch of the figure.", "label": "Dots-per-inch", "type": "integer", "value": 120, "editor": {"max": 100000, "min": 1, "step": 1, "type": "spinbox"}}, "extension": {"description": "The extension to be used for exporting the figures.", "label": "Filename extension:", "passthrough": false, "type": "list", "list": ["eps", "pdf", "pgf", "png", "ps", "svg", "svgz"], "value": [1], "value_names": ["pdf"], "editor": {"type": "combobox", "options": []}}, "height": {"description": "The image height in pixels.", "label": "Image height (px):", "type": "integer", "value": 600, "editor": {"max": 1000000000, "min": 100, "step": 1, "type": "spinbox"}}, "paper_orientation": {"description": "The paper orientation (portrait or landscape).", "label": "Orientation:", "passthrough": false, "type": "list", "list": ["portrait", "landscape"], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}, "paper_size": {"description": "The paper size in millimeter.", "label": "Paper size:", "passthrough": false, "type": "list", "list": ["Custom ", "A4 (210mm x 297mm)", "A5 (148mm x 210mm)", "A6 (105mm x 148mm)", "Letter (215.9mm x 279.4mm)", "Legal (215.9mm x 355.6mm)", "Ledger (279.4mm x 431.8mm)", "B4 (250mm x 353mm)", "B5 (176mm x 250mm)", "B6 (125mm x 176mm)"], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}, "selected_strategy": {"description": "Choose who to set the size of the saved image(s).", "label": "Image size strategy", "passthrough": false, "type": "list", "list": ["Set Pixels", "Set Page Size"], "value": [0], "value_names": ["Set Pixels"], "editor": {"type": "combobox", "options": []}}, "size_height": {"description": "The image height in millimeter.", "label": "Image height (mm):", "type": "float", "value": 210.0, "editor": {"decimals": 3, "max": 1000000000, "min": 0.0, "step": 1, "type": "spinbox"}}, "size_width": {"description": "The image width in millimeter.", "label": "Image width (mm):", "type": "float", "value": 297.0, "editor": {"decimals": 3, "max": 1000000000, "min": 0.0, "step": 1, "type": "spinbox"}}, "width": {"description": "The image width in pixels.", "label": "Image width (px):", "type": "integer", "value": 800, "editor": {"max": 1000000000, "min": 100, "step": 1, "type": "spinbox"}}}}, "directory": {"description": "Select the directory where to export the files.", "label": "Output directory", "order": 2, "type": "string", "value": ".", "editor": {"type": "dirname"}}, "filename": {"description": "Filename without extension.", "editor": null, "label": "Filename", "order": 3, "type": "string", "value": "out"}}</parameters>
    <ports>
      <input key="figures" scheme="text" type="[figure]" type_base="[figure]" uuid="{f8333813-3866-4d92-9e60-6256817b5bcc}">
        <label>Input figures</label>
        <description>Input figures</description>
      </input>
      <output key="port0" scheme="text" type="[datasource]" type_base="[datasource]" uuid="{7c225af7-937c-47d8-83e8-d17c5f76860a}">
        <label>Datasources with paths to the created files</label>
        <description>Datasources with paths to the created files</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.export.exportfigureswithdscrs" uuid="{1c3feb50-53c3-448c-84f8-afea939c2122}" x="2100.0" y="2050.0">
    <label>Export Figures with Datasources</label>
    <description>Export Figures to image files.</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>(c) 2016 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "active_exporter": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "Image"}, "custom_exporter_data": {"label": "", "order": 1, "type": "group", "Image": {"label": "", "type": "group", "dpi": {"description": "The dots-per-inch of the figure.", "label": "Dots-per-inch", "type": "integer", "value": 120, "editor": {"max": 100000, "min": 1, "step": 1, "type": "spinbox"}}, "extension": {"description": "The extension to be used for exporting the figures.", "label": "Filename extension:", "passthrough": false, "type": "list", "list": ["eps", "pdf", "pgf", "png", "ps", "svg", "svgz"], "value": [5], "value_names": ["svg"], "editor": {"type": "combobox", "options": []}}, "height": {"description": "The image height in pixels.", "label": "Image height (px):", "type": "integer", "value": 600, "editor": {"max": 1000000000, "min": 100, "step": 1, "type": "spinbox"}}, "paper_orientation": {"description": "The paper orientation (portrait or landscape).", "label": "Orientation:", "passthrough": false, "type": "list", "list": ["portrait", "landscape"], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}, "paper_size": {"description": "The paper size in millimeter.", "label": "Paper size:", "passthrough": false, "type": "list", "list": ["Custom ", "A4 (210mm x 297mm)", "A5 (148mm x 210mm)", "A6 (105mm x 148mm)", "Letter (215.9mm x 279.4mm)", "Legal (215.9mm x 355.6mm)", "Ledger (279.4mm x 431.8mm)", "B4 (250mm x 353mm)", "B5 (176mm x 250mm)", "B6 (125mm x 176mm)"], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}, "selected_strategy": {"description": "Choose who to set the size of the saved image(s).", "label": "Image size strategy", "passthrough": false, "type": "list", "list": ["Set Pixels", "Set Page Size"], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}, "size_height": {"description": "The image height in millimeter.", "label": "Image height (mm):", "type": "float", "value": 210.0, "editor": {"decimals": 3, "max": 1000000000, "min": 0.0, "step": 1, "type": "spinbox"}}, "size_width": {"description": "The image width in millimeter.", "label": "Image width (mm):", "type": "float", "value": 297.0, "editor": {"decimals": 3, "max": 1000000000, "min": 0.0, "step": 1, "type": "spinbox"}}, "width": {"description": "The image width in pixels.", "label": "Image width (px):", "type": "integer", "value": 800, "editor": {"max": 1000000000, "min": 100, "step": 1, "type": "spinbox"}}}}}</parameters>
    <ports>
      <input key="figures" scheme="text" type="[figure]" type_base="[figure]" uuid="{faa299b3-18db-4f32-85ff-b109a4edd9ee}">
        <label>Input figures</label>
        <description>Input figures</description>
      </input>
      <input key="dsrcs" scheme="text" type="[datasource]" type_base="[datasource]" uuid="{853a2a27-74c2-4c86-b285-a10d1bf92157}">
        <label>Datasources</label>
        <description>Datasources</description>
      </input>
      <output key="port0" scheme="text" type="[datasource]" type_base="[datasource]" uuid="{e8446157-7d62-4fa0-9494-fd1155efa723}">
        <label>Datasources with paths to the created files</label>
        <description>Datasources with paths to the created files</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.export.exportexts" uuid="{1e8e03b0-c141-497f-abaa-d2eaea3a8bf5}" x="2100.0" y="2175.0">
    <label>Export Texts</label>
    <description>Export Texts</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "active_exporter": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "Text"}, "custom_exporter_data": {"label": "", "order": 1, "type": "group", "Text": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "txt"}}}, "directory": {"description": "Select the directory where to export the files.", "label": "Output directory", "order": 2, "type": "string", "value": ".", "editor": {"type": "dirname"}}, "filename": {"description": "Filename without extension.", "editor": null, "label": "Filename", "order": 3, "type": "string", "value": "out"}}</parameters>
    <ports>
      <input key="port0" scheme="hdf5" type="[text]" type_base="[text]" uuid="{ebe04175-a00d-4b2d-b995-4e9295726678}">
        <label>Texts to be exported</label>
        <description>Texts to be exported</description>
      </input>
      <output key="port0" scheme="text" type="[datasource]" type_base="[datasource]" uuid="{05ed40d7-df43-4eef-8fc0-4211ce177a8a}">
        <label>Datasources of exported files</label>
        <description>Datasources of exported files</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.export.exportadafs" uuid="{2b426d10-4e99-44ea-a894-24af434c5df8}" x="1875.0" y="1850.0">
    <label>Export ADAFs</label>
    <description>Export ADAFs</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(c) 2013 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "active_exporter": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "MDF"}, "custom_exporter_data": {"label": "", "order": 1, "type": "group", "HDF5": {"label": "", "type": "group", "column_as_name": {"description": "", "label": "", "passthrough": false, "type": "list", "list": ["meta_col0", "meta_col1", "meta_col10", "meta_col11", "meta_col12", "meta_col13", "meta_col14", "meta_col15", "meta_col16", "meta_col17", "meta_col18", "meta_col19", "meta_col2", "meta_col20", "meta_col21", "meta_col22", "meta_col23", "meta_col24", "meta_col25", "meta_col26", "meta_col27", "meta_col28", "meta_col29", "meta_col3", "meta_col30", "meta_col31", "meta_col32", "meta_col33", "meta_col34", "meta_col35", "meta_col36", "meta_col37", "meta_col38", "meta_col39", "meta_col4", "meta_col40", "meta_col41", "meta_col42", "meta_col43", "meta_col44", "meta_col45", "meta_col46", "meta_col47", "meta_col48", "meta_col49", "meta_col5", "meta_col50", "meta_col51", "meta_col52", "meta_col53", "meta_col54", "meta_col55", "meta_col56", "meta_col57", "meta_col58", "meta_col59", "meta_col6", "meta_col60", "meta_col61", "meta_col62", "meta_col63", "meta_col64", "meta_col65", "meta_col66", "meta_col67", "meta_col68", "meta_col69", "meta_col7", "meta_col70", "meta_col71", "meta_col72", "meta_col73", "meta_col74", "meta_col75", "meta_col76", "meta_col77", "meta_col78", "meta_col79", "meta_col8", "meta_col80", "meta_col81", "meta_col82", "meta_col83", "meta_col84", "meta_col85", "meta_col86", "meta_col87", "meta_col88", "meta_col89", "meta_col9", "meta_col90", "meta_col91", "meta_col92", "meta_col93", "meta_col94", "meta_col95", "meta_col96", "meta_col97", "meta_col98", "meta_col99"], "value": [], "value_names": [], "editor": {"type": "combobox", "options": []}}, "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "sydata"}, "selected_strategy": {"description": "The selected filename strategy.", "label": "Selected strategy", "passthrough": false, "type": "list", "list": ["Source identifier as name", "Column as name"], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}, "use_column_as_name": {"description": "Use a data column from meta or result as the filename.", "editor": null, "label": "Use a column as name", "type": "boolean", "value": false}, "use_filename_strategy": {"description": "Use a strategy to create the filename(s).", "editor": null, "label": "Use filename strategy", "type": "boolean", "value": false}}, "MDF": {"label": "", "type": "group", "column_as_name": {"description": "", "label": "", "passthrough": false, "type": "list", "list": ["meta_col0", "meta_col1", "meta_col10", "meta_col11", "meta_col12", "meta_col13", "meta_col14", "meta_col15", "meta_col16", "meta_col17", "meta_col18", "meta_col19", "meta_col2", "meta_col20", "meta_col21", "meta_col22", "meta_col23", "meta_col24", "meta_col25", "meta_col26", "meta_col27", "meta_col28", "meta_col29", "meta_col3", "meta_col30", "meta_col31", "meta_col32", "meta_col33", "meta_col34", "meta_col35", "meta_col36", "meta_col37", "meta_col38", "meta_col39", "meta_col4", "meta_col40", "meta_col41", "meta_col42", "meta_col43", "meta_col44", "meta_col45", "meta_col46", "meta_col47", "meta_col48", "meta_col49", "meta_col5", "meta_col50", "meta_col51", "meta_col52", "meta_col53", "meta_col54", "meta_col55", "meta_col56", "meta_col57", "meta_col58", "meta_col59", "meta_col6", "meta_col60", "meta_col61", "meta_col62", "meta_col63", "meta_col64", "meta_col65", "meta_col66", "meta_col67", "meta_col68", "meta_col69", "meta_col7", "meta_col70", "meta_col71", "meta_col72", "meta_col73", "meta_col74", "meta_col75", "meta_col76", "meta_col77", "meta_col78", "meta_col79", "meta_col8", "meta_col80", "meta_col81", "meta_col82", "meta_col83", "meta_col84", "meta_col85", "meta_col86", "meta_col87", "meta_col88", "meta_col89", "meta_col9", "meta_col90", "meta_col91", "meta_col92", "meta_col93", "meta_col94", "meta_col95", "meta_col96", "meta_col97", "meta_col98", "meta_col99"], "value": [], "value_names": [], "editor": {"type": "combobox", "options": []}}, "encoding": {"description": "All strings in the adaf file will be encoded using this character encoding.", "editor": null, "label": "Character encoding:", "type": "string", "value": "latin1"}, "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "dat"}, "selected_strategy": {"description": "The selected filename strategy.", "label": "Selected strategy", "passthrough": false, "type": "list", "list": ["Source identifier as name", "Column as name"], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}, "use_column_as_name": {"description": "Use a data column from meta or result as the filename.", "editor": null, "label": "Use a column as name", "type": "boolean", "value": false}, "use_filename_strategy": {"description": "Use a strategy to create the filename(s).", "editor": null, "label": "Use filename strategy", "type": "boolean", "value": false}}}, "directory": {"description": "Select the directory where to export the files.", "label": "Output directory", "order": 2, "type": "string", "value": ".", "editor": {"type": "dirname"}}, "filename": {"description": "Filename without extension.", "editor": null, "label": "Filename", "order": 3, "type": "string", "value": "adaf"}}</parameters>
    <ports>
      <input key="port0" scheme="hdf5" type="[adaf]" type_base="[adaf]" uuid="{fcc5f328-2a09-4551-a893-239ce61dd0a9}">
        <label>Input ADAFs</label>
        <description>Input ADAFs</description>
      </input>
      <output key="port0" scheme="text" type="[datasource]" type_base="[datasource]" uuid="{18742495-16da-406b-8a11-65b90c93bb93}">
        <label>Datasources of the exported files</label>
        <description>Datasources of the exported files</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.datasources.filedatasourcemultiple" uuid="{366bd4bf-7eec-43d9-b153-6f2793c40b86}" x="1725.0" y="1750.0">
    <label>Datasources</label>
    <description>Select data sources.</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.1</version>
    <parameters type="json">{"type": "group", "recursive": {"description": "Turn on/off recursive folder search for filenames satisfying the specified pattern beneath selected directory in the directory tree", "editor": null, "label": "Recursive", "order": 0, "type": "boolean", "value": false}, "directory": {"description": "Specify dictionary in dictionary tree where to search for files with the specified pattern or select by using the button with the three buttons", "label": "Directory", "order": 1, "type": "string", "value": "", "editor": {"type": "dirname"}}, "search_pattern": {"description": "A wildcard/regexp pattern to match files.", "editor": null, "label": "Search pattern", "order": 2, "type": "string", "value": "*.zip"}}</parameters>
    <ports>
      <output key="port1" scheme="text" type="[datasource]" type_base="[datasource]" uuid="{6d5e5ab1-4113-4f7d-9a06-8e63921272a0}">
        <label>Datasources with paths files</label>
        <description>Datasources with paths files</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.itemtolist" uuid="{43cc98f2-315f-4a94-8f89-31a57173e2ac}" x="2000.0" y="2175.0">
    <label>Item to List</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="item" scheme="hdf5" type="text" type_base="&lt;a&gt;" uuid="{75632a55-e86c-472f-9fcd-f4f33f01e761}">
        <label>Input Item</label>
        <description>Input Item</description>
      </input>
      <output key="list" scheme="hdf5" type="[text]" type_base="[&lt;a&gt;]" uuid="{88ed2758-2c99-41e6-8013-dc05a3d3949d}">
        <label>Item as List</label>
        <description>Item as List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.datasources.filedatasource" uuid="{591db173-2022-47b0-a8ed-0f00b9e578c2}" x="1725.0" y="2175.0">
    <label>Datasource</label>
    <description>Select a data source.</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.1</version>
    <parameters type="json">{"type": "group", "filename": {"description": "A filename including path if needed", "label": "Filename", "order": 0, "type": "string", "value": "text.txt", "editor": {"type": "filename", "filter": ["Any files (*)"]}}, "db_sqlalchemy_engine_url": {"description": "SQLAlchemy engine URL for connecting to the database", "editor": null, "label": "SQLAlchemy engine URL", "order": 1, "type": "string", "value": "mssql+pyodbc:///"}, "db_method": {"description": "Select which Database connection method that you want to use.", "label": "Database connection method", "order": 2, "type": "string", "value": "ODBC", "editor": {"type": "combobox", "options": ["ODBC", "SQLAlchemy"]}}, "db_driver": {"description": "Database driver to use.", "label": "Database driver", "order": 3, "passthrough": false, "type": "list", "list": ["SQL Server"], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}, "db_servername": {"description": "A valid name to a database server.", "editor": null, "label": "Server name", "order": 4, "type": "string", "value": ""}, "db_databasename": {"description": "The name of the database.", "editor": null, "label": "Database name", "order": 5, "type": "string", "value": ""}, "db_user": {"description": "A valid database user.", "editor": null, "label": "User", "order": 6, "type": "string", "value": ""}, "db_password": {"description": "A valid password for the selected user.", "editor": null, "label": "Password", "order": 7, "type": "string", "value": ""}, "db_connection_string": {"description": "A connection string that will override other settings.", "editor": null, "label": "Connection string", "order": 8, "type": "string", "value": ""}, "datasource_type": {"description": "Type of datasource.", "editor": null, "label": "Datasource type", "order": 9, "passthrough": false, "type": "list", "list": ["File", "Database"], "value": [0], "value_names": []}}</parameters>
    <ports>
      <output key="port1" scheme="text" type="datasource" type_base="datasource" uuid="{44a31cd0-ddb4-4093-9dc8-d9f35a5c3a31}">
        <label>Datasource with path to file</label>
        <description>Datasource with path to file</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.generate.signaltables" uuid="{684d7c66-feaa-4366-bd39-50696361b5e2}" x="1725.0" y="1950.0">
    <label>Generate Signal Tables</label>
    <description></description>
    <author>Benedikt Ziegler &lt;benedikt.ziegler@combine.se&gt;</author>
    <copyright>(C) 2016 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "table_params": {"label": "Table", "order": 0, "type": "page", "column_entries": {"description": "The number of column entries to be generated.", "label": "Column entries", "order": 0, "type": "integer", "value": 2, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}, "column_length": {"description": "The length of columns to be generated.", "label": "Column length", "order": 1, "type": "integer", "value": 1000, "editor": {"max": 100000000, "min": 0, "step": 1, "type": "spinbox"}}, "length": {"description": "The length of table list to be generated.", "label": "Table list length", "order": 2, "type": "integer", "value": 2, "editor": {"max": 10000, "min": 0, "step": 1, "type": "spinbox"}}}, "signal_params": {"label": "Signal", "order": 1, "type": "page", "signal_type": {"description": "The signal to be generated.", "label": "Signal type", "order": 0, "passthrough": false, "type": "list", "list": ["sinus", "tangent", "cosines"], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}, "amplitude": {"description": "The amplitude of the signal to be generated.", "editor": null, "label": "Amplitude", "order": 1, "type": "float", "value": 1.0}, "frequency": {"description": "The frequency of the signal to be generated.", "editor": null, "label": "Frequency", "order": 2, "type": "float", "value": 0.01}, "period": {"description": "The period of the signal to be generated.", "editor": null, "label": "Period", "order": 3, "type": "float", "value": 100.0}, "use_period": {"description": "Use Period [Checked] or Frequency [Unchecked] to generate the signal.", "editor": null, "label": "Period or Frequency", "order": 4, "type": "boolean", "value": true}, "phase_offset": {"description": "The phase offset of the signal to be generated.", "editor": null, "label": "Phase offset", "order": 5, "type": "float", "value": 0.0}, "add_noise": {"description": "If random noise should be added to the signals.", "editor": null, "label": "Add random noise", "order": 6, "type": "boolean", "value": false}, "noise_amplitude": {"description": "The amplitude of the noise.", "label": "Amplitude of noise", "order": 7, "type": "float", "value": 0.01, "editor": {"decimals": 2, "step": 0.05, "type": "spinbox"}}, "index_column": {"description": "Add an index column to the beginning of the table.", "editor": null, "label": "First column as index", "order": 8, "type": "boolean", "value": true}}}</parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="[table]" type_base="[table]" uuid="{7f83a666-0287-4db6-8e44-4da62c3d2d1a}">
        <label>Signal Tables</label>
        <description>Signal Tables</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.visualize.figurestablestreegui" uuid="{7eded293-1791-49fb-9296-c3bea03e8c1d}" x="1875.0" y="1950.0">
    <label>Figures from Tables</label>
    <description>Create a Figures from a Tables using a GUI.</description>
    <author>Benedikt Ziegler &lt;benedikt.ziegler@combine.se</author>
    <copyright>(c) 2016 Combine Control Systems AB</copyright>
    <version>0.2</version>
    <parameters type="json">{"type": "group", "parameters": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "[[\"axes.axes-1.xaxis_position\", \"bottom\"], [\"axes.axes-1.yaxis_position\", \"left\"], [\"line.line-1.axes\", \"axes-1\"], [\"line.line-1.xdata\", \"table.col('index').data\"], [\"line.line-1.ydata\", \"table.col('sinus1').data\"]]"}}</parameters>
    <ports>
      <input key="inputs" scheme="hdf5" type="[table]" type_base="[table]" uuid="{7c4ebae3-0a43-4178-8886-d54231fb890d}">
        <label>Input data</label>
        <description>Input data</description>
      </input>
      <output key="figures" scheme="text" type="[figure]" type_base="[figure]" uuid="{8edfd115-4bc4-4501-8128-35c4f5445198}">
        <label>Output figure</label>
        <description>Output figure</description>
      </output>
      <output key="config" scheme="hdf5" type="table" type_base="table" uuid="{b46fe675-a11b-4cb2-8400-66ae5d7a8c54}">
        <label>Configuration</label>
        <description>Configuration</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.export.exporttables" uuid="{8853d7fe-60c1-45fd-8db2-9497dd8e9ca4}" x="2225.0" y="1750.0">
    <label>Export Tables</label>
    <description>Export Tables</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(c) 2013 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "active_exporter": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "CSV"}, "custom_exporter_data": {"label": "", "order": 1, "type": "group", "CSV": {"label": "", "type": "group", "encoding": {"description": "Character encoding determines how different characters are represented when written to disc, sent over a network, etc.", "label": "Character encoding", "passthrough": false, "type": "list", "list": ["Western (ASCII)", "Western (ISO 8859-1)", "Western (ISO 8859-15)", "Western (Windows 1252)", "UTF-8"], "value": [4], "value_names": [], "editor": {"type": "combobox", "options": []}}, "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "csv"}, "header": {"description": "Export column names", "editor": null, "label": "Export header", "type": "boolean", "value": true}, "table_names": {"description": "Use table names as filenames", "editor": null, "label": "Use table names as filenames", "type": "boolean", "value": false}}, "HDF5": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "sydata"}, "table_names": {"description": "Use table names as filenames", "editor": null, "label": "Use table names as filenames", "type": "boolean", "value": false}}, "MAT": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "mat"}, "header": {"description": "Export column names", "editor": null, "label": "Export header", "type": "boolean", "value": true}, "table_names": {"description": "Use table names as filenames", "editor": null, "label": "Use table names as filenames", "type": "boolean", "value": false}}, "SQL": {"label": "", "type": "group", "odbc": {"description": "ODBC method to use.", "label": "ODBC method", "order": 0, "passthrough": false, "type": "list", "list": ["default", "pyodbc", "ceODBC"], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}, "connection_string": {"description": "String used by pyodbc to make a connection.", "editor": null, "label": "Connection string", "type": "string", "value": ""}, "db_method": {"description": "Select which Database connection method that you want to use.", "label": "Database connection method", "type": "string", "value": "ODBC", "editor": {"type": "combobox", "options": ["ODBC", "SQLAlchemy"]}}, "db_sqlalchemy_engine_url": {"description": "SQLAlchemy engine URL for connecting to the database", "editor": null, "label": "SQLAlchemy engine URL", "type": "string", "value": "mssql+pyodbc:///"}, "drop_table": {"description": "Drop table before adding data.", "editor": null, "label": "Drop table", "type": "boolean", "value": false}, "table_name": {"description": "The table name used when exporting.", "editor": null, "label": "Table name", "type": "string", "value": ""}, "use_nvarchar_size": {"description": "Use nvarchar(size) instead of nvarchar(MAX).", "editor": null, "label": "Use nvarchar(size)", "type": "boolean", "value": false}}, "SQLite": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "db"}}, "XLS": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "xls"}, "header": {"description": "Export column names", "editor": null, "label": "Export header", "type": "boolean", "value": true}}, "XLSX": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "xlsx"}, "header": {"description": "Export column names", "editor": null, "label": "Export header", "type": "boolean", "value": true}, "table_names": {"description": "Use table names as filenames", "editor": null, "label": "Use table names as filenames", "type": "boolean", "value": false}, "to_plot": {"description": "Select if incoming Tables with plot data should be embedded in the output file. If no plots are present, the option is disabled.", "editor": null, "label": "Embed plot in output file(s)", "type": "boolean", "value": false}, "to_sheets": {"description": "Select if incoming Tables are going to to be exported to sheets in a single file or to a single sheet inmultiple files.", "editor": null, "label": "Export data to sheets", "type": "boolean", "value": false}}}, "directory": {"description": "Select the directory where to export the files.", "label": "Output directory", "order": 2, "type": "string", "value": ".", "editor": {"type": "dirname"}}, "filename": {"description": "Filename without extension.", "editor": null, "label": "Filename", "order": 3, "type": "string", "value": "out"}, "plot": {"description": "If there is a plot attribute in the input tables(s), create a separate file with the plot.", "label": "Output separate plot file with the following extension:", "order": 4, "passthrough": false, "type": "list", "list": ["-", "eps", "pdf", "svg", "png"], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="port0" scheme="hdf5" type="[table]" type_base="[table]" uuid="{decac4f6-940e-4502-bb27-d25e0da76933}">
        <label>Tables to be exported</label>
        <description>Tables to be exported</description>
      </input>
      <output key="port0" scheme="text" type="[datasource]" type_base="[datasource]" uuid="{b9f46a8b-63ca-4e78-9932-e1e3388eb9bb}">
        <label>Datasources of exported files</label>
        <description>Datasources of exported files</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.adaf.importadafs" uuid="{8becbb98-e489-46ac-a48c-74b7f2ef8d58}" x="2100.0" y="1850.0">
    <label>ADAFs</label>
    <description>Import multiple adaf files</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "active_importer": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "MDF"}, "custom_importer_data": {"label": "", "order": 1, "type": "group", "Auto": {"label": "", "order": 0, "type": "group"}, "ADAF": {"label": "", "type": "group", "import_links": {"description": "Import with links to source file, this file and any files that it may link to  must not be moved while the flow is opened.", "editor": null, "label": "Import with links to source file", "type": "boolean", "value": false}}, "ATF": {"label": "", "type": "group", "measurements": {"description": "The measurements to import.", "label": "Select measurements:", "passthrough": false, "type": "list", "list": [], "value": [], "value_names": [], "editor": {"buttons": true, "invertbutton": true, "selection": "multi", "type": "listview"}}, "timeseries": {"description": "Import timeseries.", "editor": null, "label": "Import timeseries:", "type": "boolean", "value": true}}, "ATFX": {"label": "", "type": "group"}, "CM-ERG": {"label": "", "type": "group"}, "DIVA": {"label": "", "type": "group"}, "LAA": {"label": "", "type": "group"}, "MDF": {"label": "", "type": "group", "default_file": {"description": "", "label": "Default file:", "type": "string", "value": "", "editor": {"type": "filename", "filter": ["Any files (*)"]}}, "encoding": {"description": "The name of a character encoding as recognized by python.", "editor": null, "label": "Character Encoding:", "type": "string", "value": "latin1"}}}, "fail_strategy": {"description": "", "label": "Action on import failure", "order": 2, "passthrough": false, "type": "list", "list": ["Exception", "Create Empty Entry", "Skip File"], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="input" scheme="text" type="[datasource]" type_base="[datasource]" uuid="{c1786e9f-3aa6-4dba-bf86-6a1bd86f3dd9}">
        <label>Datasources</label>
        <description>Datasources</description>
      </input>
      <output key="output" scheme="hdf5" type="[adaf]" type_base="[adaf]" uuid="{8bb55a63-8f8a-4245-84ab-2e60a9ec29c4}">
        <label>Imported ADAFs</label>
        <description>Imported ADAFs</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.importtablemultiple" uuid="{97c4708f-9d68-4087-a6ea-cf3c959cae24}" x="2100.0" y="1750.0">
    <label>Tables</label>
    <description>Import datasources as Tables.</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "active_importer": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "CSV"}, "custom_importer_data": {"label": "", "order": 1, "type": "group", "Auto": {"label": "", "order": 0, "type": "group"}, "CSV": {"label": "", "type": "group", "data_end_row": {"description": "The data rows.", "label": "", "type": "integer", "value": 0, "editor": {"max": 9999999, "min": 0, "step": 1, "type": "spinbox"}}, "data_start_row": {"description": "The first row where data is stored.", "label": "", "type": "integer", "value": 4, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "delimiter": {"description": "", "editor": null, "label": "", "type": "string", "value": ","}, "description_row": {"description": "The row where the descriptions are located.", "label": "", "type": "integer", "value": 3, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "descriptions": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": true}, "double_quotations": {"description": "Remove double quotations in importation.", "editor": null, "label": "Remove double quotations", "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "editor": null, "label": "", "type": "boolean", "value": true}, "exceptions": {"description": "Select method to handle eventual errors", "label": "How to handle failed importation:", "passthrough": false, "type": "list", "list": ["Raise Exceptions", "Partially read file", "Read file without delimiters"], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}, "header_row": {"description": "The row where the headers are located.", "label": "", "type": "integer", "value": 1, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "headers": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": true}, "no_preview_rows": {"description": "The number of preview rows to show.", "label": "Number of preview rows", "type": "integer", "value": 20, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "other_delimiter": {"description": "Enter other delimiter than the standard ones.", "editor": null, "label": "", "type": "string", "value": ""}, "preview_start_row": {"description": "The first row where data will review from.", "label": "Preview start row", "type": "integer", "value": 1, "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}}, "read_selection": {"description": "Select how to read the data", "label": "", "passthrough": false, "type": "list", "list": ["Read to the end of file", "Read specified number of rows", "Read to specified number of rows from the end"], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}, "source_coding": {"description": "", "editor": null, "label": "", "type": "string", "value": "utf_8"}, "transposed": {"description": "Transpose the data.", "editor": null, "label": "Transpose input data", "type": "boolean", "value": false}, "unit_row": {"description": "The row where the units are located.", "label": "", "type": "integer", "value": 2, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "units": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": true}}, "HDF5": {"label": "", "type": "group", "path_list": {"description": "The paths selected to import data from.", "label": "Selected paths", "passthrough": false, "type": "list", "list": [], "value": [], "value_names": [], "editor": {"type": "combobox", "options": []}}}, "MAT": {"label": "", "type": "group", "data_end_row": {"description": "The data rows.", "label": "", "type": "integer", "value": 0, "editor": {"max": 9999999, "min": 0, "step": 1, "type": "spinbox"}}, "data_start_row": {"description": "The first row where data is stored.", "label": "", "type": "integer", "value": 1, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "end_of_file": {"description": "Select all rows to the end of the file.", "editor": null, "label": "", "type": "boolean", "value": true}, "exceptions": {"description": "Select method to handle eventual errors", "label": "How to handle failed importation:", "passthrough": false, "type": "list", "list": ["Raise Exceptions", "Partially read file", "Read file without delimiters"], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}, "no_preview_rows": {"description": "The number of preview rows to show.", "label": "Number of preview rows", "type": "integer", "value": 20, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "preview_start_row": {"description": "The first row where data will review from.", "label": "Preview start row", "type": "integer", "value": 1, "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}}, "read_selection": {"description": "Select how to read the data", "label": "", "passthrough": false, "type": "list", "list": ["Read to the end of file", "Read specified number of rows", "Read to specified number of rows from the end"], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}}, "SQL": {"label": "", "type": "group", "odbc": {"description": "ODBC method to use.", "label": "ODBC method", "order": 0, "passthrough": false, "type": "list", "list": ["default", "pyodbc", "ceODBC"], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}, "custom_query": {"description": "", "editor": null, "label": "", "type": "boolean", "value": false}, "join_column_selection": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}, "join_columns": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}, "join_tables": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}, "lineedit_query": {"description": "", "editor": null, "label": "", "type": "boolean", "value": false}, "preview_query": {"description": "", "editor": null, "label": "", "type": "string", "value": ""}, "query_str": {"description": "", "editor": null, "label": "", "type": "string", "value": ""}, "table_columns": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}, "table_names": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": ["test"], "value": [0], "value_names": ["test"]}, "table_query": {"description": "", "editor": null, "label": "", "type": "boolean", "value": true}, "where_add_comparison": {"description": "", "editor": null, "label": "", "type": "string", "value": ""}, "where_column_combo": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}, "where_comparison_combo": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": ["=", "&lt;", "&gt;", "&gt;=", "&lt;=", "!=", " LIKE ", " GLOB ", " BETWEEN "], "value": [0], "value_names": []}, "where_condition": {"description": "", "editor": null, "label": "", "type": "string", "value": ""}, "where_condition_list": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}}, "Table": {"label": "", "type": "group"}, "XLS": {"label": "", "type": "group", "data_end_row": {"description": "The last data row.", "label": "", "type": "integer", "value": 0, "editor": {"max": 9999999, "min": 0, "step": 1, "type": "spinbox"}}, "data_start_row": {"description": "The first row where data is stored.", "label": "", "type": "integer", "value": 2, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "description_row": {"description": "The row where the descriptions are located.", "label": "", "type": "integer", "value": 1, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "descriptions": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "editor": null, "label": "", "type": "boolean", "value": true}, "header_row": {"description": "The row where the headers are located.", "label": "", "type": "integer", "value": 1, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "headers": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": true}, "no_preview_rows": {"description": "The number of preview rows to show.", "label": "Number of preview rows", "type": "integer", "value": 20, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "preview_start_row": {"description": "The first row where data will review from.", "label": "Preview start row", "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "read_selection": {"description": "Select how to read the data", "label": "", "passthrough": false, "type": "list", "list": ["Read to the end of file", "Read specified number of rows", "Read to specified number of rows from the end"], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}, "transposed": {"description": "Transpose the data.", "editor": null, "label": "Transpose input", "type": "boolean", "value": false}, "unit_row": {"description": "The row where the units are located.", "label": "", "type": "integer", "value": 1, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "units": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": false}, "worksheet_name": {"description": "The worksheet to import from.", "label": "Select worksheet", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}}}, "fail_strategy": {"description": "", "label": "Action on import failure", "order": 2, "passthrough": false, "type": "list", "list": ["Exception", "Create Empty Entry", "Skip File"], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="port1" scheme="text" type="[datasource]" type_base="[datasource]" uuid="{1a298512-e946-45f0-83cb-3d083fd1295b}">
        <label>Datasource</label>
        <description>Datasource</description>
      </input>
      <output key="port1" scheme="hdf5" type="[table]" type_base="[table]" uuid="{2ac6cc4a-f5c0-42dd-9a08-dacd03dc3cad}">
        <label>Imported Tables</label>
        <description>Imported Tables</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.text.importtext" uuid="{b68025d0-f91b-4c3e-a31b-6f6f84489daa}" x="1875.0" y="2175.0">
    <label>Text</label>
    <description>Data source as text</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "active_importer": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "Auto"}, "custom_importer_data": {"label": "", "order": 1, "type": "group", "Auto": {"label": "", "order": 0, "type": "group"}, "Text": {"label": "", "type": "group"}}, "fail_strategy": {"description": "", "label": "Action on import failure", "order": 2, "passthrough": false, "type": "list", "list": ["Exception", "Create Empty Entry"], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="port1" scheme="text" type="datasource" type_base="datasource" uuid="{3f1061d4-992b-4296-bb18-773e6fa37ab6}">
        <label>Datasource</label>
        <description>Datasource</description>
      </input>
      <output key="port1" scheme="hdf5" type="text" type_base="text" uuid="{fcf42f68-237c-4c3f-b5d9-5e30fe13f644}">
        <label>Imported Text</label>
        <description>Imported Text</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.random.randomadafs" uuid="{bb880c77-17e4-44b7-9521-b54fca57e6c8}" x="1725.0" y="1850.0">
    <label>Random ADAFs</label>
    <description>Random ADAFs generator.</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "meta_entries": {"description": "The number of meta entries to be generated.", "label": "Meta entries", "order": 0, "type": "integer", "value": 100, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}, "meta_attributes": {"description": "The number of meta attributes to be generated.", "label": "Meta attributes", "order": 1, "type": "integer", "value": 5, "editor": {"max": 10000, "min": 0, "step": 1, "type": "spinbox"}}, "res_entries": {"description": "The number of res entries to be generated.", "label": "Res entries", "order": 2, "type": "integer", "value": 100, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}, "res_attributes": {"description": "The number of res attributes to be generated.", "label": "Res attributes", "order": 3, "type": "integer", "value": 5, "editor": {"max": 10000, "min": 0, "step": 1, "type": "spinbox"}}, "systems": {"description": "The number of systems to be generated.", "label": "Systems", "order": 4, "type": "integer", "value": 2, "editor": {"max": 100, "min": 0, "step": 1, "type": "spinbox"}}, "rasters": {"description": "The number of rasters to be generated.", "label": "Rasters per system", "order": 5, "type": "integer", "value": 2, "editor": {"max": 100, "min": 0, "step": 1, "type": "spinbox"}}, "signal_entries": {"description": "The number of signal entries to be generated.", "label": "Signals entries per raster", "order": 6, "type": "integer", "value": 100, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}, "signal_attributes": {"description": "The number of signal attributes to be generated.", "label": "Signal attributes", "order": 7, "type": "integer", "value": 5, "editor": {"max": 100, "min": 0, "step": 1, "type": "spinbox"}}, "signal_length": {"description": "The length of signals to be generated.", "label": "Signal length", "order": 8, "type": "integer", "value": 1000, "editor": {"max": 100000000, "min": 0, "step": 1, "type": "spinbox"}}, "length": {"description": "The length of adaf list to be generated.", "label": "ADAF list length", "order": 9, "type": "integer", "value": 2, "editor": {"max": 10000, "min": 0, "step": 1, "type": "spinbox"}}}</parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="[adaf]" type_base="[adaf]" uuid="{874dfb4c-fdd8-42fa-a353-2be88497706f}">
        <label>ADAFs with random numbers. The specifications of the ADAFs are declared in the configuration.</label>
        <description>ADAFs with random numbers. The specifications of the ADAFs are declared in the configuration.</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.create.createtable" uuid="{becd37f2-878f-46cf-9e73-e22cf2a29e61}" x="1725.0" y="2075.0">
    <label>Manually Create Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>(c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "json_table": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "[[\"paths\", \"U\", [\"./figure_from_datasource_1\", \"./figure_from_datasource_2\"]]]"}}</parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="table" type_base="table" uuid="{1c97ce04-b1c9-4a65-bfc0-c16479470d38}">
        <label>Manually created table</label>
        <description>Manually created table</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.create.createjson" uuid="{c6c66230-645a-487d-9eb7-c45b78901aee}" x="1725.0" y="2275.0">
    <label>Manually Create JSON</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "code": {"description": "Python expression that evaluates to a dictionary.", "label": "", "order": 0, "type": "string", "value": "{'column_length': {'value': 1}}", "editor": {"language": "python", "type": "code"}}}</parameters>
    <ports>
      <output key="output" scheme="hdf5" type="json" type_base="json" uuid="{f4c58680-24c9-458f-8ff3-8bc345b5dbb8}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.tabletodsrcs" uuid="{e670abf8-3816-4711-bb10-3a8927fd3b49}" x="1875.0" y="2075.0">
    <label>Table to Datasources</label>
    <description>Convert a table with file paths into a list of data sources pointing to those files.</description>
    <author>Greger Cronquist &lt;greger.cronquist@combine.se&gt;</author>
    <copyright>(c) 2013, 2017 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "files": {"description": "Column containing the filenames", "label": "File names", "order": 0, "passthrough": false, "type": "list", "list": ["paths"], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="" scheme="hdf5" type="table" type_base="table" uuid="{076d4602-5d5b-4653-9449-991c1c666e6b}">
        <label>Table containing a column of filepaths.</label>
        <description>Table containing a column of filepaths.</description>
      </input>
      <output key="" scheme="text" type="[datasource]" type_base="[datasource]" uuid="{c9ba84e3-9e35-4816-8f1c-e5d5d373eda0}">
        <label>Datasources</label>
        <description>Datasources</description>
      </output>
    </ports>
  </node>
  <connection type="[datasource]" uuid="{04ea8e2f-0e99-41ed-9d53-32051e2074c0}">
    <source node="{1c3feb50-53c3-448c-84f8-afea939c2122}" port="{e8446157-7d62-4fa0-9494-fd1155efa723}"/>
    <destination node="{b88322dd-2a0f-45c1-b332-63f9493e980a}" port="{7b5f145a-5477-4607-9c52-5733eafb003a}"/>
  </connection>
  <connection type="[table]" uuid="{14d8c2ca-4188-4949-a963-f283da4f2199}">
    <source node="{684d7c66-feaa-4366-bd39-50696361b5e2}" port="{7f83a666-0287-4db6-8e44-4da62c3d2d1a}"/>
    <destination node="{7eded293-1791-49fb-9296-c3bea03e8c1d}" port="{7c4ebae3-0a43-4178-8886-d54231fb890d}"/>
  </connection>
  <connection type="[figure]" uuid="{37276140-4e19-41bf-ab79-c67d99226943}">
    <source node="{7eded293-1791-49fb-9296-c3bea03e8c1d}" port="{8edfd115-4bc4-4501-8128-35c4f5445198}"/>
    <destination node="{1705a438-6dd8-4aa1-afc6-a34550d34a9e}" port="{f8333813-3866-4d92-9e60-6256817b5bcc}"/>
  </connection>
  <connection type="[datasource]" uuid="{37c50fe4-5438-4c32-9eeb-eefb24530dc1}">
    <source node="{1705a438-6dd8-4aa1-afc6-a34550d34a9e}" port="{7c225af7-937c-47d8-83e8-d17c5f76860a}"/>
    <destination node="{b88322dd-2a0f-45c1-b332-63f9493e980a}" port="{a5bc198e-3567-4615-bfba-defbe3c8939a}"/>
  </connection>
  <connection type="[datasource]" uuid="{3a8249ad-7b06-4d88-b214-799884497be0}">
    <source node="{2b426d10-4e99-44ea-a894-24af434c5df8}" port="{18742495-16da-406b-8a11-65b90c93bb93}"/>
    <destination node="{8becbb98-e489-46ac-a48c-74b7f2ef8d58}" port="{c1786e9f-3aa6-4dba-bf86-6a1bd86f3dd9}"/>
  </connection>
  <connection type="[figure]" uuid="{464793dd-eabf-40c3-82f7-03b60ad5b1eb}">
    <source node="{7eded293-1791-49fb-9296-c3bea03e8c1d}" port="{8edfd115-4bc4-4501-8128-35c4f5445198}"/>
    <destination node="{1c3feb50-53c3-448c-84f8-afea939c2122}" port="{faa299b3-18db-4f32-85ff-b109a4edd9ee}"/>
  </connection>
  <connection type="[datasource]" uuid="{59b370cd-ee9c-4989-8edd-ce370f3763ce}">
    <source node="{e670abf8-3816-4711-bb10-3a8927fd3b49}" port="{c9ba84e3-9e35-4816-8f1c-e5d5d373eda0}"/>
    <destination node="{1c3feb50-53c3-448c-84f8-afea939c2122}" port="{853a2a27-74c2-4c86-b285-a10d1bf92157}"/>
  </connection>
  <connection type="[adaf]" uuid="{64a897ce-9cab-4993-95ef-6fbcd470966d}">
    <source node="{8becbb98-e489-46ac-a48c-74b7f2ef8d58}" port="{8bb55a63-8f8a-4245-84ab-2e60a9ec29c4}"/>
    <destination node="{b88322dd-2a0f-45c1-b332-63f9493e980a}" port="{9d905145-f011-415a-9a2b-c2d63d5c2778}"/>
  </connection>
  <connection type="[datasource]" uuid="{67005747-818a-445f-a506-ba2acd4fed00}">
    <source node="{01656836-592e-4642-ac61-596e27ecf10b}" port="{866a0a7c-7ce3-4a17-9aa1-7b91084c6c93}"/>
    <destination node="{b88322dd-2a0f-45c1-b332-63f9493e980a}" port="{4d5e83ea-b190-47cf-ad9e-70bac02ac64a}"/>
  </connection>
  <connection type="[datasource]" uuid="{6d0ad4a0-3f17-480f-ae57-da569ee1b130}">
    <source node="{1e8e03b0-c141-497f-abaa-d2eaea3a8bf5}" port="{05ed40d7-df43-4eef-8fc0-4211ce177a8a}"/>
    <destination node="{b88322dd-2a0f-45c1-b332-63f9493e980a}" port="{9cb960ce-1940-4e2d-96e4-7959945bda1b}"/>
  </connection>
  <connection type="datasource" uuid="{788ef4ae-11e9-4c26-80cf-677904fe1847}">
    <source node="{591db173-2022-47b0-a8ed-0f00b9e578c2}" port="{44a31cd0-ddb4-4093-9dc8-d9f35a5c3a31}"/>
    <destination node="{b68025d0-f91b-4c3e-a31b-6f6f84489daa}" port="{3f1061d4-992b-4296-bb18-773e6fa37ab6}"/>
  </connection>
  <connection type="table" uuid="{7ab43f41-8401-4b52-bbb0-9da5f7edc55f}">
    <source node="{becd37f2-878f-46cf-9e73-e22cf2a29e61}" port="{1c97ce04-b1c9-4a65-bfc0-c16479470d38}"/>
    <destination node="{e670abf8-3816-4711-bb10-3a8927fd3b49}" port="{076d4602-5d5b-4653-9449-991c1c666e6b}"/>
  </connection>
  <connection type="[datasource]" uuid="{7ef5bf64-87e7-4f7a-b5c0-4c930595720d}">
    <source node="{366bd4bf-7eec-43d9-b153-6f2793c40b86}" port="{6d5e5ab1-4113-4f7d-9a06-8e63921272a0}"/>
    <destination node="{01656836-592e-4642-ac61-596e27ecf10b}" port="{6fc3b8bc-8418-4de3-a4a4-9bcb535038a8}"/>
  </connection>
  <connection type="[adaf]" uuid="{82e70588-f0d9-4de6-8b30-85b9a3a64f11}">
    <source node="{bb880c77-17e4-44b7-9521-b54fca57e6c8}" port="{874dfb4c-fdd8-42fa-a353-2be88497706f}"/>
    <destination node="{2b426d10-4e99-44ea-a894-24af434c5df8}" port="{fcc5f328-2a09-4551-a893-239ce61dd0a9}"/>
  </connection>
  <connection type="[datasource]" uuid="{9251b8ba-864a-4494-ab51-2ffe83d22fef}">
    <source node="{8853d7fe-60c1-45fd-8db2-9497dd8e9ca4}" port="{b9f46a8b-63ca-4e78-9932-e1e3388eb9bb}"/>
    <destination node="{b88322dd-2a0f-45c1-b332-63f9493e980a}" port="{28c1306c-9be3-420a-942d-4b0ee7a1ac5d}"/>
  </connection>
  <connection type="[datasource]" uuid="{a7738e0c-17bd-484d-95d0-793201b9998f}">
    <source node="{01656836-592e-4642-ac61-596e27ecf10b}" port="{866a0a7c-7ce3-4a17-9aa1-7b91084c6c93}"/>
    <destination node="{97c4708f-9d68-4087-a6ea-cf3c959cae24}" port="{1a298512-e946-45f0-83cb-3d083fd1295b}"/>
  </connection>
  <connection type="text" uuid="{b535e051-f78f-46b1-9c4e-937ee97ad990}">
    <source node="{b68025d0-f91b-4c3e-a31b-6f6f84489daa}" port="{fcf42f68-237c-4c3f-b5d9-5e30fe13f644}"/>
    <destination node="{43cc98f2-315f-4a94-8f89-31a57173e2ac}" port="{75632a55-e86c-472f-9fcd-f4f33f01e761}"/>
  </connection>
  <connection type="[table]" uuid="{cdbe16e1-4717-42d1-afa6-a5d9fc27b829}">
    <source node="{97c4708f-9d68-4087-a6ea-cf3c959cae24}" port="{2ac6cc4a-f5c0-42dd-9a08-dacd03dc3cad}"/>
    <destination node="{8853d7fe-60c1-45fd-8db2-9497dd8e9ca4}" port="{decac4f6-940e-4502-bb27-d25e0da76933}"/>
  </connection>
  <connection type="[text]" uuid="{d3a2f56f-6a00-4d39-bd57-d49c4fc89f01}">
    <source node="{43cc98f2-315f-4a94-8f89-31a57173e2ac}" port="{88ed2758-2c99-41e6-8013-dc05a3d3949d}"/>
    <destination node="{1e8e03b0-c141-497f-abaa-d2eaea3a8bf5}" port="{ebe04175-a00d-4b2d-b995-4e9295726678}"/>
  </connection>
  <connection type="[datasource]" uuid="{efe471e2-4b7c-4507-9b17-9b878901849a}">
    <source node="{2b426d10-4e99-44ea-a894-24af434c5df8}" port="{18742495-16da-406b-8a11-65b90c93bb93}"/>
    <destination node="{b88322dd-2a0f-45c1-b332-63f9493e980a}" port="{f2468644-aca3-4614-8e79-9f5dc9897887}"/>
  </connection>
  <text color="Beige" height="50.0" uuid="{6e6f05f7-100c-4e03-8eb7-8b0982288c30}" width="150.0" x="2375.0" y="1750.0">Cleanup. Can be removed if wanted.</text>
  <text color="Beige" height="250.0" uuid="{32e99a63-8371-4c04-aecf-0fe65ed60ec3}" width="425.0" x="1725.0" y="2400.0">
- Node example: *org.sysess.sympathy.data.adaf.importadafs*
- Node example: *org.sysess.sympathy.export.exportdatasources*
- Node example: *org.sysess.sympathy.datasources.filedatasource*
- Node example: *org.sysess.sympathy.datasources.filedatasourcemultiple*
- Node example: *org.sysess.sympathy.generate.signaltables*
- Node example: *org.sysess.sympathy.create.createjson*
- Node example: *org.sysess.sympathy.create.createtable*
- Node example: *org.sysess.sympathy.random.randomadafs*
- Node example: *org.sysess.sympathy.data.table.tabletodsrcs*
- Node example: *org.sysess.sympathy.data.table.importtablemultiple*
- Node example: *org.sysess.sympathy.data.text.importtext*
- Node example: *org.sysess.sympathy.export.exportadafs*
- Node example: *org.sysess.sympathy.export.exportfigures*
- Node example: *org.sysess.sympathy.export.exportfigureswithdscrs*
- Node example: *org.sysess.sympathy.export.exporttables*
- Node example: *org.sysess.sympathy.export.exportexts*
- Node example: *org.sysess.sympathy.visualize.figurestablestreegui*</text>
</flow>
