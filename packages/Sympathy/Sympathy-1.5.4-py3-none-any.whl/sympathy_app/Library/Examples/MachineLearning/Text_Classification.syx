<?xml version='1.0' encoding='ASCII'?>
<flow xmlns="http://www.sysess.org/sympathyfordata/workflow/1.0" cls="Flow" height="50.0" id="" is_locked="False" uuid="{bd186dbb-b9d2-43a6-bc02-eda17cabfd45}" width="50.0" x="0.0" y="0.0">
  <label></label>
  <description></description>
  <author></author>
  <copyright></copyright>
  <version></version>
  <min_version></min_version>
  <aggregation type="json"><![CDATA[null]]></aggregation>
  <libraries type="json"><![CDATA[[]]]></libraries>
  <pythonpaths type="json"><![CDATA[[]]]></pythonpaths>
  <overrides type="json"><![CDATA[{}]]></overrides>
  <environment type="json"><![CDATA[{"NO_TEST": ""}]]></environment>
  <parameters type="json"><![CDATA[{"environment": {"NO_TEST": ""}}]]></parameters>
  <ports/>
  <flow cls="Lambda" height="50.0" id="" is_locked="False" uuid="{ac2497e9-5191-4c5d-b62b-0d947618bb70}" width="50.0" x="625.0" y="1500.0">
    <label>Read dataset</label>
    <description></description>
    <author></author>
    <copyright></copyright>
    <version></version>
    <min_version></min_version>
    <aggregation type="json"><![CDATA[null]]></aggregation>
    <libraries type="json"><![CDATA[[]]]></libraries>
    <pythonpaths type="json"><![CDATA[[]]]></pythonpaths>
    <overrides type="json"><![CDATA[{}]]></overrides>
    <environment type="json"><![CDATA[{}]]></environment>
    <parameters type="json"><![CDATA[{"environment": {}}]]></parameters>
    <ports>
      <input index="0" key="Port" optional="False" parent="False" scheme="hdf5" type="datasource" uuid="{a1442b99-3aee-4416-bc1e-1fb18da63e22}" x="1425.0" y="2000.0">
        <label>Port</label>
        <description>Port</description>
      </input>
      <output index="0" key="Port" optional="False" parent="False" scheme="hdf5" type="[(table, text)]" uuid="{84900397-4776-416f-98a0-1dd9a3e4c837}" x="2300.0" y="1975.0">
        <label>Port</label>
        <description>Port</description>
      </output>
    </ports>
    <basic_ports>
      <output key="Function" scheme="hdf5" type="datasource -&gt; [(table, text)]" type_base="&lt;a&gt;" uuid="{0e1a8b9b-a4e3-4d31-929e-84552e88975d}">
        <label>Lambda function</label>
        <description>Lambda function</description>
      </output>
    </basic_ports>
    <flow cls="Lambda" height="50.0" id="" is_locked="False" uuid="{8e8aecad-5c9a-4096-ace1-ec2f86575d14}" width="50.0" x="1825.5" y="2020.5">
      <label>add category to text</label>
      <description></description>
      <author></author>
      <copyright></copyright>
      <version></version>
      <min_version></min_version>
      <aggregation type="json"><![CDATA[null]]></aggregation>
      <libraries type="json"><![CDATA[[]]]></libraries>
      <pythonpaths type="json"><![CDATA[[]]]></pythonpaths>
      <overrides type="json"><![CDATA[{}]]></overrides>
      <environment type="json"><![CDATA[{}]]></environment>
      <parameters type="json"><![CDATA[{"environment": {}}]]></parameters>
      <ports>
        <input index="0" key="Port" optional="False" parent="False" scheme="hdf5" type="table" uuid="{0fc97174-3a0b-463f-8a7f-872da4ba461a}" x="1650.0" y="2000.0">
          <label>Port</label>
          <description>Port</description>
        </input>
        <input index="1" key="Port" optional="False" parent="False" scheme="hdf5" type="text" uuid="{02f7ede9-283d-4215-89fc-39aa0f21e95b}" x="1650.0" y="2075.0">
          <label>Port</label>
          <description>Port</description>
        </input>
        <output index="0" key="Port" optional="False" parent="False" scheme="hdf5" type="(table, text)" uuid="{084d4c86-2989-43ac-a02c-831ac5790cdb}" x="2100.0" y="2000.0">
          <label>Port</label>
          <description>Port</description>
        </output>
      </ports>
      <basic_ports>
        <output key="Function" scheme="hdf5" type="table -&gt; text -&gt; (table, text)" type_base="&lt;a&gt;" uuid="{2f5262e1-b7b5-4076-ba19-db430f995ab7}">
          <label>Lambda function</label>
          <description>Lambda function</description>
        </output>
      </basic_ports>
      <node id="org.sysess.sympathy.tuple.tuple2" port_format="1.1" uuid="{8c35f655-1869-46b1-8af6-3ad5cad4d9fc}" x="1900.0" y="2000.0">
        <label>Tuple</label>
        <description></description>
        <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
        <copyright>(C) 2017 Combine Control Systems AB</copyright>
        <version>1.0</version>
        <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
        <ports>
          <input key="input" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{9ca94f97-ec23-4647-a1ff-e21cc52f55d4}">
            <label>Input</label>
            <description>Input</description>
          </input>
          <input key="input" scheme="hdf5" type="text" type_base="&lt;b&gt;" uuid="{f4c7c1f5-e4e2-495c-bc81-aadba19d6ada}">
            <label>Input</label>
            <description>Input</description>
          </input>
          <output key="output" scheme="hdf5" type="(table, text)" type_base="(&lt;a&gt;, &lt;b&gt;)" uuid="{f75d80ac-951d-4c72-9e84-de6145ed7c0c}">
            <label>Output</label>
            <description>Output</description>
          </output>
        </ports>
      </node>
      <connection type="text" uuid="{96bbf29a-2d4a-4f8a-9d00-91f61b4ad37e}">
        <source node="{8e8aecad-5c9a-4096-ace1-ec2f86575d14}" port="{02f7ede9-283d-4215-89fc-39aa0f21e95b}"/>
        <destination node="{8c35f655-1869-46b1-8af6-3ad5cad4d9fc}" port="{f4c7c1f5-e4e2-495c-bc81-aadba19d6ada}"/>
      </connection>
      <connection type="table" uuid="{b8827150-0217-4ba4-8c36-c53905a84df7}">
        <source node="{8e8aecad-5c9a-4096-ace1-ec2f86575d14}" port="{0fc97174-3a0b-463f-8a7f-872da4ba461a}"/>
        <destination node="{8c35f655-1869-46b1-8af6-3ad5cad4d9fc}" port="{9ca94f97-ec23-4647-a1ff-e21cc52f55d4}"/>
      </connection>
      <connection type="(table, text)" uuid="{c1f9b1bf-b9f9-4135-b94a-21566b7c74e6}">
        <source node="{8c35f655-1869-46b1-8af6-3ad5cad4d9fc}" port="{f75d80ac-951d-4c72-9e84-de6145ed7c0c}"/>
        <destination node="{8e8aecad-5c9a-4096-ace1-ec2f86575d14}" port="{084d4c86-2989-43ac-a02c-831ac5790cdb}"/>
      </connection>
    </flow>
    <node id="org.sysess.sympathy.data.table.dsrctotable" uuid="{0c473b98-85c0-4505-9e30-4012f3cfcd29}" x="1575.5" y="1995.5">
      <label>Datasource to Table</label>
      <description>Convert a single data source into a table containing that filename.</description>
      <author>Magnus Sanden &lt;magnus.sanden@combine.se&gt;</author>
      <copyright>(c) 2013, 2017, Combine Control Systems AB</copyright>
      <version>1.1</version>
      <parameters type="json"><![CDATA[{"type": "group", "relpath": {"description": "If ticked, an attempt will be made to convert all the paths in the Datasources to relative paths( relative to the current (sub)flow).", "editor": null, "label": "Force relative paths", "order": 0, "type": "boolean", "value": false}}]]></parameters>
      <ports>
        <input key="in" scheme="hdf5" type="datasource" type_base="datasource" uuid="{062d433f-75ca-4579-814c-9c37d3de26fe}">
          <label>Datasource with filepaths</label>
          <description>Datasource with filepaths</description>
        </input>
        <output key="out" scheme="hdf5" type="table" type_base="table" uuid="{07af2955-b380-4c58-b6c1-d8294cb4700a}">
          <label>Table with a single column with a filepath</label>
          <description>Table with a single column with a filepath</description>
        </output>
      </ports>
    </node>
    <node id="org.sysess.builtin.apply" uuid="{27243f22-75f5-422f-84de-5e9673127b15}" x="2000.5" y="2020.5">
      <label>Apply</label>
      <description>Apply Lambda function to Argument</description>
      <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
      <copyright>(C) 2015-2016 Combine Control Systems AB</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
      <ports>
        <input key="Function" scheme="hdf5" type="table -&gt; text -&gt; (table, text)" type_base="&lt;a&gt; -&gt; &lt;b&gt;" uuid="{231023ac-f2fd-4c7e-a708-40942c4681f2}">
          <label>Lambda Function to Apply</label>
          <description>Lambda Function to Apply</description>
        </input>
        <input key="Argument" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{d644acbb-680c-49ea-900d-86d2af04e527}">
          <label>Argument</label>
          <description>Argument</description>
        </input>
        <output key="Output" scheme="hdf5" type="text -&gt; (table, text)" type_base="&lt;b&gt;" uuid="{00aa26d5-e080-4229-a805-f661ece94fc2}">
          <label>Output</label>
          <description>Output</description>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.create.createjson" port_format="1.1" uuid="{615febf2-5307-4f39-a79e-ae0986ac8af3}" x="1700.5" y="1920.5">
      <label>Manually Create JSON</label>
      <description></description>
      <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
      <copyright>(C) 2017 Combine Control Systems AB</copyright>
      <version>0.1</version>
      <parameters type="json"><![CDATA[{"type": "group", "code": {"description": "Python expression that evaluates to a dictionary.", "label": "", "order": 0, "type": "string", "value": "{'directory': {'value': arg.col('filepaths').data[0]} }", "editor": {"language": "python", "type": "code"}}}]]></parameters>
      <ports>
        <input key="arg" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{104fcc5e-a27b-4dbb-8fd1-91a23343ed5a}">
          <label>Input</label>
          <description>Input</description>
        </input>
        <output key="output" scheme="hdf5" type="json" type_base="json" uuid="{ade138ac-61ce-444c-b92f-82427db0086d}">
          <label>Output</label>
          <description>Output</description>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.data.table.calculatortable" uuid="{8f1ffe53-7aa8-44fe-a582-02db7b822b14}" x="1825.5" y="2095.5">
      <label>Categories</label>
      <description>Performs user-defined python calculations</description>
      <author>Greger Cronquist &lt;greger.cronquist@combine.se&gt;, Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;, Sara Gustafzelius &lt;sara.gustafzelius@combine.se&gt;, Benedikt Ziegler &lt;benedikt.ziegler@combine.se&gt;</author>
      <copyright>(c) 2016 Combine Control Systems AB</copyright>
      <version>3.0</version>
      <parameters type="json"><![CDATA[{"type": "group", "calc_list": {"description": "List of calculations.", "editor": null, "label": "List of calculations", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": ["${category} = np.array([x.split('/')[-1] for x in table.col('filepaths').data]) #ENABLED:1"], "value": [0], "value_names": []}, "same_length_res": {"description": "Gather all the results generated from an incoming data into a common output table. This requires that the results all have the same length. An error will be given if the lengths of the outgoing results differ.", "editor": null, "label": "Put results in common outputs.", "order": 1, "type": "boolean", "value": true}, "copy_input": {"description": "If enabled the incoming data will be copied to the output before running the calculations. This requires that the results will all have the same length. An exception will be raised if the lengths of the outgoing results differ.", "editor": null, "label": "Copy input", "order": 2, "type": "boolean", "value": false}, "fail_strategy": {"description": "Decide how a failed calculation should be handled", "label": "Action on calculation failure", "mode": "selected", "order": 3, "passthrough": false, "type": "list", "list": ["Exception", "Skip calculation"], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}}]]></parameters>
      <ports>
        <input key="port0" scheme="hdf5" type="table" type_base="table" uuid="{f543a320-237d-4768-ad44-8f4ca5628d5e}">
          <label>Input Table</label>
          <description>Input Table</description>
        </input>
        <output key="port1" scheme="hdf5" type="table" type_base="table" uuid="{6ff8c4ca-72f8-482e-8c9b-3faf6b49d862}">
          <label>Table with results from the calculation performed by the node.</label>
          <description>Table with results from the calculation performed by the node.</description>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.data.text.importtexts" uuid="{d50cda8d-1104-4710-9c43-4cc8c5426a5a}" x="1925.5" y="1920.5">
      <label>Texts</label>
      <description>Data source as Texts</description>
      <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
      <copyright>(C) 2013 Combine Control Systems AB</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"type": "group", "active_importer": {"description": "Select data format importer", "editor": null, "label": "Importer", "order": 0, "type": "string", "value": "Auto"}, "custom_importer_data": {"label": "", "order": 1, "type": "group", "Auto": {"label": "", "order": 0, "type": "group"}, "Text": {"label": "", "type": "group", "source_coding": {"description": "Encoding used to decode file", "label": "Encoding", "type": "string", "value": "UTF-8", "editor": {"type": "combobox", "options": ["Western (ISO 8859-15)", "UTF-16", "UTF-8", "Western (Windows 1252)", "UTF-16 LE", "UTF-16 BE", "Western (ASCII)", "Western (ISO 8859-1)"]}}}}, "fail_strategy": {"description": "Decide how failure to import a file should be handled.", "label": "Action on import failure", "mode": "selected", "order": 2, "passthrough": false, "type": "list", "list": ["Exception", "Create Empty Entry", "Skip File"], "value": [2], "value_names": ["Skip File"], "editor": {"type": "combobox", "options": []}}}]]></parameters>
      <ports>
        <input key="port1" scheme="text" type="[datasource]" type_base="[datasource]" uuid="{c7e54e91-b9a5-4c47-bccc-d057ad7537ff}">
          <label>Datasource</label>
          <description>Datasource</description>
        </input>
        <output key="port1" scheme="hdf5" type="[text]" type_base="[text]" uuid="{c5054100-ffde-4279-a38d-508a525439c1}">
          <label>Imported Texts</label>
          <description>Imported Texts</description>
        </output>
      </ports>
    </node>
    <node id="org.sysess.builtin.map" uuid="{dfb375f6-2f1c-47d2-b441-fa7adc300f88}" x="2100.5" y="1920.5">
      <label>Map</label>
      <description>Map Lambda function over each element in argument list</description>
      <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
      <copyright>(C) 2015-2016 Combine Control Systems AB</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"type": "group", "fail_strategy": {"description": "Decide how failure to process an item should be handled.", "label": "Action on exception", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": ["Error", "Create Empty Item", "Skip Item"], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}}]]></parameters>
      <ports>
        <input key="Function" scheme="hdf5" type="text -&gt; (table, text)" type_base="&lt;a&gt; -&gt; &lt;b&gt;" uuid="{f7eca2de-312a-4edd-bc32-4ad0d6e83065}">
          <label>Lambda Function to Map</label>
          <description>Lambda Function to Map</description>
        </input>
        <input key="List" scheme="hdf5" type="[text]" type_base="[&lt;a&gt;]" uuid="{7f598d09-501f-4bb9-8ce1-1444b7491ad3}">
          <label>Argument List</label>
          <description>Argument List</description>
        </input>
        <output key="List" scheme="hdf5" type="[(table, text)]" type_base="[&lt;b&gt;]" uuid="{41597d72-a603-4f51-8c29-b239806c1346}">
          <label>Output List</label>
          <description>Output List</description>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.datasources.filedatasourcemultiple" port_format="1.1" uuid="{f8b9aede-d27b-4719-adf2-616dea5487d4}" x="1825.5" y="1920.5">
      <label>read category</label>
      <description>Select data sources.</description>
      <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
      <copyright>(C) 2013 Combine Control Systems AB</copyright>
      <version>1.1</version>
      <parameters type="json"><![CDATA[{"type": "group", "recursive": {"description": "Turn on/off recursive folder search for filenames satisfying the specified pattern beneath selected directory in the directory tree", "editor": null, "label": "Recursive", "order": 0, "type": "boolean", "value": false}, "directory": {"description": "Specify dictionary in dictionary tree where to search for files with the specified pattern or select by using the button with the three buttons", "label": "Directory", "order": 1, "type": "string", "value": "/home/mathias/datasets/20news/20news-bydate-train/alt.atheism", "editor": {"type": "dirname"}}, "search_pattern": {"description": "A wildcard/regexp pattern to match files.", "editor": null, "label": "Search pattern", "order": 2, "type": "string", "value": "*"}}]]></parameters>
      <ports>
        <input key="__sy_conf__" scheme="hdf5" type="json" type_base="json" uuid="{edd27e71-8fa3-4991-81c1-2148abf4c5b2}">
          <label>Configuration port</label>
          <description>Configuration port</description>
        </input>
        <output key="port1" scheme="text" type="[datasource]" type_base="[datasource]" uuid="{c8093440-2f70-47d1-a62e-5c311ed799e7}">
          <label>Datasources with paths files</label>
          <description>Datasources with paths files</description>
        </output>
      </ports>
    </node>
    <connection type="table -&gt; text -&gt; (table, text)" uuid="{16f1904d-e8f9-48e9-99e0-637b506633c4}">
      <source node="{8e8aecad-5c9a-4096-ace1-ec2f86575d14}" port="{2f5262e1-b7b5-4076-ba19-db430f995ab7}"/>
      <destination node="{27243f22-75f5-422f-84de-5e9673127b15}" port="{231023ac-f2fd-4c7e-a708-40942c4681f2}"/>
    </connection>
    <connection type="json" uuid="{1ac75fb3-9169-4f0b-a8f4-3da4874e92b3}">
      <source node="{615febf2-5307-4f39-a79e-ae0986ac8af3}" port="{ade138ac-61ce-444c-b92f-82427db0086d}"/>
      <destination node="{f8b9aede-d27b-4719-adf2-616dea5487d4}" port="{edd27e71-8fa3-4991-81c1-2148abf4c5b2}"/>
    </connection>
    <connection type="[text]" uuid="{3562ccc8-e0a0-4526-8176-3f71543f316b}">
      <source node="{d50cda8d-1104-4710-9c43-4cc8c5426a5a}" port="{c5054100-ffde-4279-a38d-508a525439c1}"/>
      <destination node="{dfb375f6-2f1c-47d2-b441-fa7adc300f88}" port="{7f598d09-501f-4bb9-8ce1-1444b7491ad3}"/>
    </connection>
    <connection type="table" uuid="{8f8dc77c-9d95-4c89-a71a-b299ab118278}">
      <source node="{8f1ffe53-7aa8-44fe-a582-02db7b822b14}" port="{6ff8c4ca-72f8-482e-8c9b-3faf6b49d862}"/>
      <destination node="{27243f22-75f5-422f-84de-5e9673127b15}" port="{d644acbb-680c-49ea-900d-86d2af04e527}"/>
    </connection>
    <connection type="datasource" uuid="{903c0398-f814-4ab4-bfbc-709cb0d9bc45}">
      <source node="{ac2497e9-5191-4c5d-b62b-0d947618bb70}" port="{a1442b99-3aee-4416-bc1e-1fb18da63e22}"/>
      <destination node="{0c473b98-85c0-4505-9e30-4012f3cfcd29}" port="{062d433f-75ca-4579-814c-9c37d3de26fe}"/>
    </connection>
    <connection type="[datasource]" uuid="{9d360e51-f8b1-4666-896a-317912230775}">
      <source node="{f8b9aede-d27b-4719-adf2-616dea5487d4}" port="{c8093440-2f70-47d1-a62e-5c311ed799e7}"/>
      <destination node="{d50cda8d-1104-4710-9c43-4cc8c5426a5a}" port="{c7e54e91-b9a5-4c47-bccc-d057ad7537ff}"/>
    </connection>
    <connection type="text -&gt; (table, text)" uuid="{badf6efb-1dc7-4c9b-92b7-07c9dacf9359}">
      <source node="{27243f22-75f5-422f-84de-5e9673127b15}" port="{00aa26d5-e080-4229-a805-f661ece94fc2}"/>
      <destination node="{dfb375f6-2f1c-47d2-b441-fa7adc300f88}" port="{f7eca2de-312a-4edd-bc32-4ad0d6e83065}"/>
    </connection>
    <connection type="table" uuid="{cafddb17-9d79-46cc-824a-f355b65580b6}">
      <source node="{0c473b98-85c0-4505-9e30-4012f3cfcd29}" port="{07af2955-b380-4c58-b6c1-d8294cb4700a}"/>
      <destination node="{8f1ffe53-7aa8-44fe-a582-02db7b822b14}" port="{f543a320-237d-4768-ad44-8f4ca5628d5e}"/>
    </connection>
    <connection type="table" uuid="{ce3a6fdc-792f-4ecc-bd02-9b0da1421ae6}">
      <source node="{0c473b98-85c0-4505-9e30-4012f3cfcd29}" port="{07af2955-b380-4c58-b6c1-d8294cb4700a}"/>
      <destination node="{615febf2-5307-4f39-a79e-ae0986ac8af3}" port="{104fcc5e-a27b-4dbb-8fd1-91a23343ed5a}"/>
    </connection>
    <connection type="[(table, text)]" uuid="{e0e0c4c4-663d-49b9-970f-6b8ff760547a}">
      <source node="{dfb375f6-2f1c-47d2-b441-fa7adc300f88}" port="{41597d72-a603-4f51-8c29-b239806c1346}"/>
      <destination node="{ac2497e9-5191-4c5d-b62b-0d947618bb70}" port="{84900397-4776-416f-98a0-1dd9a3e4c837}"/>
    </connection>
  </flow>
  <node id="org.sysess.sympathy.machinelearning.crossval_kfold" uuid="{1e878d32-4ea2-4199-a800-9d80053034d7}" x="1475.0" y="1925.0">
    <label>K-fold cross validation</label>
    <description>Gives splits for K-fold cross validation</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group", "n_splits": {"description": "Number of folds, must be atleast 2", "editor": null, "label": "Number of splits", "order": 0, "type": "integer", "value": 3}, "shuffle": {"description": "Shuffle the data before splitting", "editor": null, "label": "Shuffle", "order": 1, "type": "boolean", "value": true}}]]></parameters>
    <ports>
      <input key="X" scheme="hdf5" type="table" type_base="table" uuid="{d4b5f3a1-ac48-4507-9fa4-e812122dd4cb}">
        <label>X</label>
        <description>X</description>
      </input>
      <input key="Y" scheme="hdf5" type="table" type_base="table" uuid="{3621a09b-4c61-4857-94ec-1babc84cfd8b}">
        <label>Y</label>
        <description>Y</description>
      </input>
      <output key="out" scheme="hdf5" type="[(table, table)]" type_base="[(table, table)]" uuid="{725045d5-7504-4dc4-b784-545c4734b5f8}">
        <label>out</label>
        <description>out</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.machinelearning.transform_text" uuid="{1f8fc013-cab6-404f-b04b-a771e7918995}" x="1225.0" y="1625.0">
    <label>Transform text</label>
    <description>Applies a transformation model to the given text data</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group", "names method": {"description": "Method used to generate output names", "label": "Output names", "order": 0, "type": "string", "value": "From model", "editor": {"type": "combobox", "options": ["By index", "From model"]}}, "transpose": {"description": "Transposes output data, suitable for large number of features (eg. word counts)", "editor": null, "label": "Transpose output", "order": 1, "type": "boolean", "value": false}}]]></parameters>
    <ports>
      <input key="in-model" scheme="hdf5" type="model" type_base="model" uuid="{2e39c966-bab3-4862-9754-a91238538e43}">
        <label>Input model</label>
        <description>Input model</description>
      </input>
      <input key="X" scheme="hdf5" type="[text]" type_base="[text]" uuid="{7e32413b-d98f-4273-8c6c-c3fbd4c59da2}">
        <label>X</label>
        <description>X</description>
      </input>
      <output key="output" scheme="hdf5" type="table" type_base="table" uuid="{a4aa61e2-a79d-458d-afc6-d84d8706dbc0}">
        <label>Output table</label>
        <description>Output table</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.renamesingletablecolumns" uuid="{2778c378-0c38-40ea-bcf0-75613c20f713}" x="1725.0" y="1700.0">
    <label>rename</label>
    <description>Rename the Table columns by using regular expressions.</description>
    <author>Greger Cronquist &lt;greger.cronquist@combine.se&gt;</author>
    <copyright>(c) 2013 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "src_expr": {"description": "Specify the regular expression which will be replaced", "editor": null, "label": "Search expression", "order": 0, "type": "string", "value": "category"}, "dst_expr": {"description": "Specify the regular expression for replacement", "editor": null, "label": "Replacement expression", "order": 1, "type": "string", "value": "Ypred"}}]]></parameters>
    <ports>
      <input key="Input" scheme="hdf5" type="table" type_base="table" uuid="{fea89210-6fda-4d69-9d74-ecfe0108c05a}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="Output" scheme="hdf5" type="table" type_base="table" uuid="{c0aec16b-e436-4259-b1fb-e3d3b37b2e3f}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.vjointablenodes" uuid="{352096c6-56e7-49a9-aa8a-038a89ee2ac1}" x="1225.0" y="1700.0">
    <label>VJoin Tables</label>
    <description>Vertical join of Tables.</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2012 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "fill": {"description": "Select if columns that are not represented in all Tables should be complemented", "editor": null, "label": "Complement missing columns", "order": 0, "type": "boolean", "value": true}, "fill_strategy": {"description": "When \"Complement with nan or empty string\" is selected missing columns will be replaced by columns of nan or empty strings. When \"Mask missing values\" is selected missing columns will be result in masked values", "label": "Complement strategy", "mode": "selected", "order": 1, "passthrough": false, "type": "list", "list": ["Complement with nan or empty string", "Mask missing values"], "value": [1], "value_names": [], "editor": {"type": "combobox", "options": []}}, "output_index": {"description": "Specify name for output index column. If left empty, no index column will be created", "label": "Output index", "order": 2, "type": "string", "value": "", "editor": {"placeholder": "(none)", "type": "lineedit"}}, "minimum_increment": {"description": "Specify the increment in the outgoing index column for tables with no rows. Either 1 or 0.", "label": "Increment for empty tables", "order": 3, "type": "integer", "value": 1, "editor": {"max": 1, "min": 0, "step": 1, "type": "spinbox"}}}]]></parameters>
    <ports>
      <input key="port1" scheme="hdf5" type="[table]" type_base="[table]" uuid="{10f654a7-3cb2-4a06-9d4a-b0348146e3b4}">
        <label>Input Tables</label>
        <description>Input Tables</description>
      </input>
      <output key="port1" scheme="hdf5" type="table" type_base="table" uuid="{e25fd925-43b4-43a1-b81a-336af063c82c}">
        <label>Joined Tables</label>
        <description>Joined Tables</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.calculatortable" uuid="{3e19972c-d003-40e9-a571-dd7051c616f2}" x="1875.0" y="1700.0">
    <label>check err</label>
    <description>Performs user-defined python calculations</description>
    <author>Greger Cronquist &lt;greger.cronquist@combine.se&gt;, Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;, Sara Gustafzelius &lt;sara.gustafzelius@combine.se&gt;, Benedikt Ziegler &lt;benedikt.ziegler@combine.se&gt;</author>
    <copyright>(c) 2016 Combine Control Systems AB</copyright>
    <version>3.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "calc_list": {"description": "List of calculations.", "editor": null, "label": "List of calculations", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": ["${Error} = table.col('category').data != table.col('Ypred').data #ENABLED:1"], "value": [0], "value_names": []}, "same_length_res": {"description": "Gather all the results generated from an incoming data into a common output table. This requires that the results all have the same length. An error will be given if the lengths of the outgoing results differ.", "editor": null, "label": "Put results in common outputs.", "order": 1, "type": "boolean", "value": true}, "copy_input": {"description": "If enabled the incoming data will be copied to the output before running the calculations. This requires that the results will all have the same length. An exception will be raised if the lengths of the outgoing results differ.", "editor": null, "label": "Copy input", "order": 2, "type": "boolean", "value": true}, "fail_strategy": {"description": "Decide how a failed calculation should be handled", "label": "Action on calculation failure", "mode": "selected", "order": 3, "passthrough": false, "type": "list", "list": ["Exception", "Skip calculation"], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}}]]></parameters>
    <ports>
      <input key="port0" scheme="hdf5" type="table" type_base="table" uuid="{30b1853a-eb73-48a3-a278-c0623f92fb59}">
        <label>Input Table</label>
        <description>Input Table</description>
      </input>
      <output key="port1" scheme="hdf5" type="table" type_base="table" uuid="{e8e8fa68-3313-45a4-94e2-32c76a7a83db}">
        <label>Table with results from the calculation performed by the node.</label>
        <description>Table with results from the calculation performed by the node.</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.hjointable" uuid="{51f1ca76-c1a9-418d-8ee1-f57619ddf1fc}" x="1800.0" y="1700.0">
    <label>HJoin Table</label>
    <description>Horizontal join of two Tables</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.1</version>
    <parameters type="json"><![CDATA[{"type": "group", "mask": {"description": "Select if columns that are not represented in all Tables should be complemented with masked values", "editor": null, "label": "Complement missing rows", "order": 0, "type": "boolean", "value": true}, "name": {"description": "Select which port decides the output table(s) names", "label": "Input port name for joined table", "mode": "selected", "order": 1, "passthrough": false, "type": "list", "list": ["Lower", "Upper"], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}}]]></parameters>
    <ports>
      <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{91be3cc3-5ed9-4c6d-81d0-a0fccf52782a}">
        <label>Input Table 1</label>
        <description>Input Table 1</description>
      </input>
      <input key="port2" scheme="hdf5" type="table" type_base="table" uuid="{06fba6c5-8d86-4ed4-8246-705b15ffe477}">
        <label>Input Table 2</label>
        <description>Input Table 2</description>
      </input>
      <output key="port1" scheme="hdf5" type="table" type_base="table" uuid="{2d4b2d40-65ec-48fb-a10d-891c0b5fdf73}">
        <label>Table with horizontally joined data</label>
        <description>Table with horizontally joined data</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.slice.slicelist" uuid="{5576924f-321b-4a0c-bd7c-4f9623ec7417}" x="550.0" y="1650.0">
    <label>Select subset of
all categories
for speed</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "slice": {"description": "Use standard Python syntax to define pattern for slice operation, [start:stop:step]", "editor": null, "label": "Slice", "order": 0, "type": "string", "value": "[:3]"}, "limit": {"description": "Specify the maximum number of rows in the preview table", "editor": null, "label": "Limit preview to", "order": 1, "type": "integer", "value": 100}}]]></parameters>
    <ports>
      <input key="list" scheme="text" type="[datasource]" type_base="[&lt;a&gt;]" uuid="{77b1f978-bb42-4ab0-bed8-041b767e66ca}">
        <label>Input List</label>
        <description>Input List</description>
      </input>
      <output key="list" scheme="hdf5" type="[datasource]" type_base="[&lt;a&gt;]" uuid="{09ddc2b0-a9e4-4b72-8281-78c2c21ebe2e}">
        <label>Sliced output List</label>
        <description>Sliced output List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.machinelearning.simple_split" port_format="1.1" uuid="{59733e96-e2dc-4469-afc8-8fab1728945d}" x="1375.0" y="1625.0">
    <label>Simple train-test partitioning</label>
    <description>Splits input data into a training and a test dataset</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group", "test_size": {"description": "Size of test data as fraction (< 1) of all data", "editor": null, "label": "Test size", "order": 0, "type": "float", "value": 0.25}, "stratify": {"description": "Stratify data using Y as class labels", "editor": null, "label": "Stratify", "order": 1, "type": "boolean", "value": true}}]]></parameters>
    <ports>
      <input key="X" scheme="hdf5" type="table" type_base="table" uuid="{7e08e2d4-ba07-4a2a-ae06-d718a71c3ce7}">
        <label>X</label>
        <description>X</description>
      </input>
      <input key="Y" scheme="hdf5" type="table" type_base="table" uuid="{aee53721-c9c3-45b2-bebc-99be395c3106}">
        <label>Y</label>
        <description>Y</description>
      </input>
      <output key="X_train" scheme="hdf5" type="table" type_base="table" uuid="{3239204b-156c-471f-ab5b-604b814ad0be}">
        <label>X_train</label>
        <description>X_train</description>
      </output>
      <output key="Y_train" scheme="hdf5" type="table" type_base="table" uuid="{e479626e-7651-424c-beef-8706704199b5}">
        <label>Y_train</label>
        <description>Y_train</description>
      </output>
      <output key="X_test" scheme="hdf5" type="table" type_base="table" uuid="{7d4efa1a-0749-4e51-8937-058977581696}">
        <label>X_test</label>
        <description>X_test</description>
      </output>
      <output key="Y_test" scheme="hdf5" type="table" type_base="table" uuid="{48f42078-cb8c-42ef-bd32-2627996b56b9}">
        <label>Y_test</label>
        <description>Y_test</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.machinelearning.predict" uuid="{648248bf-c147-48fb-9587-c8ab23238151}" x="2025.0" y="1425.0">
    <label>Predict</label>
    <description>Uses a model to predict Y given X</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
    <ports>
      <input key="in-model" scheme="hdf5" type="model" type_base="model" uuid="{f24b6da6-aa67-484e-9626-406e4a91937a}">
        <label>Input model</label>
        <description>Input model</description>
      </input>
      <input key="X" scheme="hdf5" type="table" type_base="table" uuid="{b8a0e06f-a791-42c1-a04b-8a9ac8d21a43}">
        <label>X</label>
        <description>X</description>
      </input>
      <output key="Y" scheme="hdf5" type="table" type_base="table" uuid="{5bb86911-8604-42bf-8544-4f24b6fde79a}">
        <label>Y</label>
        <description>Y</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.machinelearning.fit_text" port_format="1.1" uuid="{7bd9a81a-eb87-4b5e-8874-416c95d0a7bb}" x="1150.0" y="1500.0">
    <label>Fit Texts</label>
    <description>Fits a model using lists of texts. Use "Create Input Port &gt; Y" for supervised training</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
    <ports>
      <input key="in-model" scheme="hdf5" type="model" type_base="model" uuid="{ead78197-cabd-410f-bd93-3455652ec6c8}">
        <label>Input model</label>
        <description>Input model</description>
      </input>
      <input key="X" scheme="hdf5" type="[text]" type_base="[text]" uuid="{eb31de63-1d2a-4ad0-b511-61d24eb977a4}">
        <label>X</label>
        <description>X</description>
      </input>
      <output key="out-model" scheme="hdf5" type="model" type_base="model" uuid="{f07647cb-6d14-4047-9774-e2d9d7c3a4f2}">
        <label>Output model</label>
        <description>Output model</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.machinelearning.crossval_score" uuid="{8bd0f296-af2d-4493-a894-793dece539d3}" x="1675.0" y="1925.0">
    <label>Score cross validation</label>
    <description>Calculates the score for a model given a cross validation scheme</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
    <ports>
      <input key="in-model" scheme="hdf5" type="model" type_base="model" uuid="{14b9be90-8c3d-451f-8ee0-d609e47aff45}">
        <label>in-model</label>
        <description>in-model</description>
      </input>
      <input key="splits" scheme="hdf5" type="[(table, table)]" type_base="[(table, table)]" uuid="{febc9d41-c639-4aad-b5e8-b5bb031f05c1}">
        <label>splits</label>
        <description>splits</description>
      </input>
      <input key="X" scheme="hdf5" type="table" type_base="table" uuid="{0b408d04-6bda-428d-a329-7f911d356e35}">
        <label>X</label>
        <description>X</description>
      </input>
      <input key="Y" scheme="hdf5" type="table" type_base="table" uuid="{82e9034a-0743-4ca9-8107-8704693e24fa}">
        <label>Y</label>
        <description>Y</description>
      </input>
      <output key="scores" scheme="hdf5" type="table" type_base="table" uuid="{dee69d4b-9bb5-40b7-885e-ff6f8b3c241a}">
        <label>scores</label>
        <description>scores</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.machinelearning.count_vectorizer" uuid="{91e6ed6a-2814-4d9a-a01f-58bfb7996514}" x="1025.0" y="1450.0">
    <label>Count vectorizer (text)</label>
    <description>Convert a collection of text documents to a matrix of token counts</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group", "decode_error": {"description": "Instruction on what to do if a byte sequence is given to analyze that\ncontains characters not of the given `encoding`. By default, it is\n'strict', meaning that a UnicodeDecodeError will be raised. Other\nvalues are 'ignore' and 'replace'.\n", "editor": null, "label": "decode_error", "order": 0, "type": "string", "value": "strict"}, "lowercase": {"description": "Convert all characters to lowercase before tokenizing.\n", "editor": null, "label": "lowercase", "order": 1, "type": "string", "value": "True"}, "stop_words": {"description": "If 'english', a built-in stop word list for English is used.\n\nIf a list, that list is assumed to contain stop words, all of which\nwill be removed from the resulting tokens.\nOnly applies if ``analyzer == 'word'``.\n\nIf None, no stop words will be used. max_df can be set to a value\nin the range [0.7, 1.0) to automatically detect and filter stop\nwords based on intra corpus document frequency of terms.\n", "editor": null, "label": "stop_words", "order": 2, "type": "string", "value": "english"}, "encoding": {"description": "If bytes or files are given to analyze, this encoding is used to\ndecode.\n", "editor": null, "label": "encoding", "order": 3, "type": "string", "value": "utf-8"}, "analyzer": {"description": "Whether the feature should be made of word or character n-grams.\nOption 'char_wb' creates character n-grams only from text inside\nword boundaries.\n\nIf a callable is passed it is used to extract the sequence of features\nout of the raw, unprocessed input.\n", "editor": null, "label": "analyzer", "order": 4, "type": "string", "value": "word"}, "binary": {"description": "If True, all non zero counts are set to 1. This is useful for discrete\nprobabilistic models that model binary events rather than integer\ncounts.\n", "editor": null, "label": "binary", "order": 5, "type": "string", "value": "False"}, "ngram_range": {"description": "The lower and upper boundary of the range of n-values for different\nn-grams to be extracted. All values of n such that min_n <= n <= max_n\nwill be used.\n", "editor": null, "label": "ngram_range", "order": 6, "type": "string", "value": "1, 1"}, "max_df": {"description": "When building the vocabulary ignore terms that have a document\nfrequency strictly higher than the given threshold (corpus-specific\nstop words).\nIf float, the parameter represents a proportion of documents, integer\nabsolute counts.\nThis parameter is ignored if vocabulary is not None.\n", "editor": null, "label": "max_df", "order": 7, "type": "string", "value": "0.5"}, "min_df": {"description": "When building the vocabulary ignore terms that have a document\nfrequency strictly lower than the given threshold. This value is also\ncalled cut-off in the literature.\nIf float, the parameter represents a proportion of documents, integer\nabsolute counts.\nThis parameter is ignored if vocabulary is not None.\n", "editor": null, "label": "min_df", "order": 8, "type": "string", "value": "5"}, "max_features": {"description": "If not None, build a vocabulary that only consider the top\nmax_features ordered by term frequency across the corpus.\n\nThis parameter is ignored if vocabulary is not None.\n", "editor": null, "label": "max_features", "order": 9, "type": "string", "value": "1000"}, "strip_accents": {"description": "Remove accents during the preprocessing step.\n'ascii' is a fast method that only works on characters that have\nan direct ASCII mapping.\n'unicode' is a slightly slower method that works on any characters.\nNone (default) does nothing.\n", "editor": null, "label": "strip_accents", "order": 10, "type": "string", "value": "None"}}]]></parameters>
    <ports>
      <output key="model" scheme="hdf5" type="model" type_base="model" uuid="{2b2b6262-0159-4f5b-b591-672ad3f7060a}">
        <label>Model</label>
        <description>Model</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.machinelearning.score" uuid="{a523c74d-47a4-4d92-8b5c-c12202cd0325}" x="1775.0" y="1575.0">
    <label>Score</label>
    <description>Predicts Y' from X and compares with input Y. Returns mean accuracy (sum(Y' == Y) / rows)</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
    <ports>
      <input key="in-model" scheme="hdf5" type="model" type_base="model" uuid="{da1361d5-c900-4459-b710-58fc3c8fff46}">
        <label>Input model</label>
        <description>Input model</description>
      </input>
      <input key="X" scheme="hdf5" type="table" type_base="table" uuid="{a25dc5dd-2912-491d-b017-18dac577338b}">
        <label>X</label>
        <description>X</description>
      </input>
      <input key="Y" scheme="hdf5" type="table" type_base="table" uuid="{0df97002-be52-41bf-ba49-4dcdc585ed9a}">
        <label>Y</label>
        <description>Y</description>
      </input>
      <output key="Score" scheme="hdf5" type="table" type_base="table" uuid="{04e4d811-ced0-4d5e-9d5b-feccd389cf3f}">
        <label>Score</label>
        <description>Score</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.machinelearning.fit" port_format="1.1" uuid="{cc8ad429-257e-4772-8b35-506beb2aea52}" x="1500.0" y="1575.0">
    <label>Fit</label>
    <description>Trains a model. Use "Create Input Port &gt; Y" for supervised training</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
    <ports>
      <input key="in-model" scheme="hdf5" type="model" type_base="model" uuid="{6e6c7533-23ee-4990-a665-003daed17f29}">
        <label>Input model</label>
        <description>Input model</description>
      </input>
      <input key="X" scheme="hdf5" type="table" type_base="table" uuid="{20ecb3ed-db4a-490f-b665-9c4bd8093244}">
        <label>X</label>
        <description>X</description>
      </input>
      <input key="Y0" scheme="hdf5" type="table" type_base="table" uuid="{3722d0e0-f30d-4dc8-8c88-d195a5f52bd4}">
        <label>Y</label>
        <description>Y</description>
      </input>
      <output key="out-model" scheme="hdf5" type="model" type_base="model" uuid="{75f5277e-fc33-4866-86a1-09a95048ffa6}">
        <label>Output model</label>
        <description>Output model</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.machinelearning.predict" uuid="{cd043e9c-f69b-4857-b344-6836c0aaef11}" x="1650.0" y="1700.0">
    <label>Predict</label>
    <description>Uses a model to predict Y given X</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
    <ports>
      <input key="in-model" scheme="hdf5" type="model" type_base="model" uuid="{f892b2e5-2bdd-4bec-80bb-8c0ba76f9540}">
        <label>Input model</label>
        <description>Input model</description>
      </input>
      <input key="X" scheme="hdf5" type="table" type_base="table" uuid="{d40af608-2c02-4404-b73f-5b84648cfe3e}">
        <label>X</label>
        <description>X</description>
      </input>
      <output key="Y" scheme="hdf5" type="table" type_base="table" uuid="{d461af0b-1670-4ee6-8655-1fc5716dd749}">
        <label>Y</label>
        <description>Y</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.tuple.tuple2" port_format="1.1" uuid="{cd8d2b4b-0b66-4921-a250-7cb34b294faf}" x="2125.0" y="1675.0">
    <label>Show texts
and their classifications</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
    <ports>
      <input key="input" scheme="hdf5" type="[text]" type_base="&lt;a&gt;" uuid="{906fb798-2acb-4d02-894f-0b7b377f7428}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <input key="input" scheme="hdf5" type="table" type_base="&lt;b&gt;" uuid="{500131db-2ae4-4c18-9de5-bfc329df7fef}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="output" scheme="hdf5" type="([text], table)" type_base="(&lt;a&gt;, &lt;b&gt;)" uuid="{c3435b55-643d-4da2-a109-f5c3b67ffbd1}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.datasources.filedatasourcemultiple" uuid="{d363367d-49fd-4213-8d63-db9e493b038b}" x="450.0" y="1650.0">
    <label>Dataset</label>
    <description>Select data sources.</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.1</version>
    <parameters type="json"><![CDATA[{"type": "group", "recursive": {"description": "Turn on/off recursive folder search for filenames satisfying the specified pattern beneath selected directory in the directory tree", "editor": null, "label": "Recursive", "order": 0, "type": "boolean", "value": false}, "directory": {"description": "Specify dictionary in dictionary tree where to search for files with the specified pattern or select by using the button with the three buttons", "label": "Directory", "order": 1, "type": "string", "value": "datasets/20news/20news-bydate-test", "editor": {"type": "dirname"}}, "search_pattern": {"description": "A wildcard/regexp pattern to match files.", "editor": null, "label": "Search pattern", "order": 2, "type": "string", "value": "*"}}]]></parameters>
    <ports>
      <output key="port1" scheme="text" type="[datasource]" type_base="[datasource]" uuid="{27214ceb-560c-4076-9837-dd5a61cfd11a}">
        <label>Datasources with paths files</label>
        <description>Datasources with paths files</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.tuple.unziptuple2" port_format="1.1" uuid="{d45c91b6-6643-4186-8659-c5b1a629d57c}" x="1025.0" y="1550.0">
    <label>Unzip Tuple</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
    <ports>
      <input key="input" scheme="hdf5" type="[(table, text)]" type_base="[(&lt;a&gt;, &lt;b&gt;)]" uuid="{a4627867-c7dc-43c5-8f29-24e561e272a7}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="output" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{3b8670e3-2bf8-4d35-acda-49276adc52ea}">
        <label>Output</label>
        <description>Output</description>
      </output>
      <output key="output" scheme="hdf5" type="[text]" type_base="[&lt;b&gt;]" uuid="{91ffddf8-a5c0-4d25-9243-b49c92bdf5cc}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.builtin.map" uuid="{d7c76160-1bad-4deb-a813-fd722da9447c}" x="725.0" y="1650.0">
    <label>Map</label>
    <description>Map Lambda function over each element in argument list</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015-2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "fail_strategy": {"description": "Decide how failure to process an item should be handled.", "label": "Action on exception", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": ["Error", "Create Empty Item", "Skip Item"], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}}]]></parameters>
    <ports>
      <input key="Function" scheme="hdf5" type="datasource -&gt; [(table, text)]" type_base="&lt;a&gt; -&gt; &lt;b&gt;" uuid="{a1917972-9c6e-4fa1-b808-c5d4960afc76}">
        <label>Lambda Function to Map</label>
        <description>Lambda Function to Map</description>
      </input>
      <input key="List" scheme="hdf5" type="[datasource]" type_base="[&lt;a&gt;]" uuid="{ce4996c6-8c42-4fc0-b3f1-2ab007be9e36}">
        <label>Argument List</label>
        <description>Argument List</description>
      </input>
      <output key="List" scheme="hdf5" type="[[(table, text)]]" type_base="[&lt;b&gt;]" uuid="{cb89be84-4ae9-4b97-8a24-adf594a0863a}">
        <label>Output List</label>
        <description>Output List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.machinelearning.random_forest_classifier" uuid="{f3c67d2d-0fdb-457d-8d1d-21a13d502a41}" x="1250.0" y="1375.0">
    <label>Random Forest Classifier</label>
    <description>A random forest is a meta estimator that fits a number of decision tree classifiers on various sub-samples of the dataset and use averaging to improve the predictive accuracy and control over-fitting. The sub-sample size is always the same as the original input sample size but the samples are drawn with replacement if bootstrap is True (default).</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group", "warm_start": {"description": "When set to ``True``, reuse the solution of the previous call to fit\nand add more estimators to the ensemble, otherwise, just fit a whole\nnew forest.\n", "editor": null, "label": "warm_start", "order": 0, "type": "string", "value": "False"}, "oob_score": {"description": "Whether to use out-of-bag samples to estimate\nthe generalization accuracy.\n", "editor": null, "label": "oob_score", "order": 1, "type": "string", "value": "True"}, "n_jobs": {"description": "The number of jobs to run in parallel for both `fit` and `predict`.\nIf -1, then the number of jobs is set to the number of cores.\n", "editor": null, "label": "n_jobs", "order": 2, "type": "string", "value": "-1"}, "max_leaf_nodes": {"description": "Grow trees with ``max_leaf_nodes`` in best-first fashion.\nBest nodes are defined as relative reduction in impurity.\nIf None then unlimited number of leaf nodes.\n", "editor": null, "label": "max_leaf_nodes", "order": 3, "type": "string", "value": "None"}, "bootstrap": {"description": "Whether bootstrap samples are used when building trees.\n", "editor": null, "label": "bootstrap", "order": 4, "type": "string", "value": "True"}, "min_samples_leaf": {"description": "The minimum number of samples required to be at a leaf node:\n\n- If int, then consider `min_samples_leaf` as the minimum number.\n- If float, then `min_samples_leaf` is a percentage and\n  `ceil(min_samples_leaf * n_samples)` are the minimum\n  number of samples for each node.\n\n.. versionchanged:: 0.18\n   Added float values for percentages.\n", "editor": null, "label": "min_samples_leaf", "order": 5, "type": "string", "value": "1"}, "n_estimators": {"description": "The number of trees in the forest.\n", "editor": null, "label": "n_estimators", "order": 6, "type": "string", "value": "99"}, "min_samples_split": {"description": "The minimum number of samples required to split an internal node:\n\n- If int, then consider `min_samples_split` as the minimum number.\n- If float, then `min_samples_split` is a percentage and\n  `ceil(min_samples_split * n_samples)` are the minimum\n  number of samples for each split.\n\n.. versionchanged:: 0.18\n   Added float values for percentages.\n", "editor": null, "label": "min_samples_split", "order": 7, "type": "string", "value": "2"}, "min_weight_fraction_leaf": {"description": "The minimum weighted fraction of the sum total of weights (of all\nthe input samples) required to be at a leaf node. Samples have\nequal weight when sample_weight is not provided.\n", "editor": null, "label": "min_weight_fraction_leaf", "order": 8, "type": "string", "value": "0.0"}, "criterion": {"description": "The function to measure the quality of a split. Supported criteria are\n\"gini\" for the Gini impurity and \"entropy\" for the information gain.\nNote: this parameter is tree-specific.\n", "editor": null, "label": "criterion", "order": 9, "type": "string", "value": "gini"}, "random_state": {"description": "If int, random_state is the seed used by the random number generator;\nIf RandomState instance, random_state is the random number generator;\nIf None, the random number generator is the RandomState instance used\nby `np.random`.\n", "editor": null, "label": "random_state", "order": 10, "type": "string", "value": "None"}, "min_impurity_split": {"description": "Threshold for early stopping in tree growth. A node will split\nif its impurity is above the threshold, otherwise it is a leaf.\n\n.. versionadded:: 0.18\n", "editor": null, "label": "min_impurity_split", "order": 11, "type": "string", "value": "1e-07"}, "max_features": {"description": "The number of features to consider when looking for the best split:\n\n- If int, then consider `max_features` features at each split.\n- If float, then `max_features` is a percentage and\n  `int(max_features * n_features)` features are considered at each\n  split.\n- If \"auto\", then `max_features=sqrt(n_features)`.\n- If \"sqrt\", then `max_features=sqrt(n_features)` (same as \"auto\").\n- If \"log2\", then `max_features=log2(n_features)`.\n- If None, then `max_features=n_features`.\n\nNote: the search for a split does not stop until at least one\nvalid partition of the node samples is found, even if it requires to\neffectively inspect more than ``max_features`` features.\n", "editor": null, "label": "max_features", "order": 12, "type": "string", "value": "None"}, "max_depth": {"description": "The maximum depth of the tree. If None, then nodes are expanded until\nall leaves are pure or until all leaves contain less than\nmin_samples_split samples.\n", "editor": null, "label": "max_depth", "order": 13, "type": "string", "value": "None"}}]]></parameters>
    <ports>
      <output key="model" scheme="hdf5" type="model" type_base="model" uuid="{220e865b-b83c-42eb-ad3c-c9489deb5ece}">
        <label>Model</label>
        <description>Model</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.machinelearning.extract_attributes" uuid="{f8194851-06f8-455a-8ea5-94ecc53df520}" x="1275.0" y="1500.0">
    <label>Extract attributes</label>
    <description>Extract attributes from a fitted model, requires model dependent name for the attribute</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group", "attribute": {"description": "Name of attribute to extract", "editor": null, "label": "attribute", "order": 0, "type": "string", "value": "vocabulary_"}}]]></parameters>
    <ports>
      <input key="in-model" scheme="hdf5" type="model" type_base="model" uuid="{6e7180fa-69f5-411f-979e-b677b45d19d2}">
        <label>Input model</label>
        <description>Input model</description>
      </input>
      <output key="out" scheme="hdf5" type="[table]" type_base="[table]" uuid="{5ee32095-52ea-427d-bb82-59a34b0c199f}">
        <label>Attributes</label>
        <description>Attributes</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.machinelearning.confusion" uuid="{f9a6355a-62cf-4b6e-a328-1a1dd3156e12}" x="2125.0" y="1425.0">
    <label>Confusion matrix</label>
    <description>Computes the confusion matrix given predictions and true Y-values.</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group", "include heading": {"description": "Adds a columns with used class names", "editor": null, "label": "include heading", "order": 0, "type": "string", "value": "True"}, "labels": {"description": "List of labels to index the matrix. This may be used to reorder\nor select a subset of labels.\nIf none is given, those that appear at least once\nin ``y_true`` or ``y_pred`` are used in sorted order.\n", "editor": null, "label": "labels", "order": 1, "type": "string", "value": ""}}]]></parameters>
    <ports>
      <input key="Y-pred" scheme="hdf5" type="table" type_base="table" uuid="{3d21cceb-71dd-44a9-b804-dfc859b8a4fa}">
        <label>Y-pred</label>
        <description>Y-pred</description>
      </input>
      <input key="Y-true" scheme="hdf5" type="table" type_base="table" uuid="{e6236f4d-bb45-4fae-b79d-7c59d36a48c8}">
        <label>Y-true</label>
        <description>Y-true</description>
      </input>
      <output key="confusion-matrix" scheme="hdf5" type="table" type_base="table" uuid="{02dc03d8-ae5e-4c4b-8f6c-0238f7070772}">
        <label>confusion-matrix</label>
        <description>confusion-matrix</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.flattenlist" uuid="{ff642f85-c266-4c0d-9a2a-e6a13c4c3362}" x="850.0" y="1625.0">
    <label>Flatten List</label>
    <description>Flatten a nested list</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
    <ports>
      <input key="in" scheme="hdf5" type="[[(table, text)]]" type_base="[[&lt;a&gt;]]" uuid="{3540bce5-97b2-4f26-a559-f78f7d558eb9}">
        <label>Nested List</label>
        <description>Nested List</description>
      </input>
      <output key="out" scheme="hdf5" type="[(table, text)]" type_base="[&lt;a&gt;]" uuid="{baef6328-f6fa-4f05-ac28-f792e6d54dea}">
        <label>Flattened List</label>
        <description>Flattened List</description>
      </output>
    </ports>
  </node>
  <connection type="model" uuid="{0a7f1b2e-5185-4237-9cdb-620b57f06888}">
    <source node="{f3c67d2d-0fdb-457d-8d1d-21a13d502a41}" port="{220e865b-b83c-42eb-ad3c-c9489deb5ece}"/>
    <destination node="{cc8ad429-257e-4772-8b35-506beb2aea52}" port="{6e6c7533-23ee-4990-a665-003daed17f29}"/>
  </connection>
  <connection type="table" uuid="{1402dd8f-b56c-426c-800a-db938cdb48bb}">
    <source node="{1f8fc013-cab6-404f-b04b-a771e7918995}" port="{a4aa61e2-a79d-458d-afc6-d84d8706dbc0}"/>
    <destination node="{cd043e9c-f69b-4857-b344-6836c0aaef11}" port="{d40af608-2c02-4404-b73f-5b84648cfe3e}"/>
  </connection>
  <connection type="[(table, table)]" uuid="{22012c8c-7507-4590-af2d-c0723f9807b0}">
    <source node="{1e878d32-4ea2-4199-a800-9d80053034d7}" port="{725045d5-7504-4dc4-b784-545c4734b5f8}"/>
    <destination node="{8bd0f296-af2d-4493-a894-793dece539d3}" port="{febc9d41-c639-4aad-b5e8-b5bb031f05c1}"/>
  </connection>
  <connection type="table" uuid="{23aaa032-32c5-473e-bf5d-8438d59a27b0}">
    <source node="{1f8fc013-cab6-404f-b04b-a771e7918995}" port="{a4aa61e2-a79d-458d-afc6-d84d8706dbc0}"/>
    <destination node="{8bd0f296-af2d-4493-a894-793dece539d3}" port="{0b408d04-6bda-428d-a329-7f911d356e35}"/>
  </connection>
  <connection type="table" uuid="{2a367065-28a2-4eb9-8a53-0627a89e8121}">
    <source node="{352096c6-56e7-49a9-aa8a-038a89ee2ac1}" port="{e25fd925-43b4-43a1-b81a-336af063c82c}"/>
    <destination node="{51f1ca76-c1a9-418d-8ee1-f57619ddf1fc}" port="{06fba6c5-8d86-4ed4-8246-705b15ffe477}"/>
  </connection>
  <connection type="table" uuid="{31801314-9283-45a3-b3a5-4ca265b27f80}">
    <source node="{352096c6-56e7-49a9-aa8a-038a89ee2ac1}" port="{e25fd925-43b4-43a1-b81a-336af063c82c}"/>
    <destination node="{8bd0f296-af2d-4493-a894-793dece539d3}" port="{82e9034a-0743-4ca9-8107-8704693e24fa}"/>
  </connection>
  <connection type="model" uuid="{33f3754e-6401-4c0a-9107-e43051d4d915}">
    <source node="{cc8ad429-257e-4772-8b35-506beb2aea52}" port="{75f5277e-fc33-4866-86a1-09a95048ffa6}"/>
    <destination node="{a523c74d-47a4-4d92-8b5c-c12202cd0325}" port="{da1361d5-c900-4459-b710-58fc3c8fff46}"/>
  </connection>
  <connection type="model" uuid="{34db0f37-b706-47db-b500-8a383ef4942b}">
    <source node="{91e6ed6a-2814-4d9a-a01f-58bfb7996514}" port="{2b2b6262-0159-4f5b-b591-672ad3f7060a}"/>
    <destination node="{7bd9a81a-eb87-4b5e-8874-416c95d0a7bb}" port="{ead78197-cabd-410f-bd93-3455652ec6c8}"/>
  </connection>
  <connection type="table" uuid="{46777501-584a-4dc9-be07-0894d16c005a}">
    <source node="{cd043e9c-f69b-4857-b344-6836c0aaef11}" port="{d461af0b-1670-4ee6-8655-1fc5716dd749}"/>
    <destination node="{2778c378-0c38-40ea-bcf0-75613c20f713}" port="{fea89210-6fda-4d69-9d74-ecfe0108c05a}"/>
  </connection>
  <connection type="table" uuid="{4dad1f93-5584-4eaf-a90c-73b31417137c}">
    <source node="{3e19972c-d003-40e9-a571-dd7051c616f2}" port="{e8e8fa68-3313-45a4-94e2-32c76a7a83db}"/>
    <destination node="{cd8d2b4b-0b66-4921-a250-7cb34b294faf}" port="{500131db-2ae4-4c18-9de5-bfc329df7fef}"/>
  </connection>
  <connection type="[datasource]" uuid="{4db74e58-ee9b-44ad-918b-9f75fbdf07cd}">
    <source node="{d363367d-49fd-4213-8d63-db9e493b038b}" port="{27214ceb-560c-4076-9837-dd5a61cfd11a}"/>
    <destination node="{5576924f-321b-4a0c-bd7c-4f9623ec7417}" port="{77b1f978-bb42-4ab0-bed8-041b767e66ca}"/>
  </connection>
  <connection type="table" uuid="{50a17be2-e4e7-4afb-8a26-6f5bcba05af3}">
    <source node="{59733e96-e2dc-4469-afc8-8fab1728945d}" port="{7d4efa1a-0749-4e51-8937-058977581696}"/>
    <destination node="{648248bf-c147-48fb-9587-c8ab23238151}" port="{b8a0e06f-a791-42c1-a04b-8a9ac8d21a43}"/>
  </connection>
  <connection type="model" uuid="{57a14179-b2d7-446c-85dc-e287315b7ace}">
    <source node="{cc8ad429-257e-4772-8b35-506beb2aea52}" port="{75f5277e-fc33-4866-86a1-09a95048ffa6}"/>
    <destination node="{648248bf-c147-48fb-9587-c8ab23238151}" port="{f24b6da6-aa67-484e-9626-406e4a91937a}"/>
  </connection>
  <connection type="model" uuid="{5c2ab893-6c27-49be-abf1-262a53fbf108}">
    <source node="{f3c67d2d-0fdb-457d-8d1d-21a13d502a41}" port="{220e865b-b83c-42eb-ad3c-c9489deb5ece}"/>
    <destination node="{8bd0f296-af2d-4493-a894-793dece539d3}" port="{14b9be90-8c3d-451f-8ee0-d609e47aff45}"/>
  </connection>
  <connection type="table" uuid="{6757bdbe-6fae-400d-9451-fb313c2f79ed}">
    <source node="{59733e96-e2dc-4469-afc8-8fab1728945d}" port="{7d4efa1a-0749-4e51-8937-058977581696}"/>
    <destination node="{a523c74d-47a4-4d92-8b5c-c12202cd0325}" port="{a25dc5dd-2912-491d-b017-18dac577338b}"/>
  </connection>
  <connection type="model" uuid="{6ce16c58-24dd-42b9-a930-bb6098b984f3}">
    <source node="{cc8ad429-257e-4772-8b35-506beb2aea52}" port="{75f5277e-fc33-4866-86a1-09a95048ffa6}"/>
    <destination node="{cd043e9c-f69b-4857-b344-6836c0aaef11}" port="{f892b2e5-2bdd-4bec-80bb-8c0ba76f9540}"/>
  </connection>
  <connection type="table" uuid="{7ffe9444-f7ed-4dd8-aeb4-023cc031de5c}">
    <source node="{648248bf-c147-48fb-9587-c8ab23238151}" port="{5bb86911-8604-42bf-8544-4f24b6fde79a}"/>
    <destination node="{f9a6355a-62cf-4b6e-a328-1a1dd3156e12}" port="{3d21cceb-71dd-44a9-b804-dfc859b8a4fa}"/>
  </connection>
  <connection type="[(table, text)]" uuid="{879b5b2f-ee3c-4e27-a479-36d2c3b7a8b8}">
    <source node="{ff642f85-c266-4c0d-9a2a-e6a13c4c3362}" port="{baef6328-f6fa-4f05-ac28-f792e6d54dea}"/>
    <destination node="{d45c91b6-6643-4186-8659-c5b1a629d57c}" port="{a4627867-c7dc-43c5-8f29-24e561e272a7}"/>
  </connection>
  <connection type="table" uuid="{8a906efc-c832-4f63-88a5-662965049d03}">
    <source node="{1f8fc013-cab6-404f-b04b-a771e7918995}" port="{a4aa61e2-a79d-458d-afc6-d84d8706dbc0}"/>
    <destination node="{59733e96-e2dc-4469-afc8-8fab1728945d}" port="{7e08e2d4-ba07-4a2a-ae06-d718a71c3ce7}"/>
  </connection>
  <connection type="[text]" uuid="{8ac65b9f-7e85-4f64-8127-dec4df19bdaf}">
    <source node="{d45c91b6-6643-4186-8659-c5b1a629d57c}" port="{91ffddf8-a5c0-4d25-9243-b49c92bdf5cc}"/>
    <destination node="{cd8d2b4b-0b66-4921-a250-7cb34b294faf}" port="{906fb798-2acb-4d02-894f-0b7b377f7428}"/>
  </connection>
  <connection type="[text]" uuid="{9031cd20-da49-4a83-b565-481abd0a83d7}">
    <source node="{d45c91b6-6643-4186-8659-c5b1a629d57c}" port="{91ffddf8-a5c0-4d25-9243-b49c92bdf5cc}"/>
    <destination node="{7bd9a81a-eb87-4b5e-8874-416c95d0a7bb}" port="{eb31de63-1d2a-4ad0-b511-61d24eb977a4}"/>
  </connection>
  <connection type="table" uuid="{90a650c2-aeec-4ad4-99c6-781d8cb6e836}">
    <source node="{352096c6-56e7-49a9-aa8a-038a89ee2ac1}" port="{e25fd925-43b4-43a1-b81a-336af063c82c}"/>
    <destination node="{1e878d32-4ea2-4199-a800-9d80053034d7}" port="{3621a09b-4c61-4857-94ec-1babc84cfd8b}"/>
  </connection>
  <connection type="table" uuid="{9af4cba1-aafc-40e4-9718-ca1cfafd6eff}">
    <source node="{2778c378-0c38-40ea-bcf0-75613c20f713}" port="{c0aec16b-e436-4259-b1fb-e3d3b37b2e3f}"/>
    <destination node="{51f1ca76-c1a9-418d-8ee1-f57619ddf1fc}" port="{91be3cc3-5ed9-4c6d-81d0-a0fccf52782a}"/>
  </connection>
  <connection type="[text]" uuid="{a1039dc4-3dd2-473b-961e-53b9a1e5f1d3}">
    <source node="{d45c91b6-6643-4186-8659-c5b1a629d57c}" port="{91ffddf8-a5c0-4d25-9243-b49c92bdf5cc}"/>
    <destination node="{1f8fc013-cab6-404f-b04b-a771e7918995}" port="{7e32413b-d98f-4273-8c6c-c3fbd4c59da2}"/>
  </connection>
  <connection type="table" uuid="{a5367623-b46f-4f01-a4a2-1d31e141096a}">
    <source node="{59733e96-e2dc-4469-afc8-8fab1728945d}" port="{e479626e-7651-424c-beef-8706704199b5}"/>
    <destination node="{cc8ad429-257e-4772-8b35-506beb2aea52}" port="{3722d0e0-f30d-4dc8-8c88-d195a5f52bd4}"/>
  </connection>
  <connection type="table" uuid="{a5623d5f-7086-4f27-bdd1-684880345f3c}">
    <source node="{352096c6-56e7-49a9-aa8a-038a89ee2ac1}" port="{e25fd925-43b4-43a1-b81a-336af063c82c}"/>
    <destination node="{59733e96-e2dc-4469-afc8-8fab1728945d}" port="{aee53721-c9c3-45b2-bebc-99be395c3106}"/>
  </connection>
  <connection type="[datasource]" uuid="{adc51b3a-7814-454f-8303-da32054fc5c0}">
    <source node="{5576924f-321b-4a0c-bd7c-4f9623ec7417}" port="{09ddc2b0-a9e4-4b72-8281-78c2c21ebe2e}"/>
    <destination node="{d7c76160-1bad-4deb-a813-fd722da9447c}" port="{ce4996c6-8c42-4fc0-b3f1-2ab007be9e36}"/>
  </connection>
  <connection type="datasource -&gt; [(table, text)]" uuid="{b1f2eb5f-505c-4fb7-b546-5fb58825cd06}">
    <source node="{ac2497e9-5191-4c5d-b62b-0d947618bb70}" port="{0e1a8b9b-a4e3-4d31-929e-84552e88975d}"/>
    <destination node="{d7c76160-1bad-4deb-a813-fd722da9447c}" port="{a1917972-9c6e-4fa1-b808-c5d4960afc76}"/>
  </connection>
  <connection type="table" uuid="{b4945a40-4218-495e-b3a5-fe8ef9a28989}">
    <source node="{51f1ca76-c1a9-418d-8ee1-f57619ddf1fc}" port="{2d4b2d40-65ec-48fb-a10d-891c0b5fdf73}"/>
    <destination node="{3e19972c-d003-40e9-a571-dd7051c616f2}" port="{30b1853a-eb73-48a3-a278-c0623f92fb59}"/>
  </connection>
  <connection type="[[(table, text)]]" uuid="{b97fe229-7b3b-4643-8526-9d4e378f0072}">
    <source node="{d7c76160-1bad-4deb-a813-fd722da9447c}" port="{cb89be84-4ae9-4b97-8a24-adf594a0863a}"/>
    <destination node="{ff642f85-c266-4c0d-9a2a-e6a13c4c3362}" port="{3540bce5-97b2-4f26-a559-f78f7d558eb9}"/>
  </connection>
  <connection type="table" uuid="{b9cd0915-24c2-477d-97b7-82d40c78e15c}">
    <source node="{59733e96-e2dc-4469-afc8-8fab1728945d}" port="{3239204b-156c-471f-ab5b-604b814ad0be}"/>
    <destination node="{cc8ad429-257e-4772-8b35-506beb2aea52}" port="{20ecb3ed-db4a-490f-b665-9c4bd8093244}"/>
  </connection>
  <connection type="[table]" uuid="{d40f2c9a-77e3-42aa-868c-33efede6104f}">
    <source node="{d45c91b6-6643-4186-8659-c5b1a629d57c}" port="{3b8670e3-2bf8-4d35-acda-49276adc52ea}"/>
    <destination node="{352096c6-56e7-49a9-aa8a-038a89ee2ac1}" port="{10f654a7-3cb2-4a06-9d4a-b0348146e3b4}"/>
  </connection>
  <connection type="table" uuid="{d73859fe-76e8-44b6-ac1c-71d2bbd4634d}">
    <source node="{1f8fc013-cab6-404f-b04b-a771e7918995}" port="{a4aa61e2-a79d-458d-afc6-d84d8706dbc0}"/>
    <destination node="{1e878d32-4ea2-4199-a800-9d80053034d7}" port="{d4b5f3a1-ac48-4507-9fa4-e812122dd4cb}"/>
  </connection>
  <connection type="table" uuid="{dbf6da99-a85b-4d25-b9f6-24fd8079de7b}">
    <source node="{59733e96-e2dc-4469-afc8-8fab1728945d}" port="{48f42078-cb8c-42ef-bd32-2627996b56b9}"/>
    <destination node="{f9a6355a-62cf-4b6e-a328-1a1dd3156e12}" port="{e6236f4d-bb45-4fae-b79d-7c59d36a48c8}"/>
  </connection>
  <connection type="model" uuid="{de2da76d-fbe4-4bc7-9169-081287472075}">
    <source node="{7bd9a81a-eb87-4b5e-8874-416c95d0a7bb}" port="{f07647cb-6d14-4047-9774-e2d9d7c3a4f2}"/>
    <destination node="{f8194851-06f8-455a-8ea5-94ecc53df520}" port="{6e7180fa-69f5-411f-979e-b677b45d19d2}"/>
  </connection>
  <connection type="table" uuid="{e0a701e6-d71f-42d4-81f7-33fdd8eff6dc}">
    <source node="{59733e96-e2dc-4469-afc8-8fab1728945d}" port="{48f42078-cb8c-42ef-bd32-2627996b56b9}"/>
    <destination node="{a523c74d-47a4-4d92-8b5c-c12202cd0325}" port="{0df97002-be52-41bf-ba49-4dcdc585ed9a}"/>
  </connection>
  <connection type="model" uuid="{f87920e2-7036-4c3f-8b3d-e3f588617537}">
    <source node="{7bd9a81a-eb87-4b5e-8874-416c95d0a7bb}" port="{f07647cb-6d14-4047-9774-e2d9d7c3a4f2}"/>
    <destination node="{1f8fc013-cab6-404f-b04b-a771e7918995}" port="{2e39c966-bab3-4862-9754-a91238538e43}"/>
  </connection>
  <text color="Beige" height="50.0" uuid="{20cf74ab-bf1b-4818-b3eb-ffbd69f99751}" width="175.0" x="1750.0" y="1925.0">Cross validation score</text>
  <text color="Beige" height="150.0" uuid="{6cb6f7ec-39ee-4aba-b883-c09572c05556}" width="525.0" x="400.0" y="1300.0">This example flow requires that dataset '20news' that can be downloaded from the link below. You need to edit the path of the dataset into the dataset node below. Select the path of the 'train' folder that only contain further subfolders, eg. 20news/20news-bydate-train

Download dataset from: http://qwone.com/~jason/20Newsgroups/</text>
  <text color="Beige" height="100.0" uuid="{984b32ab-e534-424f-b366-0c04f1306891}" width="300.0" x="2050.0" y="1775.0">Compte the 'error' column with the corresponding text (note: table row X corresponds to list position X-1 since lists starts from zero.)</text>
  <text color="Beige" height="75.0" uuid="{e9205347-cbab-46ff-991b-f05850dfa3ae}" width="225.0" x="2200.0" y="1400.0">See confusion matrix for missclassifications between the categories</text>
</flow>
