<?xml version='1.0' encoding='ASCII'?>
<flow xmlns="http://www.sysess.org/sympathyfordata/workflow/1.0" cls="Flow" height="50.0" id="" is_locked="False" uuid="{ecdeaa7f-66f0-4d57-8012-76afe01b1d18}" width="50.0" x="0.0" y="0.0">
  <label></label>
  <description></description>
  <author></author>
  <copyright></copyright>
  <version></version>
  <min_version></min_version>
  <aggregation type="json"><![CDATA[null]]></aggregation>
  <libraries type="json"><![CDATA[[]]]></libraries>
  <pythonpaths type="json"><![CDATA[[]]]></pythonpaths>
  <overrides type="json"><![CDATA[{}]]></overrides>
  <environment type="json"><![CDATA[{}]]></environment>
  <parameters type="json"><![CDATA[{"environment": {}}]]></parameters>
  <ports/>
  <node id="org.sysess.sympathy.machinelearning.predict" uuid="{16a29f68-702d-479b-8419-a9e71a415139}" x="2525.0" y="2125.0">
    <label>Predict</label>
    <description>Uses a model to predict Y given X</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
    <ports>
      <input key="in-model" scheme="hdf5" type="model" type_base="model" uuid="{8b0fda6c-ad15-484d-80a8-3ce3f40d54c0}">
        <label>Input model</label>
        <description>Input model</description>
      </input>
      <input key="X" scheme="hdf5" type="table" type_base="table" uuid="{ad84152d-cf7a-4658-b4c9-5a1dc0f7fac0}">
        <label>X</label>
        <description>X</description>
      </input>
      <output key="Y" scheme="hdf5" type="table" type_base="table" uuid="{825b42a3-16e2-4127-bf04-f265cee0a152}">
        <label>Y</label>
        <description>Y</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.machinelearning.kernel_ridge" uuid="{278395f4-0e7c-4314-b7b6-92a54d69ccf4}" x="2050.0" y="2075.0">
    <label>Kernel Ridge Regression</label>
    <description>Kernel Ridge based classifier combining ridge regression (linear least-squares L2-norm) regression with the kernel trick</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group", "alpha": {"description": "Small positive values of alpha improve the conditioning of the problem\nand reduce the variance of the estimates.  Alpha corresponds to\n``(2*C)^-1`` in other linear models such as LogisticRegression or\nLinearSVC. If an array is passed, penalties are assumed to be specific\nto the targets. Hence they must correspond in number.\n", "editor": null, "label": "alpha", "order": 0, "type": "string", "value": "0.2"}, "coef0": {"description": "Zero coefficient for polynomial and sigmoid kernels.\nIgnored by other kernels.\n", "editor": null, "label": "coef0", "order": 1, "type": "string", "value": "0.5"}, "degree": {"description": "Degree of the polynomial kernel. Ignored by other kernels.\n", "editor": null, "label": "degree", "order": 2, "type": "string", "value": "5"}, "gamma": {"description": "Gamma parameter for the RBF, laplacian, polynomial, exponential chi2\nand sigmoid kernels. Interpretation of the default value is left to\nthe kernel; see the documentation for sklearn.metrics.pairwise.\nIgnored by other kernels.\n", "editor": null, "label": "gamma", "order": 3, "type": "string", "value": "None"}, "kernel": {"description": "Kernel mapping used internally. A callable should accept two arguments\nand the keyword arguments passed to this object as kernel_params, and\nshould return a floating point number.\n", "editor": null, "label": "kernel", "order": 4, "type": "string", "value": "rbf"}}]]></parameters>
    <ports>
      <output key="model" scheme="hdf5" type="model" type_base="model" uuid="{c73aaecd-330b-4994-b8bd-95fc9925dade}">
        <label>Model</label>
        <description>Model</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.selecttablecolumns" uuid="{2ab35181-99c3-43c1-848c-0ab7e0d5198d}" x="2050.0" y="2175.0">
    <label>X</label>
    <description>Select columns from input to propagate to output.</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;, Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(c) 2013, 2017 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "columns": {"description": "Select columns.", "label": "Select columns", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": ["X", "Y"], "value": [0], "value_names": ["X"], "editor": {"filter": true, "mode": true, "selection": "multi", "type": "listview"}}}]]></parameters>
    <ports>
      <input key="" scheme="hdf5" type="table" type_base="table" uuid="{3ca18190-41b4-42f4-a8f8-ff7d012d4810}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="" scheme="hdf5" type="table" type_base="table" uuid="{024a4b5b-1b96-4ea6-949d-45917ac744b7}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.machinelearning.fit" port_format="1.1" uuid="{3f2f6539-acf9-4d5a-9c90-3f70ce1f23bd}" x="2275.0" y="2100.0">
    <label>Fit</label>
    <description>Trains a model. Use "Create Input Port &gt; Y" for supervised training</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
    <ports>
      <input key="in-model" scheme="hdf5" type="model" type_base="model" uuid="{38693053-3a92-4d1f-a4a0-35b0fe8ebce0}">
        <label>Input model</label>
        <description>Input model</description>
      </input>
      <input key="X" scheme="hdf5" type="table" type_base="table" uuid="{4c36cc58-7009-44e1-9f13-70b0e799f2fe}">
        <label>X</label>
        <description>X</description>
      </input>
      <input key="Y0" scheme="hdf5" type="table" type_base="table" uuid="{22743f96-b01e-4e7b-9ff9-13eb69cdf320}">
        <label>Y</label>
        <description>Y</description>
      </input>
      <output key="out-model" scheme="hdf5" type="model" type_base="model" uuid="{c9279ae7-a7de-452a-b8c9-0a12eb227669}">
        <label>Output model</label>
        <description>Output model</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.builtin.empty" uuid="{4d6f6d81-793c-46c8-b28d-be88d7cf07b6}" x="2225.0" y="2250.0">
    <label>Empty</label>
    <description>Generate empty data of inferred or defined datatype</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;, Benedikt Ziegler &lt;benedikt.ziegler@combine.se&gt;</author>
    <copyright>(C) 2016 Combine Control Systems AB</copyright>
    <version>1.1</version>
    <parameters type="json"><![CDATA[{"type": "group", "datatype": {"description": "Define the datatype of the output port.", "editor": null, "label": "Datatype", "order": 0, "type": "string", "value": "<a>"}}]]></parameters>
    <ports>
      <output key="" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{d82b5331-ed57-4fb1-8151-8f25aabcd7ee}">
        <label>Output port containing empty data (must be connected or defined)</label>
        <description>Output port containing empty data (must be connected or defined)</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.visualize.plottable" uuid="{6a8da66c-5189-4fab-925b-6291dea5ac58}" x="2750.0" y="2250.0">
    <label>Plot learned signal
vs. real sin function</label>
    <description>Plot Table</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2014 Combine Control Systems AB</copyright>
    <version>0.6</version>
    <parameters type="json"><![CDATA[{"type": "group", "plots model": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "{\n    \"Plots\": [\n        {\n            \"Show annotation\": false, \n            \"Statistics\": [], \n            \"Title\": \"\", \n            \"Statistics_signals\": [\n                \"New signal 0\", \n                \"New signal 1\"\n            ], \n            \"Axes\": [\n                {\n                    \"Scale\": \"linear\", \n                    \"Limits\": [\n                        \"\", \n                        \"\"\n                    ], \n                    \"Ticks\": [\n                        \"\", \n                        \"\"\n                    ], \n                    \"Label\": \"X\", \n                    \"Grid\": \"nothing\", \n                    \"Id\": \"dc5e7dd0-7b0f-4f11-ae9e-06d2aa98725c\"\n                }, \n                {\n                    \"Scale\": \"linear\", \n                    \"Limits\": [\n                        \"\", \n                        \"\"\n                    ], \n                    \"Ticks\": [\n                        \"\", \n                        \"\"\n                    ], \n                    \"Label\": \"Y\", \n                    \"Grid\": \"nothing\", \n                    \"Id\": \"ef53ebbd-7377-4749-8595-6d5161fa6df0\"\n                }\n            ], \n            \"Limit low\": {}, \n            \"Show statistics\": false, \n            \"Signals\": [\n                {\n                    \"Marker\": {\n                        \"Edge color\": \"\", \n                        \"Edge width\": \"\", \n                        \"Style\": \"point\", \n                        \"Face color\": \"\", \n                        \"Size\": \"\"\n                    }, \n                    \"Line\": {\n                        \"Color\": \"\", \n                        \"Width\": \"\", \n                        \"Style\": \"nothing\"\n                    }, \n                    \"Axis\": [\n                        \"X\", \n                        \"Y\"\n                    ], \n                    \"Data\": [\n                        \"X\", \n                        \"Y\"\n                    ], \n                    \"Label\": \"Predicted Y\"\n                }, \n                {\n                    \"Marker\": {\n                        \"Edge color\": \"\", \n                        \"Edge width\": \"\", \n                        \"Style\": \"nothing\", \n                        \"Face color\": \"\", \n                        \"Size\": \"\"\n                    }, \n                    \"Line\": {\n                        \"Color\": \"\", \n                        \"Width\": \"\", \n                        \"Style\": \"solid\"\n                    }, \n                    \"Axis\": [\n                        \"X\", \n                        \"Y\"\n                    ], \n                    \"Data\": [\n                        \"X\", \n                        \"true Y\"\n                    ], \n                    \"Label\": \"True Y\"\n                }\n            ], \n            \"Show selectors\": false, \n            \"Limit high\": {}, \n            \"Limits low\": {}, \n            \"Limits index factor\": [\n                null, \n                null\n            ], \n            \"Show legend\": true, \n            \"Limits high\": {}\n        }\n    ]\n}"}}]]></parameters>
    <ports>
      <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{a062ed24-e253-402f-8248-a8752966c7b1}">
        <label>Input Table</label>
        <description>Input Table</description>
      </input>
      <output key="output" scheme="hdf5" type="table" type_base="table" uuid="{7d82d10e-b463-4fec-a375-65f4be18208e}">
        <label>Output Table with "plots model" attribute</label>
        <description>Output Table with "plots model" attribute</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.hjointable" uuid="{7b0301d6-6aa0-4b7c-9bc7-1be5a87da70d}" x="2625.0" y="2250.0">
    <label>hjoin</label>
    <description>Horizontal join of two Tables</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.1</version>
    <parameters type="json"><![CDATA[{"type": "group", "rename": {"description": "If true columns with same name as an earlier column will be renamed and joined, otherwise columns will overwrite existing data", "editor": null, "label": "Rename duplicate columns", "order": 0, "type": "boolean", "value": false}, "mask": {"description": "Select if rows that are not represented in all Tables should be complemented with masked values", "editor": null, "label": "Complement missing rows", "order": 1, "type": "boolean", "value": true}, "name": {"description": "Select which port decides the output table(s) names", "label": "Input port name for joined table", "mode": "selected", "order": 2, "passthrough": false, "type": "list", "list": ["Lower", "Upper"], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}}]]></parameters>
    <ports>
      <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{69f5b49d-f7fc-46d5-b10c-e947a82736c9}">
        <label>Input Table 1</label>
        <description>Input Table 1</description>
      </input>
      <input key="port2" scheme="hdf5" type="table" type_base="table" uuid="{6a32c88f-bb07-4e9c-9d5f-fd511a13e1c4}">
        <label>Input Table 2</label>
        <description>Input Table 2</description>
      </input>
      <output key="port1" scheme="hdf5" type="table" type_base="table" uuid="{ad6ae842-3b98-4d62-b446-bcd3b0af4b2c}">
        <label>Table with horizontally joined data</label>
        <description>Table with horizontally joined data</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.visualize.plottable" uuid="{7c80fabd-c01e-49e6-a90f-4f183fec280e}" x="2050.0" y="2325.0">
    <label>Plot examples</label>
    <description>Plot Table</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2014 Combine Control Systems AB</copyright>
    <version>0.6</version>
    <parameters type="json"><![CDATA[{"type": "group", "plots model": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "{\n    \"Plots\": [\n        {\n            \"Show annotation\": false, \n            \"Statistics\": [], \n            \"Title\": \"\", \n            \"Statistics_signals\": [\n                \"New signal 0\"\n            ], \n            \"Axes\": [\n                {\n                    \"Scale\": \"linear\", \n                    \"Limits\": [\n                        \"\", \n                        \"\"\n                    ], \n                    \"Ticks\": [\n                        \"\", \n                        \"\"\n                    ], \n                    \"Label\": \"X\", \n                    \"Grid\": \"nothing\", \n                    \"Id\": \"dc5e7dd0-7b0f-4f11-ae9e-06d2aa98725c\"\n                }, \n                {\n                    \"Scale\": \"linear\", \n                    \"Limits\": [\n                        \"\", \n                        \"\"\n                    ], \n                    \"Ticks\": [\n                        \"\", \n                        \"\"\n                    ], \n                    \"Label\": \"Y\", \n                    \"Grid\": \"nothing\", \n                    \"Id\": \"ef53ebbd-7377-4749-8595-6d5161fa6df0\"\n                }\n            ], \n            \"Limit low\": {}, \n            \"Show statistics\": false, \n            \"Signals\": [\n                {\n                    \"Marker\": {\n                        \"Edge color\": \"\", \n                        \"Edge width\": \"\", \n                        \"Style\": \"point\", \n                        \"Face color\": \"\", \n                        \"Size\": \"\"\n                    }, \n                    \"Line\": {\n                        \"Color\": \"\", \n                        \"Width\": \"\", \n                        \"Style\": \"nothing\"\n                    }, \n                    \"Axis\": [\n                        \"X\", \n                        \"Y\"\n                    ], \n                    \"Data\": [\n                        \"X\", \n                        \"Y\"\n                    ], \n                    \"Label\": \"Noisy sinus wave\"\n                }\n            ], \n            \"Show selectors\": false, \n            \"Limit high\": {}, \n            \"Limits low\": {}, \n            \"Limits index factor\": [\n                null, \n                null\n            ], \n            \"Show legend\": true, \n            \"Limits high\": {}\n        }\n    ]\n}"}}]]></parameters>
    <ports>
      <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{5d00e3cb-635a-4ab2-88de-41a1734a5610}">
        <label>Input Table</label>
        <description>Input Table</description>
      </input>
      <output key="output" scheme="hdf5" type="table" type_base="table" uuid="{ccbe2dde-ef5c-4fd3-b039-72550f6aca47}">
        <label>Output Table with "plots model" attribute</label>
        <description>Output Table with "plots model" attribute</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.builtin.empty" uuid="{92b40afa-52d2-4c45-ae40-eaa926649f3d}" x="1875.0" y="2325.0">
    <label>Empty</label>
    <description>Generate empty data of inferred or defined datatype</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;, Benedikt Ziegler &lt;benedikt.ziegler@combine.se&gt;</author>
    <copyright>(C) 2016 Combine Control Systems AB</copyright>
    <version>1.1</version>
    <parameters type="json"><![CDATA[{"type": "group", "datatype": {"description": "Define the datatype of the output port.", "editor": null, "label": "Datatype", "order": 0, "type": "string", "value": "<a>"}}]]></parameters>
    <ports>
      <output key="" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{bd60c920-5ac1-4889-8da3-4a2ca3cfc7da}">
        <label>Output port containing empty data (must be connected or defined)</label>
        <description>Output port containing empty data (must be connected or defined)</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.calculatortable" uuid="{9383546b-b7c8-43bc-8d15-e8e3dcdb29ff}" x="1950.0" y="2325.0">
    <label>Generate 
examples</label>
    <description>Performs user-defined python calculations</description>
    <author>Greger Cronquist &lt;greger.cronquist@combine.se&gt;, Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;, Sara Gustafzelius &lt;sara.gustafzelius@combine.se&gt;, Benedikt Ziegler &lt;benedikt.ziegler@combine.se&gt;</author>
    <copyright>(c) 2016 Combine Control Systems AB</copyright>
    <version>3.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "calc_list": {"description": "List of calculations.", "editor": null, "label": "List of calculations", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": ["${X} = np.linspace(0.0, 10.0, 10) #ENABLED:1", "${Y} = np.sin(table.col('X').data)+np.random.rand(len(table.col('X').data))*0.2 #ENABLED:1"], "value": [0], "value_names": []}, "same_length_res": {"description": "Gather all the results generated from an incoming data into a common output table. This requires that the results all have the same length. An error will be given if the lengths of the outgoing results differ.", "editor": null, "label": "Put results in common outputs.", "order": 1, "type": "boolean", "value": true}, "copy_input": {"description": "If enabled the incoming data will be copied to the output before running the calculations. This requires that the results will all have the same length. An exception will be raised if the lengths of the outgoing results differ.", "editor": null, "label": "Copy input", "order": 2, "type": "boolean", "value": false}, "fail_strategy": {"description": "Decide how a failed calculation should be handled", "label": "Action on calculation failure", "mode": "selected", "order": 3, "passthrough": false, "type": "list", "list": ["Exception", "Skip calculation"], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}}]]></parameters>
    <ports>
      <input key="port0" scheme="hdf5" type="table" type_base="table" uuid="{9d9cd7b4-3c0f-41fb-aea6-14e6227a435e}">
        <label>Input Table</label>
        <description>Input Table</description>
      </input>
      <output key="port1" scheme="hdf5" type="table" type_base="table" uuid="{79bf1521-d395-46ce-8668-0fae7bbc0b44}">
        <label>Table with results from the calculation performed by the node.</label>
        <description>Table with results from the calculation performed by the node.</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.calculatortable" uuid="{c045d85c-06a0-4d45-b4ed-d38efa2dfddf}" x="2300.0" y="2250.0">
    <label>Test data</label>
    <description>Performs user-defined python calculations</description>
    <author>Greger Cronquist &lt;greger.cronquist@combine.se&gt;, Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;, Sara Gustafzelius &lt;sara.gustafzelius@combine.se&gt;, Benedikt Ziegler &lt;benedikt.ziegler@combine.se&gt;</author>
    <copyright>(c) 2016 Combine Control Systems AB</copyright>
    <version>3.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "calc_list": {"description": "List of calculations.", "editor": null, "label": "List of calculations", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": ["${X} = np.linspace(0.0, 10.0, 500) #ENABLED:1", "${true Y} = np.sin(table.col('X').data) #ENABLED:1"], "value": [0], "value_names": []}, "same_length_res": {"description": "Gather all the results generated from an incoming data into a common output table. This requires that the results all have the same length. An error will be given if the lengths of the outgoing results differ.", "editor": null, "label": "Put results in common outputs.", "order": 1, "type": "boolean", "value": true}, "copy_input": {"description": "If enabled the incoming data will be copied to the output before running the calculations. This requires that the results will all have the same length. An exception will be raised if the lengths of the outgoing results differ.", "editor": null, "label": "Copy input", "order": 2, "type": "boolean", "value": false}, "fail_strategy": {"description": "Decide how a failed calculation should be handled", "label": "Action on calculation failure", "mode": "selected", "order": 3, "passthrough": false, "type": "list", "list": ["Exception", "Skip calculation"], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}}]]></parameters>
    <ports>
      <input key="port0" scheme="hdf5" type="table" type_base="table" uuid="{5ea68571-8107-4a80-8101-659bf738bd9c}">
        <label>Input Table</label>
        <description>Input Table</description>
      </input>
      <output key="port1" scheme="hdf5" type="table" type_base="table" uuid="{14d687cf-e599-4b5a-8baa-9e6b35d62ffe}">
        <label>Table with results from the calculation performed by the node.</label>
        <description>Table with results from the calculation performed by the node.</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.selecttablecolumns" uuid="{c21e10fd-2b9d-4e14-b3ed-e77745d0bd4f}" x="2050.0" y="2250.0">
    <label>Y</label>
    <description>Select columns from input to propagate to output.</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;, Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(c) 2013, 2017 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "columns": {"description": "Select columns.", "label": "Select columns", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": ["X", "Y"], "value": [1], "value_names": ["Y"], "editor": {"filter": true, "mode": true, "selection": "multi", "type": "listview"}}}]]></parameters>
    <ports>
      <input key="" scheme="hdf5" type="table" type_base="table" uuid="{34fe9f03-1a2a-431f-89fe-2c18e3c9e958}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="" scheme="hdf5" type="table" type_base="table" uuid="{a4e65f06-e10a-4137-ae2f-9be46f741363}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.selecttablecolumns" uuid="{d00308e0-9437-4a0e-bae4-481299715e9b}" x="2425.0" y="2200.0">
    <label>X</label>
    <description>Select columns from input to propagate to output.</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;, Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(c) 2013, 2017 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "columns": {"description": "Select columns.", "label": "Select columns", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": ["X", "Y"], "value": [0], "value_names": ["X"], "editor": {"filter": true, "mode": true, "selection": "multi", "type": "listview"}}}]]></parameters>
    <ports>
      <input key="" scheme="hdf5" type="table" type_base="table" uuid="{997e56b0-d2fe-49ca-9cd0-33c7905b14fc}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="" scheme="hdf5" type="table" type_base="table" uuid="{f83ddf91-b9f6-4c2b-bec1-04ad89bc2c9f}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <connection type="model" uuid="{1092809a-0d25-4d9e-8025-3daa477857e6}">
    <source node="{3f2f6539-acf9-4d5a-9c90-3f70ce1f23bd}" port="{c9279ae7-a7de-452a-b8c9-0a12eb227669}"/>
    <destination node="{16a29f68-702d-479b-8419-a9e71a415139}" port="{8b0fda6c-ad15-484d-80a8-3ce3f40d54c0}"/>
  </connection>
  <connection type="table" uuid="{1f295f91-c6d2-44b6-972e-56fc7c6a6eb8}">
    <source node="{16a29f68-702d-479b-8419-a9e71a415139}" port="{825b42a3-16e2-4127-bf04-f265cee0a152}"/>
    <destination node="{7b0301d6-6aa0-4b7c-9bc7-1be5a87da70d}" port="{69f5b49d-f7fc-46d5-b10c-e947a82736c9}"/>
  </connection>
  <connection type="table" uuid="{60c441e0-a3fc-496a-b226-fe394ef6027e}">
    <source node="{9383546b-b7c8-43bc-8d15-e8e3dcdb29ff}" port="{79bf1521-d395-46ce-8668-0fae7bbc0b44}"/>
    <destination node="{c21e10fd-2b9d-4e14-b3ed-e77745d0bd4f}" port="{34fe9f03-1a2a-431f-89fe-2c18e3c9e958}"/>
  </connection>
  <connection type="table" uuid="{64738c7c-8680-4f4b-b9e2-2ebc9f91b856}">
    <source node="{7b0301d6-6aa0-4b7c-9bc7-1be5a87da70d}" port="{ad6ae842-3b98-4d62-b446-bcd3b0af4b2c}"/>
    <destination node="{6a8da66c-5189-4fab-925b-6291dea5ac58}" port="{a062ed24-e253-402f-8248-a8752966c7b1}"/>
  </connection>
  <connection type="table" uuid="{7b44a429-f5ac-4606-8302-ed0cffcd6aba}">
    <source node="{2ab35181-99c3-43c1-848c-0ab7e0d5198d}" port="{024a4b5b-1b96-4ea6-949d-45917ac744b7}"/>
    <destination node="{3f2f6539-acf9-4d5a-9c90-3f70ce1f23bd}" port="{4c36cc58-7009-44e1-9f13-70b0e799f2fe}"/>
  </connection>
  <connection type="table" uuid="{81471eb6-a7d9-430d-b530-890308c0311d}">
    <source node="{c045d85c-06a0-4d45-b4ed-d38efa2dfddf}" port="{14d687cf-e599-4b5a-8baa-9e6b35d62ffe}"/>
    <destination node="{7b0301d6-6aa0-4b7c-9bc7-1be5a87da70d}" port="{6a32c88f-bb07-4e9c-9d5f-fd511a13e1c4}"/>
  </connection>
  <connection type="table" uuid="{96e59747-6639-4f8b-8764-eb909adddc85}">
    <source node="{4d6f6d81-793c-46c8-b28d-be88d7cf07b6}" port="{d82b5331-ed57-4fb1-8151-8f25aabcd7ee}"/>
    <destination node="{c045d85c-06a0-4d45-b4ed-d38efa2dfddf}" port="{5ea68571-8107-4a80-8101-659bf738bd9c}"/>
  </connection>
  <connection type="model" uuid="{9b1e9a76-45c3-48cc-844f-c161101f40db}">
    <source node="{278395f4-0e7c-4314-b7b6-92a54d69ccf4}" port="{c73aaecd-330b-4994-b8bd-95fc9925dade}"/>
    <destination node="{3f2f6539-acf9-4d5a-9c90-3f70ce1f23bd}" port="{38693053-3a92-4d1f-a4a0-35b0fe8ebce0}"/>
  </connection>
  <connection type="table" uuid="{aa308451-480c-47a6-8274-14e6ae4afd62}">
    <source node="{9383546b-b7c8-43bc-8d15-e8e3dcdb29ff}" port="{79bf1521-d395-46ce-8668-0fae7bbc0b44}"/>
    <destination node="{7c80fabd-c01e-49e6-a90f-4f183fec280e}" port="{5d00e3cb-635a-4ab2-88de-41a1734a5610}"/>
  </connection>
  <connection type="table" uuid="{d13db91d-a22d-4714-9c6e-37f92f1e6917}">
    <source node="{c045d85c-06a0-4d45-b4ed-d38efa2dfddf}" port="{14d687cf-e599-4b5a-8baa-9e6b35d62ffe}"/>
    <destination node="{d00308e0-9437-4a0e-bae4-481299715e9b}" port="{997e56b0-d2fe-49ca-9cd0-33c7905b14fc}"/>
  </connection>
  <connection type="table" uuid="{d4a132b2-4397-4feb-bd16-ed69fd8e35ac}">
    <source node="{9383546b-b7c8-43bc-8d15-e8e3dcdb29ff}" port="{79bf1521-d395-46ce-8668-0fae7bbc0b44}"/>
    <destination node="{2ab35181-99c3-43c1-848c-0ab7e0d5198d}" port="{3ca18190-41b4-42f4-a8f8-ff7d012d4810}"/>
  </connection>
  <connection type="table" uuid="{db6db3b9-4f64-428c-8f53-0f5659dfad68}">
    <source node="{d00308e0-9437-4a0e-bae4-481299715e9b}" port="{f83ddf91-b9f6-4c2b-bec1-04ad89bc2c9f}"/>
    <destination node="{16a29f68-702d-479b-8419-a9e71a415139}" port="{ad84152d-cf7a-4658-b4c9-5a1dc0f7fac0}"/>
  </connection>
  <connection type="table" uuid="{ef150290-c7c0-4c7d-893a-fa0fb546c726}">
    <source node="{c21e10fd-2b9d-4e14-b3ed-e77745d0bd4f}" port="{a4e65f06-e10a-4137-ae2f-9be46f741363}"/>
    <destination node="{3f2f6539-acf9-4d5a-9c90-3f70ce1f23bd}" port="{22743f96-b01e-4e7b-9ff9-13eb69cdf320}"/>
  </connection>
  <connection type="table" uuid="{f29d90f3-7317-4468-86b0-2be458d35a1d}">
    <source node="{92b40afa-52d2-4c45-ae40-eaa926649f3d}" port="{bd60c920-5ac1-4889-8da3-4a2ca3cfc7da}"/>
    <destination node="{9383546b-b7c8-43bc-8d15-e8e3dcdb29ff}" port="{9d9cd7b4-3c0f-41fb-aea6-14e6227a435e}"/>
  </connection>
  <text color="Beige" height="75.0" uuid="{c861e97c-9780-4549-901a-47971562d358}" width="650.0" x="1800.0" y="1975.0">This example generates a noisy sinusoid and uses kernel ridge regression (with the RBF kernel) to learn  the signal. The learned signal can be compared with the real sinusoid in the last plot. </text>
</flow>
