<?xml version='1.0' encoding='US-ASCII'?>
<flow xmlns="http://www.sysess.org/sympathyfordata/workflow/1.0" cls="Flow" height="50.0" uuid="{c563a7d3-dc18-4398-848b-1f66708d3207}" width="50.0" x="0.0" y="0.0" id="">
  <label></label>
  <description></description>
  <author></author>
  <copyright></copyright>
  <version></version>
  <min_version></min_version>
  <icon/>
  <aggregation type="json">null</aggregation>
  <libraries type="json">[]</libraries>
  <pythonpaths type="json">[]</pythonpaths>
  <parameters type="json">{}</parameters>
  <ports/>
  <flow cls="Lambda" height="50.0" uuid="{c98ab2dc-a7e5-4907-8e39-b9f20ba962ac}" width="50.0" x="2200.0" y="2025.0" id="">
    <label>rescale image
lambda</label>
    <description></description>
    <author></author>
    <copyright></copyright>
    <version></version>
    <min_version></min_version>
    <icon/>
    <aggregation type="json">null</aggregation>
    <libraries type="json">[]</libraries>
    <pythonpaths type="json">[]</pythonpaths>
    <parameters type="json">{}</parameters>
    <ports>
      <input index="0" key="Port" optional="False" parent="False" scheme="hdf5" type="image" uuid="{e9ef7e5a-dc01-4f3d-a8d6-b79e22002a91}" x="1900.0" y="2000.0">
        <label>Port</label>
        <description>Port</description>
      </input>
      <output index="0" key="Port" optional="False" parent="False" scheme="hdf5" type="image" uuid="{1e33b762-882f-4eb5-8829-9484fbe841e0}" x="2325.0" y="2000.0">
        <label>Port</label>
        <description>Port</description>
      </output>
    </ports>
    <basic_ports>
      <output key="Function" scheme="hdf5" type="image -&gt; image" type_base="&lt;a&gt;" uuid="{1b59417a-070a-4a3c-94e4-91b5d6c7fa00}">
        <label>Lambda function</label>
        <description>Lambda function</description>
      </output>
    </basic_ports>
    <node id="syip.imagefiltering" uuid="{7cb43852-a962-4a5c-ba1b-d4c923519844}" x="2100.0" y="2000.0">
      <label>Filter image</label>
      <description>Filters one image into another using one of a number of predefinedfiltering operations. The implemented filters are to a large extentbased on `scikit-image`, but some filters are not from this package.

This node is DEPRECATED, use instead the more specific nodes such as:Edge Detection, Corner Detection, Threshold, etc.</description>
      <author>Mathias Broxvall</author>
      <copyright>(C) 2017 Combine Control Systems AB</copyright>
      <version>0.1</version>
      <parameters type="json">{"type": "group", "algorithm": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "scale/offset"}, "cutoff": {"description": "", "editor": null, "label": "", "order": 1, "type": "float", "value": 0.5}, "horizontal/vertical": {"description": "", "editor": null, "label": "", "order": 2, "type": "string", "value": "horizontal"}, "window size": {"description": "", "editor": null, "label": "", "order": 3, "type": "integer", "value": 1}, "maximum": {"description": "", "editor": null, "label": "", "order": 4, "type": "float", "value": 1.0}, "scale y": {"description": "", "editor": null, "label": "", "order": 5, "type": "float", "value": 1.0}, "scale x": {"description": "", "editor": null, "label": "", "order": 6, "type": "float", "value": 1.0}, "histogram selection": {"description": "", "editor": null, "label": "", "order": 7, "type": "string", "value": "min"}, "diagonal neighborhood": {"description": "", "editor": null, "label": "", "order": 8, "type": "boolean", "value": false}, "height": {"description": "", "editor": null, "label": "", "order": 9, "type": "integer", "value": 512}, "border mode": {"description": "", "editor": null, "label": "", "order": 10, "type": "string", "value": "constant"}, "adaptive kernel size": {"description": "", "editor": null, "label": "", "order": 11, "type": "integer", "value": 4}, "luminance preserving": {"description": "", "editor": null, "label": "", "order": 12, "type": "boolean", "value": true}, "gain": {"description": "", "editor": null, "label": "", "order": 13, "type": "float", "value": 10.0}, "threshold method": {"description": "", "editor": null, "label": "", "order": 14, "type": "string", "value": "gaussian"}, "offset": {"description": "", "editor": null, "label": "", "order": 15, "type": "float", "value": 1.0}, "threshold": {"description": "", "editor": null, "label": "", "order": 16, "type": "float", "value": 0.15}, "kernel size": {"description": "", "editor": null, "label": "", "order": 17, "type": "integer", "value": 3}, "interpolation degree": {"description": "", "editor": null, "label": "", "order": 18, "type": "integer", "value": 3}, "resize": {"description": "", "editor": null, "label": "", "order": 19, "type": "boolean", "value": true}, "inverse": {"description": "", "editor": null, "label": "", "order": 20, "type": "boolean", "value": false}, "scale": {"description": "", "editor": null, "label": "", "order": 21, "type": "float", "value": -1.0}, "angle": {"description": "", "editor": null, "label": "", "order": 22, "type": "float", "value": 0.0}, "add alpha": {"description": "", "editor": null, "label": "", "order": 23, "type": "boolean", "value": false}, "k": {"description": "", "editor": null, "label": "", "order": 24, "type": "float", "value": 0.05}, "sigma-y": {"description": "", "editor": null, "label": "", "order": 25, "type": "float", "value": 1.0}, "sigma-x": {"description": "", "editor": null, "label": "", "order": 26, "type": "float", "value": 1.0}, "n": {"description": "", "editor": null, "label": "", "order": 27, "type": "integer", "value": 12}, "width": {"description": "", "editor": null, "label": "", "order": 28, "type": "integer", "value": 512}, "minimum": {"description": "", "editor": null, "label": "", "order": 29, "type": "float", "value": 0.0}, "positive/negative diagonal": {"description": "", "editor": null, "label": "", "order": 30, "type": "string", "value": "default"}, "bins": {"description": "", "editor": null, "label": "", "order": 31, "type": "integer", "value": 256}, "y": {"description": "", "editor": null, "label": "", "order": 32, "type": "integer", "value": 0}, "x": {"description": "", "editor": null, "label": "", "order": 33, "type": "integer", "value": 0}, "eps": {"description": "", "editor": null, "label": "", "order": 34, "type": "float", "value": 1e-06}, "sigma": {"description": "", "editor": null, "label": "", "order": 35, "type": "float", "value": 1.0}, "preserve alpha": {"description": "", "editor": null, "label": "", "order": 36, "type": "boolean", "value": true}, "gamma": {"description": "", "editor": null, "label": "", "order": 37, "type": "float", "value": 1.0}, "harris method": {"description": "", "editor": null, "label": "", "order": 38, "type": "string", "value": "k"}}</parameters>
      <ports>
        <input key="source" scheme="hdf5" type="image" type_base="image" uuid="{d0e9b9a0-082f-45a8-b86a-f253b8f6620b}">
          <label>source image to filter</label>
          <description>source image to filter</description>
        </input>
        <output key="result" scheme="hdf5" type="image" type_base="image" uuid="{84b9a79f-0bbb-40c8-a487-791225e3a813}">
          <label>result after filtering</label>
          <description>result after filtering</description>
        </output>
      </ports>
    </node>
    <node id="syip.imagefiltering" uuid="{d2b361d9-5b72-4749-972f-14753a7f857a}" x="2000.0" y="2000.0">
      <label>Filter image</label>
      <description>Filters one image into another using one of a number of predefinedfiltering operations. The implemented filters are to a large extentbased on `scikit-image`, but some filters are not from this package.

This node is DEPRECATED, use instead the more specific nodes such as:Edge Detection, Corner Detection, Threshold, etc.</description>
      <author>Mathias Broxvall</author>
      <copyright>(C) 2017 Combine Control Systems AB</copyright>
      <version>0.1</version>
      <parameters type="json">{"type": "group", "algorithm": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "normalize"}, "cutoff": {"description": "", "editor": null, "label": "", "order": 1, "type": "float", "value": 0.5}, "horizontal/vertical": {"description": "", "editor": null, "label": "", "order": 2, "type": "string", "value": "horizontal"}, "window size": {"description": "", "editor": null, "label": "", "order": 3, "type": "integer", "value": 1}, "maximum": {"description": "", "editor": null, "label": "", "order": 4, "type": "float", "value": 1.0}, "scale y": {"description": "", "editor": null, "label": "", "order": 5, "type": "float", "value": 1.0}, "scale x": {"description": "", "editor": null, "label": "", "order": 6, "type": "float", "value": 1.0}, "histogram selection": {"description": "", "editor": null, "label": "", "order": 7, "type": "string", "value": "min"}, "diagonal neighborhood": {"description": "", "editor": null, "label": "", "order": 8, "type": "boolean", "value": false}, "height": {"description": "", "editor": null, "label": "", "order": 9, "type": "integer", "value": 512}, "border mode": {"description": "", "editor": null, "label": "", "order": 10, "type": "string", "value": "constant"}, "adaptive kernel size": {"description": "", "editor": null, "label": "", "order": 11, "type": "integer", "value": 4}, "luminance preserving": {"description": "", "editor": null, "label": "", "order": 12, "type": "boolean", "value": true}, "gain": {"description": "", "editor": null, "label": "", "order": 13, "type": "float", "value": 10.0}, "threshold method": {"description": "", "editor": null, "label": "", "order": 14, "type": "string", "value": "gaussian"}, "offset": {"description": "", "editor": null, "label": "", "order": 15, "type": "float", "value": 0.0}, "threshold": {"description": "", "editor": null, "label": "", "order": 16, "type": "float", "value": 0.15}, "kernel size": {"description": "", "editor": null, "label": "", "order": 17, "type": "integer", "value": 3}, "interpolation degree": {"description": "", "editor": null, "label": "", "order": 18, "type": "integer", "value": 3}, "resize": {"description": "", "editor": null, "label": "", "order": 19, "type": "boolean", "value": true}, "inverse": {"description": "", "editor": null, "label": "", "order": 20, "type": "boolean", "value": false}, "scale": {"description": "", "editor": null, "label": "", "order": 21, "type": "float", "value": 1.0}, "angle": {"description": "", "editor": null, "label": "", "order": 22, "type": "float", "value": 0.0}, "add alpha": {"description": "", "editor": null, "label": "", "order": 23, "type": "boolean", "value": false}, "k": {"description": "", "editor": null, "label": "", "order": 24, "type": "float", "value": 0.05}, "sigma-y": {"description": "", "editor": null, "label": "", "order": 25, "type": "float", "value": 1.0}, "sigma-x": {"description": "", "editor": null, "label": "", "order": 26, "type": "float", "value": 1.0}, "n": {"description": "", "editor": null, "label": "", "order": 27, "type": "integer", "value": 12}, "width": {"description": "", "editor": null, "label": "", "order": 28, "type": "integer", "value": 512}, "minimum": {"description": "", "editor": null, "label": "", "order": 29, "type": "float", "value": 0.0}, "positive/negative diagonal": {"description": "", "editor": null, "label": "", "order": 30, "type": "string", "value": "default"}, "bins": {"description": "", "editor": null, "label": "", "order": 31, "type": "integer", "value": 256}, "y": {"description": "", "editor": null, "label": "", "order": 32, "type": "integer", "value": 0}, "x": {"description": "", "editor": null, "label": "", "order": 33, "type": "integer", "value": 0}, "eps": {"description": "", "editor": null, "label": "", "order": 34, "type": "float", "value": 1e-06}, "sigma": {"description": "", "editor": null, "label": "", "order": 35, "type": "float", "value": 1.0}, "preserve alpha": {"description": "", "editor": null, "label": "", "order": 36, "type": "boolean", "value": true}, "gamma": {"description": "", "editor": null, "label": "", "order": 37, "type": "float", "value": 1.0}, "harris method": {"description": "", "editor": null, "label": "", "order": 38, "type": "string", "value": "k"}}</parameters>
      <ports>
        <input key="source" scheme="hdf5" type="image" type_base="image" uuid="{97502f05-92d4-4439-835a-217584dce795}">
          <label>source image to filter</label>
          <description>source image to filter</description>
        </input>
        <output key="result" scheme="hdf5" type="image" type_base="image" uuid="{e0f5c17e-c110-484e-aad3-aefb12296f13}">
          <label>result after filtering</label>
          <description>result after filtering</description>
        </output>
      </ports>
    </node>
    <connection type="image" uuid="{2de2ce98-3fcd-4826-9105-bd2de52171bb}">
      <source node="{c98ab2dc-a7e5-4907-8e39-b9f20ba962ac}" port="{e9ef7e5a-dc01-4f3d-a8d6-b79e22002a91}"/>
      <destination node="{d2b361d9-5b72-4749-972f-14753a7f857a}" port="{97502f05-92d4-4439-835a-217584dce795}"/>
    </connection>
    <connection type="image" uuid="{a78e86f4-4079-47d1-b824-3ecc9fdf1184}">
      <source node="{d2b361d9-5b72-4749-972f-14753a7f857a}" port="{e0f5c17e-c110-484e-aad3-aefb12296f13}"/>
      <destination node="{7cb43852-a962-4a5c-ba1b-d4c923519844}" port="{d0e9b9a0-082f-45a8-b86a-f253b8f6620b}"/>
    </connection>
    <connection type="image" uuid="{f53c9203-0705-409d-95a8-add3c57bda49}">
      <source node="{7cb43852-a962-4a5c-ba1b-d4c923519844}" port="{84b9a79f-0bbb-40c8-a487-791225e3a813}"/>
      <destination node="{c98ab2dc-a7e5-4907-8e39-b9f20ba962ac}" port="{1e33b762-882f-4eb5-8829-9484fbe841e0}"/>
    </connection>
  </flow>
  <node id="org.sysess.sympathy.data.table.calculatortable" uuid="{03beb30b-0c76-49b6-b22d-c08b4600ba88}" x="2125.0" y="1650.0">
    <label>use log values</label>
    <description>Performs user-defined python calculations</description>
    <author>Greger Cronquist &lt;greger.cronquist@combine.se&gt;, Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;, Sara Gustafzelius &lt;sara.gustafzelius@combine.se&gt;, Benedikt Ziegler &lt;benedikt.ziegler@combine.se&gt;</author>
    <copyright>(c) 2016 Combine Control Systems AB</copyright>
    <version>3.0</version>
    <parameters type="json">{"type": "group", "calc_list": {"description": "List of calculations.", "editor": null, "label": "List of calculations", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": ["${param_C} = np.log10(table.col('param_C').data) #ENABLED:1", "${param_gamma} = np.log10(table.col('param_gamma').data) #ENABLED:1"], "value": [0], "value_names": []}, "same_length_res": {"description": "Gather all the results generated from an incoming data into a common output table. This requires that the results all have the same length. An error will be given if the lengths of the outgoing results differ.", "editor": null, "label": "Put results in common outputs.", "order": 1, "type": "boolean", "value": true}, "copy_input": {"description": "If enabled the incoming data will be copied to the output before running the calculations. This requires that the results will all have the same length. An exception will be raised if the lengths of the outgoing results differ.", "editor": null, "label": "Copy input", "order": 2, "type": "boolean", "value": true}, "fail_strategy": {"description": "Decide how a failed calculation should be handled", "label": "Action on calculation failure", "mode": "selected", "order": 3, "passthrough": false, "type": "list", "list": ["Exception", "Skip calculation"], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="port0" scheme="hdf5" type="table" type_base="table" uuid="{31b49ee2-96be-4f3d-944b-5a40ea6d0326}">
        <label>Input Table</label>
        <description>Input Table</description>
      </input>
      <output key="port1" scheme="hdf5" type="table" type_base="table" uuid="{e6424dd4-cbd5-486b-931d-c56c5acf4b63}">
        <label>Table with results from the calculations.</label>
        <description>Table with results from the calculations.</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.machinelearning.grid_parsearch" uuid="{0917238b-1dd6-4968-976e-61dc230115fe}" x="1775.0" y="1800.0">
    <label>Grid parameter search</label>
    <description>Evaluates each parameter combination in the set of parameter hypercubes given by each table in the list of parameter tables. Each parameter table specify a hypercube of dimension N where N is the number of columns in the table. Every combination of paramater values in each such cube will be sampled.</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "cv": {"description": "Number of fold in the default K-Fold cross validation", "editor": null, "label": "Cross validation splits", "order": 0, "type": "integer", "value": 2}}</parameters>
    <ports>
      <input key="in-model" scheme="hdf5" type="model" type_base="model" uuid="{97c24a49-785d-4b7d-be98-d93effcb75df}">
        <label>in-model</label>
        <description>in-model</description>
      </input>
      <input key="parameter space" scheme="hdf5" type="[table]" type_base="[table]" uuid="{28be05e3-bf38-44da-8807-89c14dd586f3}">
        <label>param-space</label>
        <description>param-space</description>
      </input>
      <input key="X" scheme="hdf5" type="table" type_base="table" uuid="{1a623008-3ee3-465d-80fc-0d782c1bce92}">
        <label>X</label>
        <description>X</description>
      </input>
      <input key="Y" scheme="hdf5" type="table" type_base="table" uuid="{83dce49d-9edd-48da-a462-b8fe61d23297}">
        <label>Y</label>
        <description>Y</description>
      </input>
      <output key="results" scheme="hdf5" type="table" type_base="table" uuid="{25eb1882-9d68-4785-be84-99339b3007da}">
        <label>results</label>
        <description>results</description>
      </output>
      <output key="parameters" scheme="hdf5" type="table" type_base="table" uuid="{a17320eb-c920-416c-ace5-200269012409}">
        <label>parameters</label>
        <description>parameters</description>
      </output>
      <output key="out-model" scheme="hdf5" type="model" type_base="model" uuid="{cd82db40-bea4-4f76-8dfb-8ac1436e79bb}">
        <label>out-model</label>
        <description>out-model</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.hjointable" uuid="{0e6036fc-94ff-4fab-85a9-756f391d304e}" x="2025.0" y="1650.0">
    <label>HJoin Table</label>
    <description>Horizontal join of two Tables</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.1</version>
    <parameters type="json">{"type": "group", "mask": {"description": "Select if columns that are not represented in all Tables should be complemented with masked values", "editor": null, "label": "Complement missing rows", "order": 0, "type": "boolean", "value": true}, "name": {"description": "Select which port decides the output table(s) names", "label": "Input port name for joined table", "mode": "selected", "order": 1, "passthrough": false, "type": "list", "list": ["Lower", "Upper"], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{3a5adaca-9478-4c7a-a935-12e851f255d5}">
        <label>Input Table 1</label>
        <description>Input Table 1</description>
      </input>
      <input key="port2" scheme="hdf5" type="table" type_base="table" uuid="{755f73db-2aee-4bed-bffa-52e8151e08c3}">
        <label>Input Table 2</label>
        <description>Input Table 2</description>
      </input>
      <output key="port1" scheme="hdf5" type="table" type_base="table" uuid="{872fe3ca-6fd1-49b9-b60e-87608182276b}">
        <label>Table with horizontally joined data</label>
        <description>Table with horizontally joined data</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.machinelearning.simple_split" uuid="{1eb2bdd7-0932-4f81-a639-4ce7087f8639}" x="1500.0" y="1925.0">
    <label>Simple train-test partitioning</label>
    <description>Splits input data into a training and a test dataset</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "test_size": {"description": "Size of test data as fraction (&lt; 1) of all data", "editor": null, "label": "Test size", "order": 0, "type": "float", "value": 0.25}, "stratify": {"description": "Stratify data using Y as class labels", "editor": null, "label": "Stratify", "order": 1, "type": "boolean", "value": true}}</parameters>
    <ports>
      <input key="X" scheme="hdf5" type="table" type_base="table" uuid="{355a709c-a191-4c8b-b5fb-c14f15c4269e}">
        <label>X</label>
        <description>X</description>
      </input>
      <input key="Y" scheme="hdf5" type="table" type_base="table" uuid="{949ebde7-3478-48c6-9ee1-f3204460bd7d}">
        <label>Y</label>
        <description>Y</description>
      </input>
      <output key="X_train" scheme="hdf5" type="table" type_base="table" uuid="{4f565c66-722c-42e6-b91b-35fec1d09d81}">
        <label>X_train</label>
        <description>X_train</description>
      </output>
      <output key="Y_train" scheme="hdf5" type="table" type_base="table" uuid="{4d74878d-d063-4e8b-bc2a-496b0f5e814e}">
        <label>Y_train</label>
        <description>Y_train</description>
      </output>
      <output key="X_test" scheme="hdf5" type="table" type_base="table" uuid="{10c80a52-e0ac-48ca-b00d-09d803e037dc}">
        <label>X_test</label>
        <description>X_test</description>
      </output>
      <output key="Y_test" scheme="hdf5" type="table" type_base="table" uuid="{dc9491da-5cff-4d2a-b9b0-8fa511431cc6}">
        <label>Y_test</label>
        <description>Y_test</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.hjointable" uuid="{399c8150-bea3-403b-bdbe-6afcbd712e27}" x="2200.0" y="1925.0">
    <label>HJoin Table</label>
    <description>Horizontal join of two Tables</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.1</version>
    <parameters type="json">{"type": "group", "mask": {"description": "Select if columns that are not represented in all Tables should be complemented with masked values", "editor": null, "label": "Complement missing rows", "order": 0, "type": "boolean", "value": true}, "name": {"description": "Select which port decides the output table(s) names", "label": "Input port name for joined table", "mode": "selected", "order": 1, "passthrough": false, "type": "list", "list": ["Lower", "Upper"], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{c82460b7-bfb4-4e0d-824e-6f0f34e3459b}">
        <label>Input Table 1</label>
        <description>Input Table 1</description>
      </input>
      <input key="port2" scheme="hdf5" type="table" type_base="table" uuid="{ebaf42b6-0c90-41b5-b5dc-5973c620e112}">
        <label>Input Table 2</label>
        <description>Input Table 2</description>
      </input>
      <output key="port1" scheme="hdf5" type="table" type_base="table" uuid="{54813acc-2bf6-4577-b87d-1f0466816409}">
        <label>Table with horizontally joined data</label>
        <description>Table with horizontally joined data</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.machinelearning.svc" uuid="{5407c5f9-c7aa-48bb-bac3-e32238e44903}" x="1525.0" y="1700.0">
    <label>Support Vector Classifier</label>
    <description>Support vector machine (SVM) based classifier</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "kernel": {"description": "Specifies the kernel type to be used in the algorithm.\nIt must be one of 'linear', 'poly', 'rbf', 'sigmoid', 'precomputed' or\na callable.\nIf none is given, 'rbf' will be used. If a callable is given it is\nused to pre-compute the kernel matrix from data matrices; that matrix\nshould be an array of shape ``(n_samples, n_samples)``.\n", "editor": null, "label": "kernel", "order": 0, "type": "string", "value": "rbf"}, "C": {"description": "Penalty parameter C of the error term.\n", "editor": null, "label": "C", "order": 1, "type": "string", "value": "1.0"}, "probability": {"description": "Whether to enable probability estimates. This must be enabled prior\nto calling `fit`, and will slow down that method.\n", "editor": null, "label": "probability", "order": 2, "type": "string", "value": "False"}, "degree": {"description": "Degree of the polynomial kernel function ('poly').\nIgnored by all other kernels.\n", "editor": null, "label": "degree", "order": 3, "type": "string", "value": "3"}, "shrinking": {"description": "Whether to use the shrinking heuristic.\n", "editor": null, "label": "shrinking", "order": 4, "type": "string", "value": "True"}, "max_iter": {"description": "Hard limit on iterations within solver, or -1 for no limit.\n", "editor": null, "label": "max_iter", "order": 5, "type": "string", "value": "-1"}, "random_state": {"description": "The seed of the pseudo random number generator to use when\nshuffling the data for probability estimation.\n", "editor": null, "label": "random_state", "order": 6, "type": "string", "value": "None"}, "tol": {"description": "Tolerance for stopping criterion.\n", "editor": null, "label": "tol", "order": 7, "type": "string", "value": "0.001"}, "coef0": {"description": "Independent term in kernel function.\nIt is only significant in 'poly' and 'sigmoid'.\n", "editor": null, "label": "coef0", "order": 8, "type": "string", "value": "0.0"}, "gamma": {"description": "Kernel coefficient for 'rbf', 'poly' and 'sigmoid'.\nIf gamma is 'auto' then 1/n_features will be used instead.\n", "editor": null, "label": "gamma", "order": 9, "type": "string", "value": "auto"}}</parameters>
    <ports>
      <output key="model" scheme="hdf5" type="model" type_base="model" uuid="{52fa939c-2eb0-4148-b536-9442ba156979}">
        <label>Model</label>
        <description>Model</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.machinelearning.predict" uuid="{5df79ede-65e6-4d5a-b15d-367238581eaa}" x="1900.0" y="1875.0">
    <label>Predict</label>
    <description>Uses a model to predict Y given X</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="in-model" scheme="hdf5" type="model" type_base="model" uuid="{08d5c47b-6bc7-48d0-8f60-041aab604f83}">
        <label>Input model</label>
        <description>Input model</description>
      </input>
      <input key="X" scheme="hdf5" type="table" type_base="table" uuid="{dd4ce2c3-d5e4-4dd0-a7a1-4efe986dcb1f}">
        <label>X</label>
        <description>X</description>
      </input>
      <output key="Y" scheme="hdf5" type="table" type_base="table" uuid="{8f972abb-c646-438d-a309-640969e096db}">
        <label>Y</label>
        <description>Y</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.machinelearning.example_datasets" uuid="{62370b80-71ee-4db1-ba7d-847498913a27}" x="1350.0" y="1925.0">
    <label>Example datasets</label>
    <description>Exposes the example datasets from sklearn</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "dataset": {"description": "Choose from one of the default toy datasets", "label": "Dataset", "order": 0, "type": "string", "value": "Digits", "editor": {"type": "combobox", "options": ["Digits", "Boston", "Diabetes", "linnerud", "Iris"]}}, "classnames": {"description": "Attempts to use class names as Y", "editor": null, "label": "Class names", "order": 1, "type": "boolean", "value": true}}</parameters>
    <ports>
      <output key="X" scheme="hdf5" type="table" type_base="table" uuid="{3a595575-3e01-460f-b7bf-26de87a2e9a4}">
        <label>X</label>
        <description>X</description>
      </output>
      <output key="Y" scheme="hdf5" type="table" type_base="table" uuid="{866867f3-6bca-4d73-bba5-d36b4bb6c3f3}">
        <label>Y</label>
        <description>Y</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.machinelearning.features_to_images" uuid="{65adc789-a128-485f-bcc6-f12b9ec53bbe}" x="2200.0" y="2125.0">
    <label>Features to images</label>
    <description>Converts each row into a separate image in a list</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "channels": {"description": "Number of channels in image", "editor": null, "label": "Channels", "order": 0, "type": "integer", "value": 1}, "width": {"description": "Width of image. If 0 then compute automatically assuming square input image", "editor": null, "label": "Width", "order": 1, "type": "integer", "value": 8}}</parameters>
    <ports>
      <input key="X" scheme="hdf5" type="table" type_base="table" uuid="{72c41ecd-b61d-442c-9f76-a270e2483653}">
        <label>Dataset to be converted</label>
        <description>Dataset to be converted</description>
      </input>
      <output key="out" scheme="hdf5" type="[image]" type_base="[image]" uuid="{2d70cba1-bbc2-4019-b88b-6c9d430d6671}">
        <label>Output images</label>
        <description>Output images</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.calculatortable" uuid="{72423d30-8a1f-4713-ab5b-5891697a7918}" x="2300.0" y="1925.0">
    <label>Calculator Table</label>
    <description>Performs user-defined python calculations</description>
    <author>Greger Cronquist &lt;greger.cronquist@combine.se&gt;, Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;, Sara Gustafzelius &lt;sara.gustafzelius@combine.se&gt;, Benedikt Ziegler &lt;benedikt.ziegler@combine.se&gt;</author>
    <copyright>(c) 2016 Combine Control Systems AB</copyright>
    <version>3.0</version>
    <parameters type="json">{"type": "group", "calc_list": {"description": "List of calculations.", "editor": null, "label": "List of calculations", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": ["${error} = (table.col('Y').data != table.col('Y-pred').data)*1 #ENABLED:1"], "value": [0], "value_names": []}, "same_length_res": {"description": "Gather all the results generated from an incoming data into a common output table. This requires that the results all have the same length. An error will be given if the lengths of the outgoing results differ.", "editor": null, "label": "Put results in common outputs.", "order": 1, "type": "boolean", "value": true}, "copy_input": {"description": "If enabled the incoming data will be copied to the output before running the calculations. This requires that the results will all have the same length. An exception will be raised if the lengths of the outgoing results differ.", "editor": null, "label": "Copy input", "order": 2, "type": "boolean", "value": true}, "fail_strategy": {"description": "Decide how a failed calculation should be handled", "label": "Action on calculation failure", "mode": "selected", "order": 3, "passthrough": false, "type": "list", "list": ["Exception", "Skip calculation"], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="port0" scheme="hdf5" type="table" type_base="table" uuid="{2da18ffd-d063-455a-a13f-fea710902d42}">
        <label>Input Table</label>
        <description>Input Table</description>
      </input>
      <output key="port1" scheme="hdf5" type="table" type_base="table" uuid="{8aa367c0-0dc6-4694-9528-7ef8b49a4cc5}">
        <label>Table with results from the calculations.</label>
        <description>Table with results from the calculations.</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.builtin.map" uuid="{78224c69-c3c6-4d91-a16f-eae0a2af4ff0}" x="2375.0" y="2075.0">
    <label>rescale images</label>
    <description>Map Lambda function over each element in argument list</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015-2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "fail_strategy": {"description": "Decide how failure to process an item should be handled.", "label": "Action on exception", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": ["Error", "Create Empty Item", "Skip Item"], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="Function" scheme="hdf5" type="image -&gt; image" type_base="&lt;a&gt; -&gt; &lt;b&gt;" uuid="{53016f76-3604-4776-b992-f3a89de6115c}">
        <label>Lambda Function to Map</label>
        <description>Lambda Function to Map</description>
      </input>
      <input key="List" scheme="hdf5" type="[image]" type_base="[&lt;a&gt;]" uuid="{d2860962-0cc3-4362-85ba-9faabb33a9a5}">
        <label>Argument List</label>
        <description>Argument List</description>
      </input>
      <output key="List" scheme="hdf5" type="[image]" type_base="[&lt;b&gt;]" uuid="{b6d31941-8724-45fd-a30c-3a1878dd25ca}">
        <label>Output List</label>
        <description>Output List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.itemtolist" uuid="{8dec425f-79ee-4848-a867-72462c7a4e5a}" x="1525.0" y="1800.0">
    <label>Item to List</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="item" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{eca4f764-1726-4efa-9e75-50121092d1d2}">
        <label>Input Item</label>
        <description>Input Item</description>
      </input>
      <output key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{f8da5c2a-5497-4c6e-b30d-dc8d9a4f74c6}">
        <label>Item as List</label>
        <description>Item as List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.create.createtable" uuid="{c5284d31-12dd-43bb-b210-6d6e0a4b2146}" x="1425.0" y="1800.0">
    <label>params</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>(c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "json_table": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "[[\"gamma\", \"f\", [0.1, 0.01, 0.001, 0.0001, 1e-05]], [\"C\", \"f\", [0.1, 0.5, 1.0, 2.0, null]]]"}}</parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="table" type_base="table" uuid="{d5955ac2-7629-41d7-a218-17ec69246416}">
        <label>Manually created table</label>
        <description>Manually created table</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.tuple.tuple2" uuid="{cc6564bd-e49a-4fdb-b77f-cba13116d0d9}" x="2425.0" y="1975.0">
    <label>Tuple</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="input" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{457739e8-20f6-4b27-81c6-862dc5def83e}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <input key="input" scheme="hdf5" type="[image]" type_base="&lt;b&gt;" uuid="{81f86889-6112-4238-bd0c-dd6dd461d99f}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="output" scheme="hdf5" type="(table, [image])" type_base="(&lt;a&gt;, &lt;b&gt;)" uuid="{a81155e9-3989-4398-b99e-d7b0b74a9ee8}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.files.deletefile" uuid="{d484f194-794d-44d3-8f19-a2072a37b93a}" x="2400.0" y="1650.0">
    <label>Delete plot output</label>
    <description>Delete a file</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;Andreas T&#229;gerud&lt;andreas.tagerud@combine.se&gt;</author>
    <copyright>(C) 2016-2017 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "delete_folder": {"description": "If a file that is removed is the last in that folder, the folder is removed. If this operation fails, no exception is raised.", "editor": null, "label": "Delete enclosing folder if empty", "order": 0, "type": "boolean", "value": false}, "error": {"description": "If a file operation fails, do not raise an exception", "editor": null, "label": "Do not raise exceptions", "order": 1, "type": "boolean", "value": false}}</parameters>
    <ports>
      <input key="port1" scheme="text" type="datasource" type_base="datasource" uuid="{5536d51e-836b-4fde-954d-bb1a6590fb0f}">
        <label>File to delete</label>
        <description>File to delete</description>
      </input>
      <output key="port1" scheme="text" type="datasource" type_base="datasource" uuid="{f86f834f-259c-43d9-88c8-ef7bc56d2342}">
        <label>Path to deleted file</label>
        <description>Path to deleted file</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.renamesingletablecolumns" uuid="{dce662bd-d54f-4573-aac0-e7b657b11cf3}" x="2000.0" y="1875.0">
    <label>Rename columns in Table</label>
    <description>Rename the Table columns by using regular expressions.</description>
    <author>Greger Cronquist &lt;greger.cronquist@combine.se&gt;</author>
    <copyright>(c) 2013 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "src_expr": {"description": "Specify the regular expression which will be replaced", "editor": null, "label": "Search expression", "order": 0, "type": "string", "value": "Y"}, "dst_expr": {"description": "Specify the regular expression for replacement", "editor": null, "label": "Replacement expression", "order": 1, "type": "string", "value": "Y-pred"}}</parameters>
    <ports>
      <input key="Input" scheme="hdf5" type="table" type_base="table" uuid="{c1d1e237-ce98-413e-8c75-17331d9415f9}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="Output" scheme="hdf5" type="table" type_base="table" uuid="{18916ae9-59d3-4d4b-b2c6-2208a19ae0fd}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.visualize.scatter3dnode" uuid="{ee1fe689-19dc-4786-a032-08ab6fdaa6b8}" x="2250.0" y="1650.0">
    <label>3d plot C &amp; gamma</label>
    <description>A three dimensional plot</description>
    <author>Helena Olen &lt;helena.olen@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "tb_names": {"description": "Combo of all timebasis", "label": "Time basis", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": [], "value": [], "value_names": [], "editor": {"display": null, "edit": false, "include_empty": false, "type": "combobox", "options": []}}, "x_axis": {"description": "X axis selection for plot", "label": "X axis", "mode": "selected", "order": 1, "passthrough": false, "type": "list", "list": ["mean_fit_time", "mean_score_time", "mean_test_score", "mean_train_score", "param_C", "param_gamma", "rank_test_score", "split0_test_score", "split0_train_score", "split1_test_score", "split1_train_score", "split2_test_score", "split2_train_score", "std_fit_time", "std_score_time", "std_test_score", "std_train_score", "C", "gamma"], "value": [4], "value_names": ["param_C"], "editor": {"display": null, "edit": false, "include_empty": false, "type": "combobox", "options": []}}, "y_axis": {"description": "Y axis selection for plot", "label": "Y axis", "mode": "selected", "order": 2, "passthrough": false, "type": "list", "list": ["mean_fit_time", "mean_score_time", "mean_test_score", "mean_train_score", "param_C", "param_gamma", "rank_test_score", "split0_test_score", "split0_train_score", "split1_test_score", "split1_train_score", "split2_test_score", "split2_train_score", "std_fit_time", "std_score_time", "std_test_score", "std_train_score", "C", "gamma"], "value": [5], "value_names": ["param_gamma"], "editor": {"display": null, "edit": false, "include_empty": false, "type": "combobox", "options": []}}, "z_axis": {"description": "Z axis selection for plot", "label": "Z axis", "mode": "selected", "order": 3, "passthrough": false, "type": "list", "list": ["mean_fit_time", "mean_score_time", "mean_test_score", "mean_train_score", "param_C", "param_gamma", "rank_test_score", "split0_test_score", "split0_train_score", "split1_test_score", "split1_train_score", "split2_test_score", "split2_train_score", "std_fit_time", "std_score_time", "std_test_score", "std_train_score", "C", "gamma"], "value": [2], "value_names": ["mean_test_score"], "editor": {"display": null, "edit": false, "include_empty": false, "type": "combobox", "options": []}}, "line_style": {"description": "Selectable line styles", "label": "Line style", "mode": "selected", "order": 4, "passthrough": false, "type": "list", "list": ["o", "^", "*"], "value": [0], "value_names": ["o"], "editor": {"display": null, "edit": false, "include_empty": false, "type": "combobox", "options": []}}, "plot_func": {"description": "Selectable plot types", "label": "Plot type", "mode": "selected", "order": 5, "passthrough": false, "type": "list", "list": ["scatter", "surf", "wireframe", "plot", "contour", "heatmap"], "value": [0], "value_names": ["scatter"], "editor": {"display": null, "edit": false, "include_empty": false, "type": "combobox", "options": []}}, "filename_extension": {"description": "Filename extension", "label": "File extension", "mode": "selected", "order": 6, "passthrough": false, "type": "list", "list": [".png", ".svg", ".eps", ".pdf"], "value": [0], "value_names": [".png"], "editor": {"display": null, "edit": false, "include_empty": false, "type": "combobox", "options": []}}, "directory": {"description": "Select the directory where to export the files.", "label": "Output directory", "type": "string", "value": ".", "editor": {"type": "dirname"}}, "filename": {"description": "Filename without extension.", "editor": null, "label": "Filename", "type": "string", "value": "parameter_plot"}}</parameters>
    <ports>
      <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{518b1391-6ff6-4ae6-8b1c-72c81027cbe6}">
        <label>Input Table</label>
        <description>Input Table</description>
      </input>
      <output key="port2" scheme="text" type="datasource" type_base="datasource" uuid="{b10428a7-5987-4698-86ea-2a1f40f51e9b}">
        <label>Output file</label>
        <description>Output file</description>
      </output>
    </ports>
  </node>
  <connection type="[image]" uuid="{0265d38c-0fd6-4990-a7b1-a15041c1e473}">
    <source node="{78224c69-c3c6-4d91-a16f-eae0a2af4ff0}" port="{b6d31941-8724-45fd-a30c-3a1878dd25ca}"/>
    <destination node="{cc6564bd-e49a-4fdb-b77f-cba13116d0d9}" port="{81f86889-6112-4238-bd0c-dd6dd461d99f}"/>
  </connection>
  <connection type="table" uuid="{03de667a-d962-4e67-aa13-7b7ffb7e2a08}">
    <source node="{5df79ede-65e6-4d5a-b15d-367238581eaa}" port="{8f972abb-c646-438d-a309-640969e096db}"/>
    <destination node="{dce662bd-d54f-4573-aac0-e7b657b11cf3}" port="{c1d1e237-ce98-413e-8c75-17331d9415f9}"/>
  </connection>
  <connection type="table" uuid="{07b93dc2-820b-4782-a343-d6ee7272c8b8}">
    <source node="{1eb2bdd7-0932-4f81-a639-4ce7087f8639}" port="{4f565c66-722c-42e6-b91b-35fec1d09d81}"/>
    <destination node="{0917238b-1dd6-4968-976e-61dc230115fe}" port="{1a623008-3ee3-465d-80fc-0d782c1bce92}"/>
  </connection>
  <connection type="table" uuid="{159935d8-c8b3-42fe-b0eb-91813c471a16}">
    <source node="{62370b80-71ee-4db1-ba7d-847498913a27}" port="{866867f3-6bca-4d73-bba5-d36b4bb6c3f3}"/>
    <destination node="{1eb2bdd7-0932-4f81-a639-4ce7087f8639}" port="{949ebde7-3478-48c6-9ee1-f3204460bd7d}"/>
  </connection>
  <connection type="table" uuid="{2bcdf9b8-06d9-4c9a-8df4-652a4b393d39}">
    <source node="{0917238b-1dd6-4968-976e-61dc230115fe}" port="{25eb1882-9d68-4785-be84-99339b3007da}"/>
    <destination node="{0e6036fc-94ff-4fab-85a9-756f391d304e}" port="{3a5adaca-9478-4c7a-a935-12e851f255d5}"/>
  </connection>
  <connection type="image -&gt; image" uuid="{3becbd79-175d-438b-9a1f-c77b98cdf9bf}">
    <source node="{c98ab2dc-a7e5-4907-8e39-b9f20ba962ac}" port="{1b59417a-070a-4a3c-94e4-91b5d6c7fa00}"/>
    <destination node="{78224c69-c3c6-4d91-a16f-eae0a2af4ff0}" port="{53016f76-3604-4776-b992-f3a89de6115c}"/>
  </connection>
  <connection type="model" uuid="{45026d95-403f-44e8-8c3c-5367fefdac0f}">
    <source node="{0917238b-1dd6-4968-976e-61dc230115fe}" port="{cd82db40-bea4-4f76-8dfb-8ac1436e79bb}"/>
    <destination node="{5df79ede-65e6-4d5a-b15d-367238581eaa}" port="{08d5c47b-6bc7-48d0-8f60-041aab604f83}"/>
  </connection>
  <connection type="table" uuid="{501e12c6-8b6f-4211-81fb-d43d84591c9d}">
    <source node="{0e6036fc-94ff-4fab-85a9-756f391d304e}" port="{872fe3ca-6fd1-49b9-b60e-87608182276b}"/>
    <destination node="{03beb30b-0c76-49b6-b22d-c08b4600ba88}" port="{31b49ee2-96be-4f3d-944b-5a40ea6d0326}"/>
  </connection>
  <connection type="[image]" uuid="{50e82e0e-d976-4025-afed-682884c10533}">
    <source node="{65adc789-a128-485f-bcc6-f12b9ec53bbe}" port="{2d70cba1-bbc2-4019-b88b-6c9d430d6671}"/>
    <destination node="{78224c69-c3c6-4d91-a16f-eae0a2af4ff0}" port="{d2860962-0cc3-4362-85ba-9faabb33a9a5}"/>
  </connection>
  <connection type="table" uuid="{5170a75b-2f5a-4958-be57-35b41369c1c9}">
    <source node="{62370b80-71ee-4db1-ba7d-847498913a27}" port="{3a595575-3e01-460f-b7bf-26de87a2e9a4}"/>
    <destination node="{1eb2bdd7-0932-4f81-a639-4ce7087f8639}" port="{355a709c-a191-4c8b-b5fb-c14f15c4269e}"/>
  </connection>
  <connection type="datasource" uuid="{51959f0b-b708-4493-b90f-5e2dbe9d244d}">
    <source node="{ee1fe689-19dc-4786-a032-08ab6fdaa6b8}" port="{b10428a7-5987-4698-86ea-2a1f40f51e9b}"/>
    <destination node="{d484f194-794d-44d3-8f19-a2072a37b93a}" port="{5536d51e-836b-4fde-954d-bb1a6590fb0f}"/>
  </connection>
  <connection type="table" uuid="{5baca2ee-f920-486b-ae82-d666f8755980}">
    <source node="{399c8150-bea3-403b-bdbe-6afcbd712e27}" port="{54813acc-2bf6-4577-b87d-1f0466816409}"/>
    <destination node="{72423d30-8a1f-4713-ab5b-5891697a7918}" port="{2da18ffd-d063-455a-a13f-fea710902d42}"/>
  </connection>
  <connection type="table" uuid="{7090a934-b98f-4285-a34c-58ac82c13702}">
    <source node="{1eb2bdd7-0932-4f81-a639-4ce7087f8639}" port="{10c80a52-e0ac-48ca-b00d-09d803e037dc}"/>
    <destination node="{65adc789-a128-485f-bcc6-f12b9ec53bbe}" port="{72c41ecd-b61d-442c-9f76-a270e2483653}"/>
  </connection>
  <connection type="table" uuid="{80dac320-12f2-4dc8-adcf-58d41df2418d}">
    <source node="{1eb2bdd7-0932-4f81-a639-4ce7087f8639}" port="{dc9491da-5cff-4d2a-b9b0-8fa511431cc6}"/>
    <destination node="{399c8150-bea3-403b-bdbe-6afcbd712e27}" port="{ebaf42b6-0c90-41b5-b5dc-5973c620e112}"/>
  </connection>
  <connection type="table" uuid="{996e7ba9-1fd5-4a73-b63f-3f12764850cd}">
    <source node="{03beb30b-0c76-49b6-b22d-c08b4600ba88}" port="{e6424dd4-cbd5-486b-931d-c56c5acf4b63}"/>
    <destination node="{ee1fe689-19dc-4786-a032-08ab6fdaa6b8}" port="{518b1391-6ff6-4ae6-8b1c-72c81027cbe6}"/>
  </connection>
  <connection type="table" uuid="{9a5fd2c3-6a0f-4b89-904f-37c990227b12}">
    <source node="{dce662bd-d54f-4573-aac0-e7b657b11cf3}" port="{18916ae9-59d3-4d4b-b2c6-2208a19ae0fd}"/>
    <destination node="{399c8150-bea3-403b-bdbe-6afcbd712e27}" port="{c82460b7-bfb4-4e0d-824e-6f0f34e3459b}"/>
  </connection>
  <connection type="table" uuid="{a73dcd49-d8ae-419b-921a-3801beeac74a}">
    <source node="{0917238b-1dd6-4968-976e-61dc230115fe}" port="{a17320eb-c920-416c-ace5-200269012409}"/>
    <destination node="{0e6036fc-94ff-4fab-85a9-756f391d304e}" port="{755f73db-2aee-4bed-bffa-52e8151e08c3}"/>
  </connection>
  <connection type="[table]" uuid="{b03c502e-fefe-4220-93d3-3189b1042867}">
    <source node="{8dec425f-79ee-4848-a867-72462c7a4e5a}" port="{f8da5c2a-5497-4c6e-b30d-dc8d9a4f74c6}"/>
    <destination node="{0917238b-1dd6-4968-976e-61dc230115fe}" port="{28be05e3-bf38-44da-8807-89c14dd586f3}"/>
  </connection>
  <connection type="table" uuid="{ca8a4f8a-4e48-4398-994b-c22c4ac10868}">
    <source node="{72423d30-8a1f-4713-ab5b-5891697a7918}" port="{8aa367c0-0dc6-4694-9528-7ef8b49a4cc5}"/>
    <destination node="{cc6564bd-e49a-4fdb-b77f-cba13116d0d9}" port="{457739e8-20f6-4b27-81c6-862dc5def83e}"/>
  </connection>
  <connection type="table" uuid="{d36eec62-ed9c-4db6-9dc4-8e2e037d9550}">
    <source node="{1eb2bdd7-0932-4f81-a639-4ce7087f8639}" port="{4d74878d-d063-4e8b-bc2a-496b0f5e814e}"/>
    <destination node="{0917238b-1dd6-4968-976e-61dc230115fe}" port="{83dce49d-9edd-48da-a462-b8fe61d23297}"/>
  </connection>
  <connection type="model" uuid="{e60695aa-d3dd-4e92-90b5-8ad48a4b31d2}">
    <source node="{5407c5f9-c7aa-48bb-bac3-e32238e44903}" port="{52fa939c-2eb0-4148-b536-9442ba156979}"/>
    <destination node="{0917238b-1dd6-4968-976e-61dc230115fe}" port="{97c24a49-785d-4b7d-be98-d93effcb75df}"/>
  </connection>
  <connection type="table" uuid="{f35210ca-7af7-45ee-a77d-ac53b3f2c425}">
    <source node="{c5284d31-12dd-43bb-b210-6d6e0a4b2146}" port="{d5955ac2-7629-41d7-a218-17ec69246416}"/>
    <destination node="{8dec425f-79ee-4848-a867-72462c7a4e5a}" port="{eca4f764-1726-4efa-9e75-50121092d1d2}"/>
  </connection>
  <connection type="table" uuid="{feb8f8ef-3247-4b77-99c0-6484434c0086}">
    <source node="{1eb2bdd7-0932-4f81-a639-4ce7087f8639}" port="{10c80a52-e0ac-48ca-b00d-09d803e037dc}"/>
    <destination node="{5df79ede-65e6-4d5a-b15d-367238581eaa}" port="{dd4ce2c3-d5e4-4dd0-a7a1-4efe986dcb1f}"/>
  </connection>
  <text color="Beige" height="400.0" uuid="{0f9b21a9-caae-4e6a-81cd-38ef07655779}" width="425.0" x="2125.0" y="1825.0">Visualize images that have an error (check 'error' column for a 1)</text>
</flow>
