
description: Do actions with your RAPyDo project
action:
  name: action
  help: all possible commands

options:

  # TODO: add the --env option (or --print-env) for all commands
  # env:
  #   alias: e
  #   help: print the variables to be used with the command and exit

  project:
    alias: p
    # NOTE: this is the equivalent of the old concept of `blueprint`
    type: str
    metavalue: PROJECT_NAME
    help: name of the project to be found inside the './projects' directory
    # The only one if exists otherwise list the projects.
    default: null

  mode:
    alias: m
    type: str
    metavalue: CONTAINERS_YAML_SELECTED_MODE
    default: debug
    help: mode is like a 'blueprint' marker of the configuration to launch

  log-level:
    alias: l
    type: str
    metavalue: LEVEL_OF_DEBUGGER
    default: DEBUG
    help: level of verbosity

  frontend:
    type: str
    metavalue: FRAMEWORK_NAME
    help: Include a frontend framework to the rapydo stack

  no-backend:
    type: bool
    default: False
    help: Exclude backend configuration from rapydo stack

  no-commons:
    type: bool
    default: False
    help: Exclude project common configuration from rapydo stack

  collect-logs:
    type: bool
    default: False
    help: Collect logs from containers on ELK pipeline

  hostname:
    alias: H
    type: str
    metavalue: MACHINE_HOST_NAME
    default: localhost
    help: "host name of the current machine where the server is running
        (NOTE: only used in production mode)"

  services:
    alias: s
    type: str
    metavalue: SERVICES_COMMA_SEPARATED
    default: active services
    help: list of services referring to a command

  # force-env:
  cache-env:
    alias: env
    type: bool
    default: False
    # help: Force recreation of the docker compose .env file even if existing
    help: cache the docker compose .env file instead of recreating it

  development:
    type: bool
    default: False
    help: switch to development mode

  privileged:
    type: bool
    default: False
    help: allow containers to start in privileged mode

  skip-check-permissions:
    type: bool
    default: False
    help: skip permission checks on file system

  # net:
  #   type: str
  #   default: bridge
  #   help: change the docker network used

subcommands:

  dump:
    description: dump current config into docker compose YAML

  formatter:
    description: "run 'black' formatter on main project backend code"

  check:
    description: "only verify if currently compliant to RAPyDo specs
        (NOTE: this is done at every call)"
    suboptions:
      ignore-submodule:
        alias: i
        type: str
        metavalue: IGNORE_SUBMODULE
        # default: 'upstream'
        help: ignore a given list of submodules (command delimited)
      skip-heavy-git-ops:
        alias: s
        type: bool
        default: False
        help: ignore the heaviest check operations on git commits
  init:
    description: "
      make current project compliant to RAPyDo requirements
      (if not yet being)"
    suboptions:
      submodules-path:
        type: str
        metavalue: SUBMODULE_PATH
        help: link all submodules in an existing folder instead of download them
      no-builds:
        type: bool
        default: False
        help: Skip checks on build templates
  update:
    description: update the current project
    suboptions:
      ignore-submodule:
        alias: i
        type: str
        metavalue: IGNORE_SUBMODULE
        help: ignore a given list of submodules (command delimited)
      rebuild:
        type: bool
        metavalue: TRUE_OR_FALSE
        default: False
        help: rebuild templates if required

  install:
    description: Install a rapydo-controller version
    suboptions:
      version:
        help: version number or auto to automatically detect required version
        positional: true
        type: str
        metavalue: VERSION
        default: auto
      git:
        type: bool
        metavalue: TRUE_OR_FALSE
        default: False
        help: install from git
      editable:
        type: bool
        metavalue: TRUE_OR_FALSE
        default: False
        help: install in editable mode from submodules folder

  status:
    description: list current status of containers
  build:
    description: force building of one or more services docker images
    suboptions:
      rebuild-templates:
        alias: r
        type: bool
        # metavalue: TRUE_OR_FALSE
        default: False
        help: force building of templates docker images used in other builds
      force:
        alias: f
        type: bool
        # metavalue: TRUE_OR_FALSE
        default: False
        help: remove caches of previous builds on this service
  pull:
    description: pull available images from docker hub
  log:
    description: watch log tails of all or specified containers
    suboptions:
      follow:
        alias: f
        type: bool
        metavalue: TRUE_OR_FALSE
        default: False
        help: follow logs
      tail:
        alias: t
        type: str
        metavalue: INTEGER_NUM_LINES
        default: "100"
        help: logs
      service:
        alias: s
        type: str
        metavalue: SERVICE
        default: null
  custom:
    description: execute predefined custom commands inside containers
  ssl-certificate:
    description: issue a production certificate with service Letsencrypt
    container_exec:
      name: letsencrypt
      command: /bin/bash updatecertificates
      service: proxy
      user: root
    suboptions:
      chain-file:
        type: str
        metavalue: PATH_TO_CHAIN_FILE
        default: null
        help: path to existing chain file (.pem format)
      key-file:
        type: str
        metavalue: PATH_TO_KEY_FILE
        default: null
        help: path to existing key file (.pem format)
      volatile:
        type: bool
        metavalue: TRUE_OR_FALSE
        default: False
        help: Create a volatile proxy service to request the certificate
      force:
        type: bool
        metavalue: TRUE_OR_FALSE
        default: False
        help: Force Let's Encrypt to renew the certificate
  ssl-dhparam:
    description: "generate DH DSA parameters, 4096 bit long prime. BEWARE: this may take very long time to complete"
    container_exec:
      name: dhparam
      command: openssl dhparam -out /etc/nginx/ssl/dhparam.pem 4096
      service: proxy
      user: root
  interfaces:
    description: run off some predefined interfaces to services
    suboptions:
      service:
        positional: true
        type: str
        metavalue: SERVICE
        default: null
      port:
        alias: p
        type: int
        metavalue: INTEGER_PORT_FOR_SERVICE
        default: null
        help: port to be associated to the current service interface
  shell:
    description: open a shell inside one available 'dockerized' service
    suboptions:
      service:
        positional: true
        type: str
        metavalue: SERVICE
        default: null
      user:
        alias: u
        type: str
        metavalue: UNIX_EXISTING_USER
        default: ''
        help: user existing inside selected service
      command:
        alias: c
        type: str
        metavalue: TERMINAL_COMMAND_UNIX-LIKE
        default: bash
        help: UNIX command to be executed on selected running service
  start:
    description: Start containers for this configuration
    # suboptions:
    #   from-upgrade:
    #     alias: fu
    #     type: bool
    #     metavalue: TRUE_OR_FALSE
    #     default: False
    #     help: rebuild images and use them to restart existing containers
  stop:
    description: stop running containers, but do not remove them
  restart:
    description: restart running containers
  remove:
    description: stop containers (if running) and also remove them
  toggle-freeze:
    description: toggle a temporary block/pause on running containers
  clean:
    description: "remove all:
      containers, networks and OPTIONALLY data volumes"
    suboptions:
      rm-volumes:
      # remove-all-volumes:
        alias: rm
        type: bool
        metavalue: TRUE_OR_FALSE
        default: False
        help: remove also containers persistent data
  list:
    description: print rapydo configurations
    suboptions:
      args:
        alias: a
        type: bool
        metavalue: TRUE_OR_FALSE
        default: False
        help: List of configured rapydo arguments
      env:
        alias: e
        type: bool
        metavalue: TRUE_OR_FALSE
        default: False
        help: List environment variable (.env file)
      services:
        alias: s
        type: bool
        metavalue: TRUE_OR_FALSE
        default: False
        help: List running services
      submodules:
        alias: m
        type: bool
        metavalue: TRUE_OR_FALSE
        default: False
        help: List submodules
  scale:
    description: scale the number of containers for one service
    suboptions:
      value:
        positional: yes
        type: str
        metavalue: "SERVICE=NUM_REPLICA"
        default:
        help: scale SERVICE to NUM_REPLICA
  find:
    description: show information about an existing endpoint
    suboptions:
      endpoint:
        positional: no
        type: str
        metavalue: ENDPOINT_NAME
        help: an existing endpoint name to search inside the swagger definition
  template:
    description: create a new endpoint based on a template
    suboptions:
      endpoint:
        positional: yes  # note: yes is equivalent to True in YAML
        type: str
        metavalue: ENDPOINT_NAME
        default: foo
        help: the endpoint name to be created
      'yes':
        alias: y
        type: bool
        metavalue: TRUE_OR_FALSE
        default: False
        help: say yes to all questions
      service:
        alias: s
        type: str
        metavalue: CONNECTED_SERVICE
        # default: sqlalchemy
        help: the first service that will be connected inside the code
  coverall:
    description: send coverage computed to coveralls.io website
  verify:
    description: check a service connection within the backend container
    suboptions:
      service:
        positional: yes
        type: str
        metavalue: SERVICE
        default: null
  volatile:
    description: one command container
    suboptions:
      service:
        positional: yes
        type: str
        metavalue: SERVICE
        default: null
      command:
        positional: no
        # alias: c
        type: str
        metavalue: TERMINAL_COMMAND_UNIX-LIKE
        default: bash
        help: UNIX command to be executed
  create:
    description: create a new rapydo project
    suboptions:
      name:
        positional: true
        type: str
        metavalue: NAME
        default: null
      template:
        type: str
        metavalue: TEMPLATE_NAME
        help: Name of the template used to initialize your project

  version:
    description: Retrieve version details

  # upgrade:  # DEPRECATED, see issues/71
  #   description: upgrade your current project to new official releases
  #   suboptions:
  #     release:
  #       alias: r
  #       type: str
  #       metavalue: RELEASE_VERSION
  #       help: release version you want to upgrade to
  #     downgrade:
  #       alias: d
  #       type: bool
  #       metavalue: TRUE_OR_FALSE
  #       default: False
  #       help: allow downgrade to previous versions
  #     current:
  #       alias: c
  #       type: bool
  #       metavalue: TRUE_OR_FALSE
  #       default: False
  #       help: upgrade to current branch. Incompatible with release option

  # tutorial:
  #   description: Step-by-step guide to make your project RAPyDo compliant
  # TODO: a tutorial mode to improve the project step by step
  # instead of all at once like init
