{
  "src/lib/components/Body.react.js": {
    "description": "Create a Boostrap 4 dashboard body.",
    "displayName": "Body",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID of this component, used to identify dash components\r\nin callbacks. The ID needs to be unique across all of the\r\ncomponents in an app."
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The children of this component."
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Defines CSS styles which will override styles previously set."
      },
      "loading_state": {
        "type": {
          "name": "shape",
          "value": {
            "is_loading": {
              "name": "bool",
              "description": "Determines if the component is loading or not",
              "required": false
            },
            "prop_name": {
              "name": "string",
              "description": "Holds which property is loading",
              "required": false
            },
            "component_name": {
              "name": "string",
              "description": "Holds the name of the component that is loading",
              "required": false
            }
          }
        },
        "required": false,
        "description": "Object that holds the loading state object coming from dash-renderer"
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called whenever any of the\r\nproperties change"
      }
    }
  },
  "src/lib/components/box/Box.react.js": {
    "description": "Create a Boostrap 4 box. \r\nThe children of this component are: BoxHeader, BoxBody, BodyFooter.",
    "displayName": "Box",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID of this component, used to identify dash components\r\nin callbacks. The ID needs to be unique across all of the\r\ncomponents in an app."
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The children of this component."
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Defines CSS styles which will override styles previously set."
      },
      "status": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "A color for the box header, options: primary, secondary, success, info, warning, danger or NULL.\r\nDefault: NULL."
      },
      "elevation": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Box elevation."
      },
      "solid_header": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Should the header be shown with a solid color background. Default: False.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "gradient_color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "A color for the box, options: primary, secondary, success, info, warning, danger or NULL.\r\nDefault: NULL."
      },
      "width": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "The width of the box, using the Bootstrap grid system. This is\r\nused for row-based layouts. The overall width of a region is 12, so the\r\ndefault width of 4 occupies 1/3 of that width. Default: 6.",
        "defaultValue": {
          "value": "6",
          "computed": false
        }
      },
      "collapsed": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Whether to start collapsed. Default: False.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "loading_state": {
        "type": {
          "name": "shape",
          "value": {
            "is_loading": {
              "name": "bool",
              "description": "Determines if the component is loading or not",
              "required": false
            },
            "prop_name": {
              "name": "string",
              "description": "Holds which property is loading",
              "required": false
            },
            "component_name": {
              "name": "string",
              "description": "Holds the name of the component that is loading",
              "required": false
            }
          }
        },
        "required": false,
        "description": "Object that holds the loading state object coming from dash-renderer"
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called whenever any of the\r\nproperties change"
      }
    }
  },
  "src/lib/components/box/BoxBody.react.js": {
    "description": "Create a Boostrap 4 box body.",
    "displayName": "BoxBody",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID of this component, used to identify dash components\r\nin callbacks. The ID needs to be unique across all of the\r\ncomponents in an app."
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The children of this component."
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Defines CSS styles which will override styles previously set."
      },
      "overflow": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Whether to enable overflow in the card body and footer. Default: False.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "loading_state": {
        "type": {
          "name": "shape",
          "value": {
            "is_loading": {
              "name": "bool",
              "description": "Determines if the component is loading or not",
              "required": false
            },
            "prop_name": {
              "name": "string",
              "description": "Holds which property is loading",
              "required": false
            },
            "component_name": {
              "name": "string",
              "description": "Holds the name of the component that is loading",
              "required": false
            }
          }
        },
        "required": false,
        "description": "Object that holds the loading state object coming from dash-renderer"
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called whenever any of the\r\nproperties change"
      }
    }
  },
  "src/lib/components/box/BoxFooter.react.js": {
    "description": "Create a Boostrap 4 box footer.",
    "displayName": "BoxFooter",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID of this component, used to identify dash components\r\nin callbacks. The ID needs to be unique across all of the\r\ncomponents in an app."
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The children of this component."
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Defines CSS styles which will override styles previously set."
      },
      "overflow": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Whether to enable overflow in the card body and footer. Default: False.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "loading_state": {
        "type": {
          "name": "shape",
          "value": {
            "is_loading": {
              "name": "bool",
              "description": "Determines if the component is loading or not",
              "required": false
            },
            "prop_name": {
              "name": "string",
              "description": "Holds which property is loading",
              "required": false
            },
            "component_name": {
              "name": "string",
              "description": "Holds the name of the component that is loading",
              "required": false
            }
          }
        },
        "required": false,
        "description": "Object that holds the loading state object coming from dash-renderer"
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called whenever any of the\r\nproperties change"
      }
    }
  },
  "src/lib/components/box/BoxHeader.react.js": {
    "description": "Create a Boostrap 4 box header.",
    "displayName": "BoxHeader",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID of this component, used to identify dash components\r\nin callbacks. The ID needs to be unique across all of the\r\ncomponents in an app."
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The children of this component."
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Defines CSS styles which will override styles previously set."
      },
      "title": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Box title.",
        "defaultValue": {
          "value": "\"\\u200C\"",
          "computed": false
        }
      },
      "header_border": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Whether to display a border between the header and body. Default: True.",
        "defaultValue": {
          "value": "true",
          "computed": false
        }
      },
      "loading_state": {
        "type": {
          "name": "shape",
          "value": {
            "is_loading": {
              "name": "bool",
              "description": "Determines if the component is loading or not",
              "required": false
            },
            "prop_name": {
              "name": "string",
              "description": "Holds which property is loading",
              "required": false
            },
            "component_name": {
              "name": "string",
              "description": "Holds the name of the component that is loading",
              "required": false
            }
          }
        },
        "required": false,
        "description": "Object that holds the loading state object coming from dash-renderer"
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called whenever any of the\r\nproperties change"
      }
    }
  },
  "src/lib/components/box/BoxHeaderCloseButton.react.js": {
    "description": "Create a Boostrap 4 box header close button.",
    "displayName": "BoxHeaderCloseButton",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID of this component, used to identify dash components\r\nin callbacks. The ID needs to be unique across all of the\r\ncomponents in an app."
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Defines CSS styles which will override styles previously set."
      },
      "loading_state": {
        "type": {
          "name": "shape",
          "value": {
            "is_loading": {
              "name": "bool",
              "description": "Determines if the component is loading or not",
              "required": false
            },
            "prop_name": {
              "name": "string",
              "description": "Holds which property is loading",
              "required": false
            },
            "component_name": {
              "name": "string",
              "description": "Holds the name of the component that is loading",
              "required": false
            }
          }
        },
        "required": false,
        "description": "Object that holds the loading state object coming from dash-renderer"
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called whenever any of the\r\nproperties change"
      }
    }
  },
  "src/lib/components/box/BoxHeaderCollapseButton.react.js": {
    "description": "Create a Boostrap 4 box header collapse button.",
    "displayName": "BoxHeaderCollapseButton",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID of this component, used to identify dash components\r\nin callbacks. The ID needs to be unique across all of the\r\ncomponents in an app."
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Defines CSS styles which will override styles previously set."
      },
      "collapsed": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Whether to start collapsed. Default: False.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "loading_state": {
        "type": {
          "name": "shape",
          "value": {
            "is_loading": {
              "name": "bool",
              "description": "Determines if the component is loading or not",
              "required": false
            },
            "prop_name": {
              "name": "string",
              "description": "Holds which property is loading",
              "required": false
            },
            "component_name": {
              "name": "string",
              "description": "Holds the name of the component that is loading",
              "required": false
            }
          }
        },
        "required": false,
        "description": "Object that holds the loading state object coming from dash-renderer"
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called whenever any of the\r\nproperties change"
      }
    }
  },
  "src/lib/components/box/BoxHeaderTools.react.js": {
    "description": "Create a Boostrap 4 box header tools button.",
    "displayName": "BoxHeaderTools",
    "methods": [
      {
        "name": "showMenu",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "event",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "closeMenu",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "event",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID of this component, used to identify dash components\r\nin callbacks. The ID needs to be unique across all of the\r\ncomponents in an app."
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The children of this component."
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Defines CSS styles which will override styles previously set."
      },
      "dropdown_icon": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "An icon tag. Default: wrench.",
        "defaultValue": {
          "value": "\"wrench\"",
          "computed": false
        }
      },
      "loading_state": {
        "type": {
          "name": "shape",
          "value": {
            "is_loading": {
              "name": "bool",
              "description": "Determines if the component is loading or not",
              "required": false
            },
            "prop_name": {
              "name": "string",
              "description": "Holds which property is loading",
              "required": false
            },
            "component_name": {
              "name": "string",
              "description": "Holds the name of the component that is loading",
              "required": false
            }
          }
        },
        "required": false,
        "description": "Object that holds the loading state object coming from dash-renderer"
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called whenever any of the\r\nproperties change"
      }
    }
  },
  "src/lib/components/Controlbar.react.js": {
    "description": "Create a Boostrap 4 dashboard right sidebar.",
    "displayName": "Controlbar",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID of this component, used to identify dash components\r\nin callbacks. The ID needs to be unique across all of the\r\ncomponents in an app."
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The children of this component."
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Defines CSS styles which will override styles previously set."
      },
      "disable": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Whether controlbar and controlbar toogle should be visible. Default: True.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "title": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Controlbar title."
      },
      "skin": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Controlbar skin, options: dark or light. Default: dark.",
        "defaultValue": {
          "value": "\"dark\"",
          "computed": false
        }
      },
      "loading_state": {
        "type": {
          "name": "shape",
          "value": {
            "is_loading": {
              "name": "bool",
              "description": "Determines if the component is loading or not",
              "required": false
            },
            "prop_name": {
              "name": "string",
              "description": "Holds which property is loading",
              "required": false
            },
            "component_name": {
              "name": "string",
              "description": "Holds the name of the component that is loading",
              "required": false
            }
          }
        },
        "required": false,
        "description": "Object that holds the loading state object coming from dash-renderer"
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called whenever any of the\r\nproperties change"
      }
    }
  },
  "src/lib/components/dropdowns/DropdownDivider.react.js": {
    "description": "Bootstrap 4 dropdown divider used in BoxHeaderTools dropdown.",
    "displayName": "DropdownDivider",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID of this component, used to identify dash components\r\nin callbacks. The ID needs to be unique across all of the\r\ncomponents in an app."
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called whenever any of the\r\nproperties change"
      }
    }
  },
  "src/lib/components/dropdowns/DropdownItem.react.js": {
    "description": "Bootstrap 4 dropdown item used in BoxHeaderTools dropdown.",
    "displayName": "DropdownItem",
    "methods": [
      {
        "name": "incrementClicks",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      }
    ],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID of this component, used to identify dash components\r\nin callbacks. The ID needs to be unique across all of the\r\ncomponents in an app."
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The children of this component."
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Defines CSS styles which will override styles previously set."
      },
      "url": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The children of this component."
      },
      "n_clicks": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "An integer that represents the number of times\r\nthat this element has been clicked on.",
        "defaultValue": {
          "value": "0",
          "computed": false
        }
      },
      "n_clicks_timestamp": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "An integer that represents the time (in ms since 1970)\r\nat which n_clicks changed. This can be used to tell\r\nwhich button was changed most recently.",
        "defaultValue": {
          "value": "-1",
          "computed": false
        }
      },
      "loading_state": {
        "type": {
          "name": "shape",
          "value": {
            "is_loading": {
              "name": "bool",
              "description": "Determines if the component is loading or not",
              "required": false
            },
            "prop_name": {
              "name": "string",
              "description": "Holds which property is loading",
              "required": false
            },
            "component_name": {
              "name": "string",
              "description": "Holds the name of the component that is loading",
              "required": false
            }
          }
        },
        "required": false,
        "description": "Object that holds the loading state object coming from dash-renderer"
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called whenever any of the\r\nproperties change"
      }
    }
  },
  "src/lib/components/dropdowns/DropdownMenu.react.js": {
    "description": "Create a Boostrap 4 dashboard dropdown menu.",
    "displayName": "DropdownMenu",
    "methods": [
      {
        "name": "showMenu",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "event",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "closeMenu",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "event",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID of this component, used to identify dash components\r\nin callbacks. The ID needs to be unique across all of the\r\ncomponents in an app."
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The children of this component."
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Defines CSS styles which will override styles previously set."
      },
      "menu_icon": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "An icon tag. Default: bell.",
        "defaultValue": {
          "value": "\"bell\"",
          "computed": false
        }
      },
      "badge_status": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "A color for the badge, options: primary, secondary, success, info, warning, danger or NULL.\r\nDefault: NULL."
      },
      "badge_text": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "A text to display in menu icon badge."
      },
      "align": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Menu alignment. Default: right.",
        "defaultValue": {
          "value": "\"right\"",
          "computed": false
        }
      },
      "header_text": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "A text to display in menu header.",
        "defaultValue": {
          "value": "\"Items\"",
          "computed": false
        }
      },
      "footer_text": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "A text to display in menu footer.",
        "defaultValue": {
          "value": "\"See more\"",
          "computed": false
        }
      },
      "src": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Dropdown link to an external resource placed in menu footer."
      },
      "loading_state": {
        "type": {
          "name": "shape",
          "value": {
            "is_loading": {
              "name": "bool",
              "description": "Determines if the component is loading or not",
              "required": false
            },
            "prop_name": {
              "name": "string",
              "description": "Holds which property is loading",
              "required": false
            },
            "component_name": {
              "name": "string",
              "description": "Holds the name of the component that is loading",
              "required": false
            }
          }
        },
        "required": false,
        "description": "Object that holds the loading state object coming from dash-renderer"
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called whenever any of the\r\nproperties change"
      }
    }
  },
  "src/lib/components/dropdowns/DropdownMenuItem.react.js": {
    "description": "Create a Boostrap 4 dashboard dropdown menu item.",
    "displayName": "DropdownMenuItem",
    "methods": [
      {
        "name": "incrementClicks",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      }
    ],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID of this component, used to identify dash components\r\nin callbacks. The ID needs to be unique across all of the\r\ncomponents in an app."
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The children of this component."
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Defines CSS styles which will override styles previously set."
      },
      "date": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "A date to display in menu item."
      },
      "icon": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "An icon tag. Default: info-circle.",
        "defaultValue": {
          "value": "'info-circle'",
          "computed": false
        }
      },
      "n_clicks": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "An integer that represents the number of times\r\nthat this element has been clicked on.",
        "defaultValue": {
          "value": "0",
          "computed": false
        }
      },
      "n_clicks_timestamp": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "An integer that represents the time (in ms since 1970)\r\nat which n_clicks changed. This can be used to tell\r\nwhich button was changed most recently.",
        "defaultValue": {
          "value": "-1",
          "computed": false
        }
      },
      "loading_state": {
        "type": {
          "name": "shape",
          "value": {
            "is_loading": {
              "name": "bool",
              "description": "Determines if the component is loading or not",
              "required": false
            },
            "prop_name": {
              "name": "string",
              "description": "Holds which property is loading",
              "required": false
            },
            "component_name": {
              "name": "string",
              "description": "Holds the name of the component that is loading",
              "required": false
            }
          }
        },
        "required": false,
        "description": "Object that holds the loading state object coming from dash-renderer"
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called whenever any of the\r\nproperties change"
      }
    }
  },
  "src/lib/components/Footer.react.js": {
    "description": "Create a Boostrap 4 dashboard footer.",
    "displayName": "Footer",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID of this component, used to identify dash components\r\nin callbacks. The ID needs to be unique across all of the\r\ncomponents in an app."
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The children of this component."
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Defines CSS styles which will override styles previously set."
      },
      "right_text": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Footer text placed on the right of container."
      },
      "loading_state": {
        "type": {
          "name": "shape",
          "value": {
            "is_loading": {
              "name": "bool",
              "description": "Determines if the component is loading or not",
              "required": false
            },
            "prop_name": {
              "name": "string",
              "description": "Holds which property is loading",
              "required": false
            },
            "component_name": {
              "name": "string",
              "description": "Holds the name of the component that is loading",
              "required": false
            }
          }
        },
        "required": false,
        "description": "Object that holds the loading state object coming from dash-renderer"
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called whenever any of the\r\nproperties change"
      }
    }
  },
  "src/lib/components/icon/Icon.react.js": {
    "description": "Boostrap 4 info box.",
    "displayName": "Icon",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID of this component, used to identify dash components\r\nin callbacks. The ID needs to be unique across all of the\r\ncomponents in an app."
      },
      "border": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "FontAwesome setting: border. Default: False.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "FontAwesome setting: additional class.",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "mask": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "object"
            },
            {
              "name": "array"
            },
            {
              "name": "string"
            }
          ]
        },
        "required": false,
        "description": "FontAwesome setting: mask."
      },
      "fixedWidth": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "FontAwesome setting: fixed witdh. Default: False.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "inverse": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "FontAwesome setting: inverse. Default: False.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "flip": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'horizontal'",
              "computed": false
            },
            {
              "value": "'vertical'",
              "computed": false
            },
            {
              "value": "'both'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "FontAwesome setting: flip."
      },
      "icon": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "object"
            },
            {
              "name": "array"
            },
            {
              "name": "string"
            }
          ]
        },
        "required": false,
        "description": "FontAwesome setting: icon name."
      },
      "listItem": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "FontAwesome setting: list item. Default: False.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "pull": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'right'",
              "computed": false
            },
            {
              "value": "'left'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "FontAwesome setting: pull. Options: right, left."
      },
      "pulse": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "FontAwesome setting: pulse. Default: False.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "rotation": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "90",
              "computed": false
            },
            {
              "value": "180",
              "computed": false
            },
            {
              "value": "270",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "FontAwesome setting: rotation. Options: 90, 180, 270."
      },
      "size": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'lg'",
              "computed": false
            },
            {
              "value": "'xs'",
              "computed": false
            },
            {
              "value": "'sm'",
              "computed": false
            },
            {
              "value": "'1x'",
              "computed": false
            },
            {
              "value": "'2x'",
              "computed": false
            },
            {
              "value": "'3x'",
              "computed": false
            },
            {
              "value": "'4x'",
              "computed": false
            },
            {
              "value": "'5x'",
              "computed": false
            },
            {
              "value": "'6x'",
              "computed": false
            },
            {
              "value": "'7x'",
              "computed": false
            },
            {
              "value": "'8x'",
              "computed": false
            },
            {
              "value": "'9x'",
              "computed": false
            },
            {
              "value": "'10x'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "FontAwesome setting: size. Options: lg, xs, sm, 1x-10x."
      },
      "spin": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "FontAwesome setting: spin. Default: False.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "symbol": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "bool"
            },
            {
              "name": "string"
            }
          ]
        },
        "required": false,
        "description": "FontAwesome setting: symbol. Default: False.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "title": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "FontAwesome setting: title.",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "transform": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "string"
            },
            {
              "name": "object"
            }
          ]
        },
        "required": false,
        "description": "FontAwesome setting: transform."
      },
      "loading_state": {
        "type": {
          "name": "shape",
          "value": {
            "is_loading": {
              "name": "bool",
              "description": "Determines if the component is loading or not",
              "required": false
            },
            "prop_name": {
              "name": "string",
              "description": "Holds which property is loading",
              "required": false
            },
            "component_name": {
              "name": "string",
              "description": "Holds the name of the component that is loading",
              "required": false
            }
          }
        },
        "required": false,
        "description": "Object that holds the loading state object coming from dash-renderer"
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called whenever any of the\r\nproperties change"
      }
    }
  },
  "src/lib/components/InfoBox.react.js": {
    "description": "Boostrap 4 info box.",
    "displayName": "InfoBox",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID of this component, used to identify dash components\r\nin callbacks. The ID needs to be unique across all of the\r\ncomponents in an app."
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The children of this component."
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Defines CSS styles which will override styles previously set."
      },
      "width": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "The width of the box, using the Bootstrap grid system. This is\r\nused for row-based layouts. The overall width of a region is 12, so the\r\ndefault width of 4 occupies 1/3 of that width. Default: 4.",
        "defaultValue": {
          "value": "4",
          "computed": false
        }
      },
      "title": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Box title."
      },
      "icon": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "An icon tag. Default: star.",
        "defaultValue": {
          "value": "'star'",
          "computed": false
        }
      },
      "value": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "string"
            },
            {
              "name": "number"
            }
          ]
        },
        "required": false,
        "description": "The value to display in the box. Usually a number or short text."
      },
      "status": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "A color for the box header, options: primary, secondary, success, info, warning, danger or NULL.\r\nDefault: NULL."
      },
      "gradient_color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "A color for the box, options: primary, secondary, success, info, warning, danger or NULL.\r\nDefault: NULL."
      },
      "elevation": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Box elevation."
      },
      "icon_elevation": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Icon elevation compared to the main content. Default: 3.",
        "defaultValue": {
          "value": "3",
          "computed": false
        }
      },
      "loading_state": {
        "type": {
          "name": "shape",
          "value": {
            "is_loading": {
              "name": "bool",
              "description": "Determines if the component is loading or not",
              "required": false
            },
            "prop_name": {
              "name": "string",
              "description": "Holds which property is loading",
              "required": false
            },
            "component_name": {
              "name": "string",
              "description": "Holds the name of the component that is loading",
              "required": false
            }
          }
        },
        "required": false,
        "description": "Object that holds the loading state object coming from dash-renderer"
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called whenever any of the\r\nproperties change"
      }
    }
  },
  "src/lib/components/Navbar.react.js": {
    "description": "Create a Boostrap 4 dashboard navbar.",
    "displayName": "Navbar",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID of this component, used to identify dash components\r\nin callbacks. The ID needs to be unique across all of the\r\ncomponents in an app."
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The children of this component."
      },
      "text": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Text to display next to sidebar toogle."
      },
      "skin": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Navbar skin, options dark or light. Default: light.",
        "defaultValue": {
          "value": "\"light\"",
          "computed": false
        }
      },
      "status": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "A color for the navbar, options: primary, secondary, success, info, \r\nwarning, danger, white or light-grey. Default: white.",
        "defaultValue": {
          "value": "\"white\"",
          "computed": false
        }
      },
      "border": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Whether to separate the navbar and body by a border. Default: True.",
        "defaultValue": {
          "value": "true",
          "computed": false
        }
      },
      "sidebar_icon": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Icon of the sidebar toggle. Default: bars.",
        "defaultValue": {
          "value": "\"bars\"",
          "computed": false
        }
      },
      "controlbar_icon": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Icon to toggle the controlbar. Default: th.",
        "defaultValue": {
          "value": "\"th\"",
          "computed": false
        }
      },
      "fixed": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Whether the navbar is fixed to the top. Default: False.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "loading_state": {
        "type": {
          "name": "shape",
          "value": {
            "is_loading": {
              "name": "bool",
              "description": "Determines if the component is loading or not",
              "required": false
            },
            "prop_name": {
              "name": "string",
              "description": "Holds which property is loading",
              "required": false
            },
            "component_name": {
              "name": "string",
              "description": "Holds the name of the component that is loading",
              "required": false
            }
          }
        },
        "required": false,
        "description": "Object that holds the loading state object coming from dash-renderer"
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called whenever any of the\r\nproperties change"
      }
    }
  },
  "src/lib/components/Page.react.js": {
    "description": "Create a Boostrap 4 dashboard page. \r\nThe children of this component are: Navbar, Sidebar, Body, Controlbar and Footer.",
    "displayName": "Page",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID of this component, used to identify dash components\r\nin callbacks. The ID needs to be unique across all of the\r\ncomponents in an app."
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The children of this component."
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Defines CSS styles which will override styles previously set."
      },
      "loading_state": {
        "type": {
          "name": "shape",
          "value": {
            "is_loading": {
              "name": "bool",
              "description": "Determines if the component is loading or not",
              "required": false
            },
            "prop_name": {
              "name": "string",
              "description": "Holds which property is loading",
              "required": false
            },
            "component_name": {
              "name": "string",
              "description": "Holds the name of the component that is loading",
              "required": false
            }
          }
        },
        "required": false,
        "description": "Object that holds the loading state object coming from dash-renderer"
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called whenever any of the\r\nproperties change"
      }
    }
  },
  "src/lib/components/sidebar/MenuItem.react.js": {
    "description": "Create a Boostrap 4 dashboard main sidebar menu item.",
    "displayName": "MenuItem",
    "methods": [
      {
        "name": "incrementClicks",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      }
    ],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID of this component, used to identify dash components\r\nin callbacks. The ID needs to be unique across all of the\r\ncomponents in an app."
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The children of this component."
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Defines CSS styles which will override styles previously set."
      },
      "text": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Menu item name."
      },
      "active": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Apply 'active' style to this component. Default: False.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "disabled": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Disable the link. Default: False.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "icon": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Menu item icon."
      },
      "start_expanded": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Whether to expand the manu item at start. Works only if menu item contains children.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "n_clicks": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "An integer that represents the number of times\r\nthat this element has been clicked on.",
        "defaultValue": {
          "value": "0",
          "computed": false
        }
      },
      "n_clicks_timestamp": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "An integer that represents the time (in ms since 1970)\r\nat which n_clicks changed. This can be used to tell\r\nwhich button was changed most recently.",
        "defaultValue": {
          "value": "-1",
          "computed": false
        }
      },
      "loading_state": {
        "type": {
          "name": "shape",
          "value": {
            "is_loading": {
              "name": "bool",
              "description": "Determines if the component is loading or not",
              "required": false
            },
            "prop_name": {
              "name": "string",
              "description": "Holds which property is loading",
              "required": false
            },
            "component_name": {
              "name": "string",
              "description": "Holds the name of the component that is loading",
              "required": false
            }
          }
        },
        "required": false,
        "description": "Object that holds the loading state object coming from dash-renderer"
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called whenever any of the\r\nproperties change"
      }
    }
  },
  "src/lib/components/sidebar/MenuSubItem.react.js": {
    "description": "Create a Boostrap 4 dashboard main sidebar menu sub-item.",
    "displayName": "MenuSubItem",
    "methods": [
      {
        "name": "incrementClicks",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      }
    ],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID of this component, used to identify dash components\r\nin callbacks. The ID needs to be unique across all of the\r\ncomponents in an app."
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Defines CSS styles which will override styles previously set."
      },
      "text": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Menu sub-item name."
      },
      "active": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Apply 'active' style to this component. Default: False.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "disabled": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Disable the link. Default: False.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "icon": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Menu sub-item icon."
      },
      "n_clicks": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "An integer that represents the number of times\r\nthat this element has been clicked on.",
        "defaultValue": {
          "value": "0",
          "computed": false
        }
      },
      "n_clicks_timestamp": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "An integer that represents the time (in ms since 1970)\r\nat which n_clicks changed. This can be used to tell\r\nwhich button was changed most recently.",
        "defaultValue": {
          "value": "-1",
          "computed": false
        }
      },
      "loading_state": {
        "type": {
          "name": "shape",
          "value": {
            "is_loading": {
              "name": "bool",
              "description": "Determines if the component is loading or not",
              "required": false
            },
            "prop_name": {
              "name": "string",
              "description": "Holds which property is loading",
              "required": false
            },
            "component_name": {
              "name": "string",
              "description": "Holds the name of the component that is loading",
              "required": false
            }
          }
        },
        "required": false,
        "description": "Object that holds the loading state object coming from dash-renderer"
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called whenever any of the\r\nproperties change"
      }
    }
  },
  "src/lib/components/sidebar/Sidebar.react.js": {
    "description": "Create a Boostrap 4 dashboard main sidebar.",
    "displayName": "Sidebar",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID of this component, used to identify dash components\r\nin callbacks. The ID needs to be unique across all of the\r\ncomponents in an app."
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The children of this component."
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Defines CSS styles which will override styles previously set."
      },
      "disable": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Whether sidebar and sidebar toogle should be visible. Default: True.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "title": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Sidebar title."
      },
      "skin": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Sidebar skin, options dark or light. Default: dark.",
        "defaultValue": {
          "value": "\"dark\"",
          "computed": false
        }
      },
      "status": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "A color for the sidebar, options: primary, secondary, success, info, \r\nwarning, danger. Default: primary.",
        "defaultValue": {
          "value": "\"primary\"",
          "computed": false
        }
      },
      "brand_color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "A color for the brand, options: primary, secondary, success, info, \r\nwarning, danger, white or light-grey. Default: NULL."
      },
      "url": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Sidebar brand link.",
        "defaultValue": {
          "value": "'#'",
          "computed": false
        }
      },
      "src": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Sidebar brand image."
      },
      "opacity": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Sidebar opacity. From 0 to 1. Default: 0.8.",
        "defaultValue": {
          "value": "0.8",
          "computed": false
        }
      },
      "elevation": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Sidebar elevation. Default: 4.",
        "defaultValue": {
          "value": "4",
          "computed": false
        }
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called whenever any of the\r\nproperties change"
      }
    }
  },
  "src/lib/components/sidebar/SidebarHeader.react.js": {
    "description": "Create a Boostrap 4 dashboard main sidebar header.",
    "displayName": "SidebarHeader",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID of this component, used to identify dash components\r\nin callbacks. The ID needs to be unique across all of the\r\ncomponents in an app."
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The children of this component."
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Defines CSS styles which will override styles previously set."
      },
      "loading_state": {
        "type": {
          "name": "shape",
          "value": {
            "is_loading": {
              "name": "bool",
              "description": "Determines if the component is loading or not",
              "required": false
            },
            "prop_name": {
              "name": "string",
              "description": "Holds which property is loading",
              "required": false
            },
            "component_name": {
              "name": "string",
              "description": "Holds the name of the component that is loading",
              "required": false
            }
          }
        },
        "required": false,
        "description": "Object that holds the loading state object coming from dash-renderer"
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called whenever any of the\r\nproperties change"
      }
    }
  },
  "src/lib/components/sidebar/SidebarMenu.react.js": {
    "description": "Create a Boostrap 4 dashboard main sidebar menu.",
    "displayName": "SidebarMenu",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID of this component, used to identify dash components\r\nin callbacks. The ID needs to be unique across all of the\r\ncomponents in an app."
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The children of this component."
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Defines CSS styles which will override styles previously set."
      },
      "loading_state": {
        "type": {
          "name": "shape",
          "value": {
            "is_loading": {
              "name": "bool",
              "description": "Determines if the component is loading or not",
              "required": false
            },
            "prop_name": {
              "name": "string",
              "description": "Holds which property is loading",
              "required": false
            },
            "component_name": {
              "name": "string",
              "description": "Holds the name of the component that is loading",
              "required": false
            }
          }
        },
        "required": false,
        "description": "Object that holds the loading state object coming from dash-renderer"
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called whenever any of the\r\nproperties change"
      }
    }
  },
  "src/lib/components/SimpleBox.react.js": {
    "description": "Boostrap 4 simple box.",
    "displayName": "SimpleBox",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID of this component, used to identify dash components\r\nin callbacks. The ID needs to be unique across all of the\r\ncomponents in an app."
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The children of this component."
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Defines CSS styles which will override styles previously set."
      },
      "width": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "The width of the box, using the Bootstrap grid system. This is\r\nused for row-based layouts. The overall width of a region is 12, so the\r\ndefault width of 4 occupies 1/3 of that width. Default: 6.",
        "defaultValue": {
          "value": "6",
          "computed": false
        }
      },
      "title": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Box title."
      },
      "loading_state": {
        "type": {
          "name": "shape",
          "value": {
            "is_loading": {
              "name": "bool",
              "description": "Determines if the component is loading or not",
              "required": false
            },
            "prop_name": {
              "name": "string",
              "description": "Holds which property is loading",
              "required": false
            },
            "component_name": {
              "name": "string",
              "description": "Holds the name of the component that is loading",
              "required": false
            }
          }
        },
        "required": false,
        "description": "Object that holds the loading state object coming from dash-renderer"
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called whenever any of the\r\nproperties change"
      }
    }
  },
  "src/lib/components/tabitems/TabItem.react.js": {
    "description": "One tab to put inside a tab items container.",
    "displayName": "TabItem",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID of this component, used to identify dash components\r\nin callbacks. The ID needs to be unique across all of the\r\ncomponents in an app."
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The children of this component."
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Defines CSS styles which will override styles previously set."
      },
      "active": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Apply 'active' style to this component. Default: False.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "loading_state": {
        "type": {
          "name": "shape",
          "value": {
            "is_loading": {
              "name": "bool",
              "description": "Determines if the component is loading or not",
              "required": false
            },
            "prop_name": {
              "name": "string",
              "description": "Holds which property is loading",
              "required": false
            },
            "component_name": {
              "name": "string",
              "description": "Holds the name of the component that is loading",
              "required": false
            }
          }
        },
        "required": false,
        "description": "Object that holds the loading state object coming from dash-renderer"
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called whenever any of the\r\nproperties change"
      }
    }
  },
  "src/lib/components/tabitems/TabItems.react.js": {
    "description": "A container for tab items.",
    "displayName": "TabItems",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID of this component, used to identify dash components\r\nin callbacks. The ID needs to be unique across all of the\r\ncomponents in an app."
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The children of this component."
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Defines CSS styles which will override styles previously set."
      },
      "loading_state": {
        "type": {
          "name": "shape",
          "value": {
            "is_loading": {
              "name": "bool",
              "description": "Determines if the component is loading or not",
              "required": false
            },
            "prop_name": {
              "name": "string",
              "description": "Holds which property is loading",
              "required": false
            },
            "component_name": {
              "name": "string",
              "description": "Holds the name of the component that is loading",
              "required": false
            }
          }
        },
        "required": false,
        "description": "Object that holds the loading state object coming from dash-renderer"
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called whenever any of the\r\nproperties change"
      }
    }
  },
  "src/lib/components/UserCard.react.js": {
    "description": "AdminLTE3 widget user card.",
    "displayName": "UserCard",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID of this component, used to identify dash components\r\nin callbacks. The ID needs to be unique across all of the\r\ncomponents in an app."
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Defines CSS styles which will override styles previously set."
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Defines CSS styles which will override styles previously set."
      },
      "type": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "User card type options 2 or NULL."
      },
      "src": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "User image url or path."
      },
      "elevation": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "User card elevation."
      },
      "image_elevation": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "User card image elevation (numeric)."
      },
      "status": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "A color for the user card, options: primary, secondary, success, info, warning, danger or NULL.\r\nDefault: NULL."
      },
      "title": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "User card title."
      },
      "subtitle": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Subtitle text."
      },
      "width": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "The width of the box, using the Bootstrap grid system. This is\r\nused for row-based layouts. The overall width of a region is 12, so the\r\ndefault width of 4 occupies 1/3 of that width. Default: 6.",
        "defaultValue": {
          "value": "6",
          "computed": false
        }
      },
      "loading_state": {
        "type": {
          "name": "shape",
          "value": {
            "is_loading": {
              "name": "bool",
              "description": "Determines if the component is loading or not",
              "required": false
            },
            "prop_name": {
              "name": "string",
              "description": "Holds which property is loading",
              "required": false
            },
            "component_name": {
              "name": "string",
              "description": "Holds the name of the component that is loading",
              "required": false
            }
          }
        },
        "required": false,
        "description": "Object that holds the loading state object coming from dash-renderer"
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called whenever any of the\r\nproperties change"
      }
    }
  },
  "src/lib/components/ValueBox.react.js": {
    "description": "Boostrap 4 value box.",
    "displayName": "ValueBox",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID of this component, used to identify dash components\r\nin callbacks. The ID needs to be unique across all of the\r\ncomponents in an app."
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Defines CSS styles which will override styles previously set."
      },
      "width": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "The width of the box, using the Bootstrap grid system. This is\r\nused for row-based layouts. The overall width of a region is 12, so the\r\ndefault width of 4 occupies 1/3 of that width. Default: 3.",
        "defaultValue": {
          "value": "3",
          "computed": false
        }
      },
      "status": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "A color for the box header, options: primary, secondary, success, info, warning, danger or NULL.\r\nDefault: NULL."
      },
      "icon": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "An icon tag. Default: user.",
        "defaultValue": {
          "value": "'user'",
          "computed": false
        }
      },
      "subtitle": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Subtitle text."
      },
      "value": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "string"
            },
            {
              "name": "number"
            }
          ]
        },
        "required": false,
        "description": "The value to display in the box. Usually a number or short text."
      },
      "href": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "An optional URL to link to."
      },
      "footer_text": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Text displayed in footer.",
        "defaultValue": {
          "value": "'See more '",
          "computed": false
        }
      },
      "elevation": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Box elevation."
      },
      "loading_state": {
        "type": {
          "name": "shape",
          "value": {
            "is_loading": {
              "name": "bool",
              "description": "Determines if the component is loading or not",
              "required": false
            },
            "prop_name": {
              "name": "string",
              "description": "Holds which property is loading",
              "required": false
            },
            "component_name": {
              "name": "string",
              "description": "Holds the name of the component that is loading",
              "required": false
            }
          }
        },
        "required": false,
        "description": "Object that holds the loading state object coming from dash-renderer"
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called whenever any of the\r\nproperties change"
      }
    }
  }
}