Metadata-Version: 2.1
Name: nbpages
Version: 0.0.1.dev6
Summary: Tools to maintain a respository of Jupyter notebooks
Home-page: https://github.com/jckantor/nbpages
Author: jckantor
Author-email: Kantor.1@nd.edu
License: MIT
Description: 
        [//]: # (DO NOT EDIT. README.md IS GENERATED BY NBPAGES. MAKE CHANGES TO templates/README.md.jinja.)
        
        # nbpages
        
        nbpages is a command line tool for managing a github repository of Jupyter notebooks. The project was inspired
        by the tools included with the [Python Data Science Handbook](https://github.com/jakevdp/PythonDataScienceHandbook) by
        [Jake Vanderplas](https://github.com/jakevdp).
        
        ## Installation
        
            pip install nbpages
        
        To upgrade a previously installed version to the latest version
        
            pip install nbpages --upgrade
        
        ## Setup
        
        The `nbpages` package assumes you have created a public github repository containing one or more Jupyter notebooks in a
        subdirectory named `notebooks`. The notebooks must be committed to a github repository before proceeding.
        
        `nbpages` orders notebooks into a chapter/section heirarchy using a filename prefix. Included filenames must have an
        `nn.mm-` prefix where`nn` refers to the chapter number or, if a letter, to an Appendix.
        The second pair of digits `mm` refers to the section number. Section `00` is reserved to hold the chapter title and
        any introductory material. The notebooks must also have the usual `.ipynb` suffix.
        
        Once the notebook repository has been published on github, nbpages setup is performed with the command
        
            nbpages --setup
        
        A directory named `templates` is created if one doesn't already exist.  A configuration file `config` is
        created inside the directory using data read from the `.git`. Jinja templates `README.md.jinja` and
        `notebook_header.jinja` are created if they don't already exist. These templates can be edited as required
        using data fields defined in `config`.
        
        ## Normal Usage
        
        Following setup, the normal use of `nbpages` is to execute the command line
        
            nbpages
        
        from the top level directory of the notebook repository. Normally this command would be between completing edits or
        additions to the notebooks and prior to a github commit. The command will
        
        * add or amend headers and navigation bars in all notebooks,
        * write a table of contents file
        * write a keyword index
        * write README.md using the template file
        
        ## Utilities
        
        To help achieve a consistent style over a collection of notebooks, use the command
        
            nbpages --lint
        
        to locate some forms of notebook 'lint'.  A current list of additional features can be found
        
            nbpages --help
        
        [//]: # (The following template code is used to insert a list of notebook links.)
        
        
        ### [Table of Contents](http://nbviewer.jupyter.org/github/jckantor/nbpages/blob/master/notebooks/toc.ipynb?flush=true)
        
        ### [Keyword Index](http://nbviewer.jupyter.org/github/jckantor/nbpages/blob/master/notebooks/index.ipynb?flush=true)
        
        
        ### [Style Guide](http://nbviewer.jupyter.org/github/jckantor/nbpages/blob/master/notebooks/00.00-Style-Guide.ipynb)
        
        
        ### [Chapter 1.0 Getting Started with nbcollection](http://nbviewer.jupyter.org/github/jckantor/nbpages/blob/master/notebooks/01.00-Getting-Started-with-nbcollection.ipynb)
        
        - [1.1 Notebook Repository Layout](http://nbviewer.jupyter.org/github/jckantor/nbpages/blob/master/notebooks/01.01-Notebook-Repository-Layout.ipynb)
        
Platform: UNKNOWN
Description-Content-Type: text/markdown
