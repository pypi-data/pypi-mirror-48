# coding: utf-8

"""
    DmsApi

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class ApiUsageRes(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'api_usage': 'int',
        'payed_usage': 'int',
        'last_payment': 'datetime',
        'payment_profile': 'str'
    }

    attribute_map = {
        'api_usage': 'apiUsage',
        'payed_usage': 'payedUsage',
        'last_payment': 'lastPayment',
        'payment_profile': 'paymentProfile'
    }

    def __init__(self, api_usage=None, payed_usage=None, last_payment=None, payment_profile=None):  # noqa: E501
        """ApiUsageRes - a model defined in Swagger"""  # noqa: E501

        self._api_usage = None
        self._payed_usage = None
        self._last_payment = None
        self._payment_profile = None
        self.discriminator = None

        if api_usage is not None:
            self.api_usage = api_usage
        if payed_usage is not None:
            self.payed_usage = payed_usage
        if last_payment is not None:
            self.last_payment = last_payment
        if payment_profile is not None:
            self.payment_profile = payment_profile

    @property
    def api_usage(self):
        """Gets the api_usage of this ApiUsageRes.  # noqa: E501

        Api usage since last payment.  # noqa: E501

        :return: The api_usage of this ApiUsageRes.  # noqa: E501
        :rtype: int
        """
        return self._api_usage

    @api_usage.setter
    def api_usage(self, api_usage):
        """Sets the api_usage of this ApiUsageRes.

        Api usage since last payment.  # noqa: E501

        :param api_usage: The api_usage of this ApiUsageRes.  # noqa: E501
        :type: int
        """

        self._api_usage = api_usage

    @property
    def payed_usage(self):
        """Gets the payed_usage of this ApiUsageRes.  # noqa: E501

        Total Usage payed.  # noqa: E501

        :return: The payed_usage of this ApiUsageRes.  # noqa: E501
        :rtype: int
        """
        return self._payed_usage

    @payed_usage.setter
    def payed_usage(self, payed_usage):
        """Sets the payed_usage of this ApiUsageRes.

        Total Usage payed.  # noqa: E501

        :param payed_usage: The payed_usage of this ApiUsageRes.  # noqa: E501
        :type: int
        """

        self._payed_usage = payed_usage

    @property
    def last_payment(self):
        """Gets the last_payment of this ApiUsageRes.  # noqa: E501

        Date of last payment  # noqa: E501

        :return: The last_payment of this ApiUsageRes.  # noqa: E501
        :rtype: datetime
        """
        return self._last_payment

    @last_payment.setter
    def last_payment(self, last_payment):
        """Sets the last_payment of this ApiUsageRes.

        Date of last payment  # noqa: E501

        :param last_payment: The last_payment of this ApiUsageRes.  # noqa: E501
        :type: datetime
        """

        self._last_payment = last_payment

    @property
    def payment_profile(self):
        """Gets the payment_profile of this ApiUsageRes.  # noqa: E501

        Profile of selected payment  # noqa: E501

        :return: The payment_profile of this ApiUsageRes.  # noqa: E501
        :rtype: str
        """
        return self._payment_profile

    @payment_profile.setter
    def payment_profile(self, payment_profile):
        """Sets the payment_profile of this ApiUsageRes.

        Profile of selected payment  # noqa: E501

        :param payment_profile: The payment_profile of this ApiUsageRes.  # noqa: E501
        :type: str
        """

        self._payment_profile = payment_profile

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ApiUsageRes):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
