{"remainingRequest":"/Users/verdan/Documents/pythonApps/work/incubator-superset/superset/assets/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/verdan/Documents/pythonApps/work/incubator-superset/superset/assets/node_modules/ts-loader/index.js??ref--5-2!/Users/verdan/Documents/pythonApps/work/incubator-superset/superset/assets/src/featureFlags.ts","dependencies":[{"path":"/Users/verdan/Documents/pythonApps/work/incubator-superset/superset/assets/src/featureFlags.ts","mtime":1561028177120},{"path":"/Users/verdan/Documents/pythonApps/work/incubator-superset/superset/assets/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/verdan/Documents/pythonApps/work/incubator-superset/superset/assets/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/verdan/Documents/pythonApps/work/incubator-superset/superset/assets/node_modules/ts-loader/index.js","mtime":1543302582000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n// We can codegen the enum definition based on a list of supported flags that we\n// check into source control. We're hardcoding the supported flags for now.\nvar FeatureFlag;\n(function (FeatureFlag) {\n    FeatureFlag[\"SCOPED_FILTER\"] = \"SCOPED_FILTER\";\n    FeatureFlag[\"OMNIBAR\"] = \"OMNIBAR\";\n})(FeatureFlag = exports.FeatureFlag || (exports.FeatureFlag = {}));\nfunction initFeatureFlags(featureFlags) {\n    window.featureFlags = featureFlags || {};\n}\nexports.initFeatureFlags = initFeatureFlags;\nfunction isFeatureEnabled(feature) {\n    return !!window.featureFlags[feature];\n}\nexports.isFeatureEnabled = isFeatureEnabled;\n",{"version":3,"file":"/Users/verdan/Documents/pythonApps/work/incubator-superset/superset/assets/src/featureFlags.ts","sourceRoot":"","sources":["/Users/verdan/Documents/pythonApps/work/incubator-superset/superset/assets/src/featureFlags.ts"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;;;;GAiBG;AACH,gFAAgF;AAChF,2EAA2E;AAC3E,IAAY,WAGX;AAHD,WAAY,WAAW;IACrB,8CAA+B,CAAA;IAC/B,kCAAmB,CAAA;AACrB,CAAC,EAHW,WAAW,GAAX,mBAAW,KAAX,mBAAW,QAGtB;AAYD,SAAgB,gBAAgB,CAAC,YAA4B;IAC3D,MAAM,CAAC,YAAY,GAAG,YAAY,IAAI,EAAE,CAAC;AAC3C,CAAC;AAFD,4CAEC;AAED,SAAgB,gBAAgB,CAAC,OAAoB;IACnD,OAAO,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;AACxC,CAAC;AAFD,4CAEC","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n// We can codegen the enum definition based on a list of supported flags that we\n// check into source control. We're hardcoding the supported flags for now.\nexport enum FeatureFlag {\n  SCOPED_FILTER = 'SCOPED_FILTER',\n  OMNIBAR = 'OMNIBAR',\n}\n\nexport type FeatureFlagMap = {\n  [key in FeatureFlag]?: boolean;\n};\n\ndeclare global {\n  interface Window {\n    featureFlags: FeatureFlagMap;\n  }\n}\n\nexport function initFeatureFlags(featureFlags: FeatureFlagMap) {\n  window.featureFlags = featureFlags || {};\n}\n\nexport function isFeatureEnabled(feature: FeatureFlag) {\n  return !!window.featureFlags[feature];\n}\n"]}]}