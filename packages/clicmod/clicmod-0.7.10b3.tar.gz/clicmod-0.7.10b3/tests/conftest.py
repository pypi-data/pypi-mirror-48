import random

import pytest
from util.models import Category, Node, ExportedAutomaton, Automaton


@pytest.fixture(scope="package")
def generate_node_list():
    # create fake root node
    root_category = Category(
        {'name': 'IPsoft_automata_root', 'id': 'root', 'clientId': 0, 'parentId': None, 'deleted': False})
    root_node = Node(root_category.id, root_category)
    root_node.path = ""

    child_category = Category(
        {'name': 'top_category', 'id': 1, 'clientId': 0, 'parentId': None, 'deleted': False})
    child_automata = ExportedAutomaton(
        {
            'automatonConnectionGroups': [],
            'automatonFlow': {},
            "categoryPath": "Amelia Automation",
            "clientCode": "IPsoft",
            "creatorId": "f905751a-606f-3cb4-b606-53517748bdc0",
            "creatorName": "Kevin McLaughlin",
            "designerDiagram": "<mxGraphModel><root><mxCell id=\"0\"/><mxCell id=\"1\" parent=\"0\"/><mxCell id=\"2\" style=\"symbol;image=mxgraph/images/symbols/noopaction.png\" parent=\"1\" vertex=\"1\"><State allowsExtractVariables=\"0\" icon=\"mxgraph/images/symbols/noopaction.png\" name=\"Start Here\" stateType=\"NoopState\" stateId=\"368b7aa4-2424-4d49-974e-c0d9a47d0107\" notes=\"\" as=\"value\"><Container as=\"container\"><Array as=\"fields\"/><Array as=\"containers\"/></Container></State><mxGeometry x=\"160\" y=\"150\" width=\"40\" height=\"40\" as=\"geometry\"/></mxCell><mxCell id=\"4\" parent=\"1\" source=\"2\" target=\"5\" edge=\"1\"><Transition transitionId=\"ba3222dd-a179-4b3a-8ea3-c65412affad1\" name=\"OUTPUT\" evaluatorType=\"OUTPUT\" outputField=\"RET\" scriptingEngine=\"\" variable=\"\" expression=\"0\" negate=\"false\" isCompleteMatch=\"true\" weight=\"1\" as=\"value\"/><mxGeometry relative=\"1\" as=\"geometry\"/></mxCell><mxCell id=\"6\" parent=\"1\" source=\"5\" target=\"7\" edge=\"1\"><Transition transitionId=\"b2c46d5d-4605-4c51-a480-5dc4418d4265\" name=\"OUTPUT\" evaluatorType=\"OUTPUT\" outputField=\"RET\" scriptingEngine=\"\" variable=\"\" expression=\"0\" negate=\"false\" isCompleteMatch=\"true\" weight=\"1\" as=\"value\"/><mxGeometry relative=\"1\" as=\"geometry\"/></mxCell><mxCell id=\"5\" style=\"symbol;image=mxgraph/images/symbols/hostcommandaction.png\" parent=\"1\" vertex=\"1\"><State actionClass=\"HostCommandAction\" allowsExtractVariables=\"1\" extJsPropertiesClass=\"IPautomata.view.designer.actions.HostCommandActionPropertiesPanel\" icon=\"mxgraph/images/symbols/hostcommandaction.png\" name=\"Uname -a; id\" stateType=\"NormalState\" notes=\"\" stateId=\"04171b2f-7549-4b3a-b6c3-fffe6c4ca06c\" as=\"value\"><Container as=\"container\"><Array as=\"fields\"><Field name=\"connectionGroup\" currentValue=\"ipmon\"><Array as=\"extraArgs\"/></Field><Field name=\"command\" currentValue=\"uname -a; id\"><Array as=\"extraArgs\"/></Field><Field name=\"secureStdout\" currentValue=\"false\"><Array as=\"extraArgs\"/></Field><Field name=\"secureStdErr\" currentValue=\"false\"><Array as=\"extraArgs\"/></Field><Field name=\"autoTrim\" currentValue=\"false\"><Array as=\"extraArgs\"/></Field><Field name=\"resetPrompt\" currentValue=\"false\"><Array as=\"extraArgs\"/></Field><Field name=\"softTimeout\" currentValue=\"10\" defaultValue=\"5\"><Array as=\"extraArgs\"/></Field><Field name=\"hardTimeout\" currentValue=\"20\" defaultValue=\"60\"><Array as=\"extraArgs\"/></Field></Array><Array as=\"containers\"/></Container></State><mxGeometry x=\"330\" y=\"150\" width=\"40\" height=\"40\" as=\"geometry\"/></mxCell><mxCell id=\"8\" parent=\"1\" source=\"7\" target=\"9\" edge=\"1\"><Transition transitionId=\"3f08bc7c-58bb-46a7-a563-887189668c2c\" name=\"OUTPUT\" evaluatorType=\"OUTPUT\" outputField=\"RET\" scriptingEngine=\"\" variable=\"\" expression=\"0\" negate=\"false\" isCompleteMatch=\"true\" weight=\"1\" as=\"value\"/><mxGeometry relative=\"1\" as=\"geometry\"/></mxCell><mxCell id=\"7\" style=\"symbol;image=mxgraph/images/symbols/hostcommandaction.png\" parent=\"1\" vertex=\"1\"><State actionClass=\"HostCommandAction\" allowsExtractVariables=\"1\" extJsPropertiesClass=\"IPautomata.view.designer.actions.HostCommandActionPropertiesPanel\" icon=\"mxgraph/images/symbols/hostcommandaction.png\" name=\"Get token\" stateType=\"NormalState\" notes=\"\" stateId=\"602f13be-cc75-48f2-abbf-4606f92a78ee\" as=\"value\"><Container as=\"container\"><Array as=\"fields\"><Field name=\"connectionGroup\" currentValue=\"ipmon\"><Array as=\"extraArgs\"/></Field><Field name=\"command\" currentValue=\"curl -k -X POST -H 'Content-Type:application/json' -H 'Accept-Charset:UTF-8' --url 'https://${ameliaServer}/AmeliaRest/api/v1/auth/login' --data '{    &quot;ameliaUrl&quot;:&quot;https://${ameliaServer}/Amelia/&quot;,    &quot;username&quot;: &quot;${apiuser}&quot;,    &quot;password&quot;:&quot;${apipassword}&quot; }'\"><Array as=\"extraArgs\"/></Field><Field name=\"secureStdout\" currentValue=\"false\"><Array as=\"extraArgs\"/></Field><Field name=\"secureStdErr\" currentValue=\"false\"><Array as=\"extraArgs\"/></Field><Field name=\"autoTrim\" currentValue=\"false\"><Array as=\"extraArgs\"/></Field><Field name=\"resetPrompt\" currentValue=\"false\"><Array as=\"extraArgs\"/></Field><Field name=\"softTimeout\" currentValue=\"10\" defaultValue=\"5\"><Array as=\"extraArgs\"/></Field><Field name=\"hardTimeout\" currentValue=\"20\" defaultValue=\"60\"><Array as=\"extraArgs\"/></Field></Array><Array as=\"containers\"/></Container></State><mxGeometry x=\"510\" y=\"150\" width=\"40\" height=\"40\" as=\"geometry\"/></mxCell><mxCell id=\"9\" style=\"symbol;image=mxgraph/images/symbols/editvariableaction.png\" parent=\"1\" vertex=\"1\"><State actionClass=\"EditVariableAction\" allowsExtractVariables=\"0\" extJsPropertiesClass=\"IPautomata.view.designer.actions.EditVariableAction.EditVariableActionPropertiesPanel\" icon=\"mxgraph/images/symbols/editvariableaction.png\" name=\"trim accessToken\" stateType=\"NormalState\" notes=\"\" stateId=\"fbbfe1bf-d462-4dcd-9c03-331e176eb218\" as=\"value\"><Container as=\"container\"><Array as=\"fields\"><Field name=\"variable\" currentValue=\"accessToken\"><Array as=\"extraArgs\"/></Field><Field name=\"refresh\" currentValue=\"false\"><Array as=\"extraArgs\"/></Field><Field name=\"method\" loadOptionsDelegateClass=\"net.ipsoft.ipcenter.ipautomata.api.designer.delegate.EditVariableTransformMethodFieldDelegate\" loadOptionsDelegateMethod=\"getTransformMethods\"><Array as=\"extraArgs\"/></Field></Array><Array as=\"containers\"><Container name=\"Methods\"><Array as=\"fields\"/><Array as=\"containers\"/></Container><Container name=\"Script\"><Array as=\"fields\"><Field name=\"scriptingEngine\" currentValue=\"JAVASCRIPT\" defaultValue=\"JAVASCRIPT\" loadOptionsDelegateClass=\"net.ipsoft.ipcenter.ipautomata.api.designer.delegate.ScriptActionScriptingEngineFieldDelegate\" loadOptionsDelegateMethod=\"getScriptingEngines\"><Array as=\"extraArgs\"/></Field><Field name=\"script\" currentValue=\"accessToken.trim();\"><Array as=\"extraArgs\"/></Field></Array><Array as=\"containers\"/></Container></Array></Container></State><mxGeometry x=\"680\" y=\"150\" width=\"40\" height=\"40\" as=\"geometry\"/></mxCell><mxCell id=\"10\" parent=\"1\" source=\"9\" target=\"11\" edge=\"1\"><Transition transitionId=\"7316fd4c-91a5-4fed-941f-a5e970db4c90\" name=\"OUTPUT\" evaluatorType=\"OUTPUT\" outputField=\"RET\" scriptingEngine=\"\" variable=\"\" expression=\"0\" negate=\"false\" isCompleteMatch=\"true\" weight=\"1\" as=\"value\"/><mxGeometry relative=\"1\" as=\"geometry\"/></mxCell><mxCell id=\"12\" parent=\"1\" source=\"11\" target=\"13\" edge=\"1\"><Transition transitionId=\"d53a88a0-e1ec-496f-8c68-24f0a1d04d9f\" name=\"OUTPUT\" evaluatorType=\"OUTPUT\" outputField=\"RET\" scriptingEngine=\"\" variable=\"\" expression=\"0\" negate=\"false\" isCompleteMatch=\"true\" weight=\"1\" as=\"value\"/><mxGeometry relative=\"1\" as=\"geometry\"/></mxCell><mxCell id=\"11\" style=\"symbol;image=mxgraph/images/symbols/hostcommandaction.png\" parent=\"1\" vertex=\"1\"><State actionClass=\"HostCommandAction\" allowsExtractVariables=\"1\" extJsPropertiesClass=\"IPautomata.view.designer.actions.HostCommandActionPropertiesPanel\" icon=\"mxgraph/images/symbols/hostcommandaction.png\" name=\"Create new conversation with Amelia - kevin\" stateType=\"NormalState\" notes=\"\" stateId=\"bff3e5f9-ba9e-4025-8e2c-4ba808bba59f\" as=\"value\"><Container as=\"container\"><Array as=\"fields\"><Field name=\"connectionGroup\" currentValue=\"ipmon\"><Array as=\"extraArgs\"/></Field><Field name=\"command\" currentValue=\"curl -k -X POST -H 'X-Amelia-Rest-Token:${accessToken}' -H 'Content-Type:application/json' -H 'Accept-Charset:UTF-8' --url 'https://${ameliaServer}/AmeliaRest/api/v1/conversations/push-new-with-amelia' --data '{&quot;domain&quot;:&quot;${domain}&quot;,&quot;description&quot;:&quot;${description}&quot;,&quot;userEmail&quot;:&quot;kevin.mclaughlin@ipsoft.com&quot;,&quot;initialBpnVariables&quot;:{&quot;hostName&quot;:&quot;ipmon01.stg-ipsoft.nj3.ipcenter.com&quot;,&quot;user_type&quot;:&quot;event&quot;,&quot;processName&quot;:&quot;serviceStartKrm&quot;,&quot;systemProcessName&quot;:&quot;httpd&quot;,&quot;user_source&quot;:&quot;amelia_api&quot;, &quot;bpnTaskName&quot;:&quot;Amelia_BPN_startService&quot;, &quot;taskSubject&quot;:&quot;${description}&quot;}}'\"><Array as=\"extraArgs\"/></Field><Field name=\"secureStdout\" currentValue=\"false\"><Array as=\"extraArgs\"/></Field><Field name=\"secureStdErr\" currentValue=\"false\"><Array as=\"extraArgs\"/></Field><Field name=\"autoTrim\" currentValue=\"false\"><Array as=\"extraArgs\"/></Field><Field name=\"resetPrompt\" currentValue=\"false\"><Array as=\"extraArgs\"/></Field><Field name=\"softTimeout\" currentValue=\"10\" defaultValue=\"5\"><Array as=\"extraArgs\"/></Field><Field name=\"hardTimeout\" currentValue=\"20\" defaultValue=\"60\"><Array as=\"extraArgs\"/></Field></Array><Array as=\"containers\"/></Container></State><mxGeometry x=\"850\" y=\"150\" width=\"40\" height=\"40\" as=\"geometry\"/></mxCell><mxCell id=\"13\" style=\"symbol;image=mxgraph/images/symbols/hostcommandaction.png\" parent=\"1\" vertex=\"1\"><State actionClass=\"HostCommandAction\" allowsExtractVariables=\"1\" extJsPropertiesClass=\"IPautomata.view.designer.actions.HostCommandActionPropertiesPanel\" icon=\"mxgraph/images/symbols/hostcommandaction.png\" name=\"Create new conversation with Amelia - Ranga\" stateType=\"NormalState\" notes=\"\" stateId=\"cd0727db-5f9f-4907-b499-a6da8632e653\" as=\"value\"><Container as=\"container\"><Array as=\"fields\"><Field name=\"connectionGroup\" currentValue=\"ipmon\"><Array as=\"extraArgs\"/></Field><Field name=\"command\" currentValue=\"curl -k -X POST -H 'X-Amelia-Rest-Token:${accessToken}' -H 'Content-Type:application/json' -H 'Accept-Charset:UTF-8' --url 'https://${ameliaServer}/AmeliaRest/api/v1/conversations/push-new-with-amelia' --data '{   &quot;domain&quot;: &quot;${domain}&quot;,   &quot;autoSwitch&quot;: ${autoSwitch},   &quot;description&quot;: &quot;${description}&quot;,   &quot;initialAttributes&quot;: {       &quot;user_type&quot;:&quot;event&quot;,       &quot;user_source&quot;:&quot;amelia_api&quot;     },   &quot;initialBpnVariables&quot;: { },   &quot;userEmail&quot;: &quot;Rangasesh.Mallena@ipsoft.com&quot; }'\"><Array as=\"extraArgs\"/></Field><Field name=\"secureStdout\" currentValue=\"false\"><Array as=\"extraArgs\"/></Field><Field name=\"secureStdErr\" currentValue=\"false\"><Array as=\"extraArgs\"/></Field><Field name=\"autoTrim\" currentValue=\"false\"><Array as=\"extraArgs\"/></Field><Field name=\"resetPrompt\" currentValue=\"false\"><Array as=\"extraArgs\"/></Field><Field name=\"softTimeout\" currentValue=\"10\" defaultValue=\"5\"><Array as=\"extraArgs\"/></Field><Field name=\"hardTimeout\" currentValue=\"20\" defaultValue=\"60\"><Array as=\"extraArgs\"/></Field></Array><Array as=\"containers\"/></Container></State><mxGeometry x=\"850\" y=\"280\" width=\"40\" height=\"40\" as=\"geometry\"/></mxCell><mxCell id=\"15\" parent=\"1\" source=\"13\" target=\"14\" edge=\"1\"><Transition transitionId=\"92a89901-c9cc-4aa8-a7b2-5dc54fe2e566\" name=\"OUTPUT\" evaluatorType=\"OUTPUT\" outputField=\"RET\" scriptingEngine=\"\" variable=\"\" expression=\"0\" negate=\"false\" isCompleteMatch=\"true\" weight=\"1\" as=\"value\"/><mxGeometry relative=\"1\" as=\"geometry\"/></mxCell><mxCell id=\"16\" parent=\"1\" source=\"14\" target=\"3\" edge=\"1\"><Transition transitionId=\"ea2984d4-2dd5-402a-82b1-414ac1305888\" name=\"OUTPUT\" evaluatorType=\"OUTPUT\" outputField=\"RET\" scriptingEngine=\"\" variable=\"\" expression=\"0\" negate=\"false\" isCompleteMatch=\"true\" weight=\"1\" as=\"value\"/><mxGeometry relative=\"1\" as=\"geometry\"/></mxCell><mxCell id=\"14\" style=\"symbol;image=mxgraph/images/symbols/hostcommandaction.png\" parent=\"1\" vertex=\"1\"><State actionClass=\"HostCommandAction\" allowsExtractVariables=\"1\" extJsPropertiesClass=\"IPautomata.view.designer.actions.HostCommandActionPropertiesPanel\" icon=\"mxgraph/images/symbols/hostcommandaction.png\" name=\"Create new conversation with Amelia - Ergun\" stateType=\"NormalState\" notes=\"\" stateId=\"767cc041-4ee3-42bd-89ad-444f129a61d9\" as=\"value\"><Container as=\"container\"><Array as=\"fields\"><Field name=\"connectionGroup\" currentValue=\"ipmon\"><Array as=\"extraArgs\"/></Field><Field name=\"command\" currentValue=\"curl -k -X POST -H 'X-Amelia-Rest-Token:${accessToken}' -H 'Content-Type:application/json' -H 'Accept-Charset:UTF-8' --url 'https://${ameliaServer}/AmeliaRest/api/v1/conversations/push-new-with-amelia' --data '{&quot;domain&quot;:&quot;${domain}&quot;,&quot;description&quot;:&quot;${description}&quot;,&quot;userEmail&quot;:&quot;${emailAddress}&quot;,&quot;initialBpnVariables&quot;:{&quot;hostName&quot;:&quot;ipmon01.stg-ipsoft.nj3.ipcenter.com&quot;,&quot;user_type&quot;:&quot;event&quot;,&quot;processName&quot;:&quot;serviceStartKrm&quot;,&quot;systemProcessName&quot;:&quot;httpd&quot;,&quot;user_source&quot;:&quot;amelia_api&quot;, &quot;bpnTaskName&quot;:&quot;Amelia_BPN_startService&quot;, &quot;taskSubject&quot;:&quot;${description}&quot;}}'\"><Array as=\"extraArgs\"/></Field><Field name=\"secureStdout\" currentValue=\"false\"><Array as=\"extraArgs\"/></Field><Field name=\"secureStdErr\" currentValue=\"false\"><Array as=\"extraArgs\"/></Field><Field name=\"autoTrim\" currentValue=\"false\"><Array as=\"extraArgs\"/></Field><Field name=\"resetPrompt\" currentValue=\"false\"><Array as=\"extraArgs\"/></Field><Field name=\"softTimeout\" currentValue=\"10\" defaultValue=\"5\"><Array as=\"extraArgs\"/></Field><Field name=\"hardTimeout\" currentValue=\"20\" defaultValue=\"60\"><Array as=\"extraArgs\"/></Field></Array><Array as=\"containers\"/></Container></State><mxGeometry x=\"850\" y=\"410\" width=\"40\" height=\"40\" as=\"geometry\"/></mxCell><mxCell id=\"3\" style=\"symbol;image=mxgraph/images/symbols/successaction.png\" parent=\"1\" vertex=\"1\"><State allowsExtractVariables=\"0\" icon=\"mxgraph/images/symbols/successaction.png\" name=\"Success\" stateType=\"SuccessState\" stateId=\"e2061044-6720-403c-8e38-e1c821e16d9c\" as=\"value\"><Container as=\"container\"><Array as=\"fields\"/><Array as=\"containers\"/></Container></State><mxGeometry x=\"1060\" y=\"410\" width=\"40\" height=\"40\" as=\"geometry\"/></mxCell></root></mxGraphModel>",
            "equivalentEngineerTime": 0.0,
            "executionMode": "AUTOMATIC",
            "id": 14188,
            "linkedAutomatons": [],
            "matcherDsl": "workflowDefinitionName=ITIL V3 Incident Management Event&&ticketType=EVENT&&tags~=demo&&workflowActivityName=Dispatch AmeliaDispatchTask.",
            "name": "Create New Conversation Via AmeliaAPI",
            "newExecutionThrottleCount": 0,
            "newExecutionThrottlePeriodSeconds": 0,
            "notes": "",
            "purpose": "DIAGNOSIS",
            "tags": [
                "demo"
            ],
            "template": False,
            "versionId": 16484,
            "versionNumber": 21
        }
    )

    category_node = Node(child_category.id, child_category)
    automata_node = Node(child_automata.id, child_automata)

    root_node.children.append(category_node)
    root_node.children.append(automata_node)

    test_input = root_node
    expected_output = [root_node, category_node, automata_node]

    return test_input, expected_output


@pytest.fixture(scope="package")
def generate_category_nodes():
    root_list = []
    root_category = Category(
        {'name': 'IPsoft_automata_root', 'id': 'root', 'clientId': 0, 'parentId': None, 'deleted': False})
    root_list.append(root_category)
    for i in range(5):
        root_list.append(Category(
        {'name': 'top_category', 'id': i, 'clientId': 0, 'parentId': root_category.id, 'deleted': False}))

    target = root_list[random.randint(0,5)]
    expected_output = target

    return target, root_list, expected_output


@pytest.fixture(scope="package")
def generate_automaton_nodes():
    root_list = []
    root_category = Category(
        {'name': 'IPsoft_automata_root', 'id': 'root', 'clientId': 0, 'parentId': None, 'deleted': False})
    root_list.append(root_category)
    for i in range(5):
        root_list.append(Automaton(
        {'name': 'top_category', 'id': i, 'clientId': 0, 'parentId': root_category.id, 'deleted': False}))

    target = root_list[random.randint(0,5)]
    expected_output = target

    return target, root_list, expected_output
