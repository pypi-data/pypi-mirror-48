# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: InfoType.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='InfoType.proto',
  package='InfoType',
  syntax='proto2',
  serialized_pb=_b('\n\x0eInfoType.proto\x12\x08InfoType*?\n\x08InfoType\x12\x0b\n\x07General\x10\x00\x12\n\n\x06Health\x10\x01\x12\x11\n\rHealthCompare\x10\x02\x12\x07\n\x03KPI\x10\x03\x42\x32\n\"com.parallelmachines.reflex.commonB\x0cInfoTypeJava')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

_INFOTYPE = _descriptor.EnumDescriptor(
  name='InfoType',
  full_name='InfoType.InfoType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='General', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Health', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='HealthCompare', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='KPI', index=3, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=28,
  serialized_end=91,
)
_sym_db.RegisterEnumDescriptor(_INFOTYPE)

InfoType = enum_type_wrapper.EnumTypeWrapper(_INFOTYPE)
General = 0
Health = 1
HealthCompare = 2
KPI = 3


DESCRIPTOR.enum_types_by_name['InfoType'] = _INFOTYPE


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\"com.parallelmachines.reflex.commonB\014InfoTypeJava'))
# @@protoc_insertion_point(module_scope)
